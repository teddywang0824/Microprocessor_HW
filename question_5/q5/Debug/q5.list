
q5.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004758  08000130  08000130  00001130  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000037c  08004888  08004888  00005888  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004c04  08004c04  000061e8  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08004c04  08004c04  00005c04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004c0c  08004c0c  000061e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004c0c  08004c0c  00005c0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08004c10  08004c10  00005c10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001e8  20000000  08004c14  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000018c  200001e8  08004dfc  000061e8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000374  08004dfc  00006374  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000061e8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001b33  00000000  00000000  00006211  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000706  00000000  00000000  00007d44  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000220  00000000  00000000  00008450  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000017e  00000000  00000000  00008670  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000a5f3  00000000  00000000  000087ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000268a  00000000  00000000  00012de1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00038e1c  00000000  00000000  0001546b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0004e287  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000186c  00000000  00000000  0004e2cc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000003e  00000000  00000000  0004fb38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	200001e8 	.word	0x200001e8
 800014c:	00000000 	.word	0x00000000
 8000150:	08004870 	.word	0x08004870

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	200001ec 	.word	0x200001ec
 800016c:	08004870 	.word	0x08004870

08000170 <strlen>:
 8000170:	4603      	mov	r3, r0
 8000172:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000176:	2a00      	cmp	r2, #0
 8000178:	d1fb      	bne.n	8000172 <strlen+0x2>
 800017a:	1a18      	subs	r0, r3, r0
 800017c:	3801      	subs	r0, #1
 800017e:	4770      	bx	lr

08000180 <__aeabi_fmul>:
 8000180:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000184:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000188:	bf1e      	ittt	ne
 800018a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 800018e:	ea92 0f0c 	teqne	r2, ip
 8000192:	ea93 0f0c 	teqne	r3, ip
 8000196:	d06f      	beq.n	8000278 <__aeabi_fmul+0xf8>
 8000198:	441a      	add	r2, r3
 800019a:	ea80 0c01 	eor.w	ip, r0, r1
 800019e:	0240      	lsls	r0, r0, #9
 80001a0:	bf18      	it	ne
 80001a2:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 80001a6:	d01e      	beq.n	80001e6 <__aeabi_fmul+0x66>
 80001a8:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 80001ac:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 80001b0:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80001b4:	fba0 3101 	umull	r3, r1, r0, r1
 80001b8:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 80001bc:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 80001c0:	bf3e      	ittt	cc
 80001c2:	0049      	lslcc	r1, r1, #1
 80001c4:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80001c8:	005b      	lslcc	r3, r3, #1
 80001ca:	ea40 0001 	orr.w	r0, r0, r1
 80001ce:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 80001d2:	2afd      	cmp	r2, #253	@ 0xfd
 80001d4:	d81d      	bhi.n	8000212 <__aeabi_fmul+0x92>
 80001d6:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 80001da:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 80001de:	bf08      	it	eq
 80001e0:	f020 0001 	biceq.w	r0, r0, #1
 80001e4:	4770      	bx	lr
 80001e6:	f090 0f00 	teq	r0, #0
 80001ea:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 80001ee:	bf08      	it	eq
 80001f0:	0249      	lsleq	r1, r1, #9
 80001f2:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 80001f6:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 80001fa:	3a7f      	subs	r2, #127	@ 0x7f
 80001fc:	bfc2      	ittt	gt
 80001fe:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000202:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000206:	4770      	bxgt	lr
 8000208:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 800020c:	f04f 0300 	mov.w	r3, #0
 8000210:	3a01      	subs	r2, #1
 8000212:	dc5d      	bgt.n	80002d0 <__aeabi_fmul+0x150>
 8000214:	f112 0f19 	cmn.w	r2, #25
 8000218:	bfdc      	itt	le
 800021a:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 800021e:	4770      	bxle	lr
 8000220:	f1c2 0200 	rsb	r2, r2, #0
 8000224:	0041      	lsls	r1, r0, #1
 8000226:	fa21 f102 	lsr.w	r1, r1, r2
 800022a:	f1c2 0220 	rsb	r2, r2, #32
 800022e:	fa00 fc02 	lsl.w	ip, r0, r2
 8000232:	ea5f 0031 	movs.w	r0, r1, rrx
 8000236:	f140 0000 	adc.w	r0, r0, #0
 800023a:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 800023e:	bf08      	it	eq
 8000240:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000244:	4770      	bx	lr
 8000246:	f092 0f00 	teq	r2, #0
 800024a:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 800024e:	bf02      	ittt	eq
 8000250:	0040      	lsleq	r0, r0, #1
 8000252:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000256:	3a01      	subeq	r2, #1
 8000258:	d0f9      	beq.n	800024e <__aeabi_fmul+0xce>
 800025a:	ea40 000c 	orr.w	r0, r0, ip
 800025e:	f093 0f00 	teq	r3, #0
 8000262:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000266:	bf02      	ittt	eq
 8000268:	0049      	lsleq	r1, r1, #1
 800026a:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 800026e:	3b01      	subeq	r3, #1
 8000270:	d0f9      	beq.n	8000266 <__aeabi_fmul+0xe6>
 8000272:	ea41 010c 	orr.w	r1, r1, ip
 8000276:	e78f      	b.n	8000198 <__aeabi_fmul+0x18>
 8000278:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 800027c:	ea92 0f0c 	teq	r2, ip
 8000280:	bf18      	it	ne
 8000282:	ea93 0f0c 	teqne	r3, ip
 8000286:	d00a      	beq.n	800029e <__aeabi_fmul+0x11e>
 8000288:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 800028c:	bf18      	it	ne
 800028e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000292:	d1d8      	bne.n	8000246 <__aeabi_fmul+0xc6>
 8000294:	ea80 0001 	eor.w	r0, r0, r1
 8000298:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 800029c:	4770      	bx	lr
 800029e:	f090 0f00 	teq	r0, #0
 80002a2:	bf17      	itett	ne
 80002a4:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 80002a8:	4608      	moveq	r0, r1
 80002aa:	f091 0f00 	teqne	r1, #0
 80002ae:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 80002b2:	d014      	beq.n	80002de <__aeabi_fmul+0x15e>
 80002b4:	ea92 0f0c 	teq	r2, ip
 80002b8:	d101      	bne.n	80002be <__aeabi_fmul+0x13e>
 80002ba:	0242      	lsls	r2, r0, #9
 80002bc:	d10f      	bne.n	80002de <__aeabi_fmul+0x15e>
 80002be:	ea93 0f0c 	teq	r3, ip
 80002c2:	d103      	bne.n	80002cc <__aeabi_fmul+0x14c>
 80002c4:	024b      	lsls	r3, r1, #9
 80002c6:	bf18      	it	ne
 80002c8:	4608      	movne	r0, r1
 80002ca:	d108      	bne.n	80002de <__aeabi_fmul+0x15e>
 80002cc:	ea80 0001 	eor.w	r0, r0, r1
 80002d0:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 80002d4:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 80002d8:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 80002dc:	4770      	bx	lr
 80002de:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 80002e2:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 80002e6:	4770      	bx	lr

080002e8 <__aeabi_drsub>:
 80002e8:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002ec:	e002      	b.n	80002f4 <__adddf3>
 80002ee:	bf00      	nop

080002f0 <__aeabi_dsub>:
 80002f0:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002f4 <__adddf3>:
 80002f4:	b530      	push	{r4, r5, lr}
 80002f6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002fa:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002fe:	ea94 0f05 	teq	r4, r5
 8000302:	bf08      	it	eq
 8000304:	ea90 0f02 	teqeq	r0, r2
 8000308:	bf1f      	itttt	ne
 800030a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800030e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000312:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000316:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800031a:	f000 80e2 	beq.w	80004e2 <__adddf3+0x1ee>
 800031e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000322:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000326:	bfb8      	it	lt
 8000328:	426d      	neglt	r5, r5
 800032a:	dd0c      	ble.n	8000346 <__adddf3+0x52>
 800032c:	442c      	add	r4, r5
 800032e:	ea80 0202 	eor.w	r2, r0, r2
 8000332:	ea81 0303 	eor.w	r3, r1, r3
 8000336:	ea82 0000 	eor.w	r0, r2, r0
 800033a:	ea83 0101 	eor.w	r1, r3, r1
 800033e:	ea80 0202 	eor.w	r2, r0, r2
 8000342:	ea81 0303 	eor.w	r3, r1, r3
 8000346:	2d36      	cmp	r5, #54	@ 0x36
 8000348:	bf88      	it	hi
 800034a:	bd30      	pophi	{r4, r5, pc}
 800034c:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000350:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000354:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000358:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800035c:	d002      	beq.n	8000364 <__adddf3+0x70>
 800035e:	4240      	negs	r0, r0
 8000360:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000364:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000368:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800036c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000370:	d002      	beq.n	8000378 <__adddf3+0x84>
 8000372:	4252      	negs	r2, r2
 8000374:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000378:	ea94 0f05 	teq	r4, r5
 800037c:	f000 80a7 	beq.w	80004ce <__adddf3+0x1da>
 8000380:	f1a4 0401 	sub.w	r4, r4, #1
 8000384:	f1d5 0e20 	rsbs	lr, r5, #32
 8000388:	db0d      	blt.n	80003a6 <__adddf3+0xb2>
 800038a:	fa02 fc0e 	lsl.w	ip, r2, lr
 800038e:	fa22 f205 	lsr.w	r2, r2, r5
 8000392:	1880      	adds	r0, r0, r2
 8000394:	f141 0100 	adc.w	r1, r1, #0
 8000398:	fa03 f20e 	lsl.w	r2, r3, lr
 800039c:	1880      	adds	r0, r0, r2
 800039e:	fa43 f305 	asr.w	r3, r3, r5
 80003a2:	4159      	adcs	r1, r3
 80003a4:	e00e      	b.n	80003c4 <__adddf3+0xd0>
 80003a6:	f1a5 0520 	sub.w	r5, r5, #32
 80003aa:	f10e 0e20 	add.w	lr, lr, #32
 80003ae:	2a01      	cmp	r2, #1
 80003b0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80003b4:	bf28      	it	cs
 80003b6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80003ba:	fa43 f305 	asr.w	r3, r3, r5
 80003be:	18c0      	adds	r0, r0, r3
 80003c0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80003c4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003c8:	d507      	bpl.n	80003da <__adddf3+0xe6>
 80003ca:	f04f 0e00 	mov.w	lr, #0
 80003ce:	f1dc 0c00 	rsbs	ip, ip, #0
 80003d2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003d6:	eb6e 0101 	sbc.w	r1, lr, r1
 80003da:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003de:	d31b      	bcc.n	8000418 <__adddf3+0x124>
 80003e0:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003e4:	d30c      	bcc.n	8000400 <__adddf3+0x10c>
 80003e6:	0849      	lsrs	r1, r1, #1
 80003e8:	ea5f 0030 	movs.w	r0, r0, rrx
 80003ec:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003f0:	f104 0401 	add.w	r4, r4, #1
 80003f4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003f8:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003fc:	f080 809a 	bcs.w	8000534 <__adddf3+0x240>
 8000400:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000404:	bf08      	it	eq
 8000406:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800040a:	f150 0000 	adcs.w	r0, r0, #0
 800040e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000412:	ea41 0105 	orr.w	r1, r1, r5
 8000416:	bd30      	pop	{r4, r5, pc}
 8000418:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800041c:	4140      	adcs	r0, r0
 800041e:	eb41 0101 	adc.w	r1, r1, r1
 8000422:	3c01      	subs	r4, #1
 8000424:	bf28      	it	cs
 8000426:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 800042a:	d2e9      	bcs.n	8000400 <__adddf3+0x10c>
 800042c:	f091 0f00 	teq	r1, #0
 8000430:	bf04      	itt	eq
 8000432:	4601      	moveq	r1, r0
 8000434:	2000      	moveq	r0, #0
 8000436:	fab1 f381 	clz	r3, r1
 800043a:	bf08      	it	eq
 800043c:	3320      	addeq	r3, #32
 800043e:	f1a3 030b 	sub.w	r3, r3, #11
 8000442:	f1b3 0220 	subs.w	r2, r3, #32
 8000446:	da0c      	bge.n	8000462 <__adddf3+0x16e>
 8000448:	320c      	adds	r2, #12
 800044a:	dd08      	ble.n	800045e <__adddf3+0x16a>
 800044c:	f102 0c14 	add.w	ip, r2, #20
 8000450:	f1c2 020c 	rsb	r2, r2, #12
 8000454:	fa01 f00c 	lsl.w	r0, r1, ip
 8000458:	fa21 f102 	lsr.w	r1, r1, r2
 800045c:	e00c      	b.n	8000478 <__adddf3+0x184>
 800045e:	f102 0214 	add.w	r2, r2, #20
 8000462:	bfd8      	it	le
 8000464:	f1c2 0c20 	rsble	ip, r2, #32
 8000468:	fa01 f102 	lsl.w	r1, r1, r2
 800046c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000470:	bfdc      	itt	le
 8000472:	ea41 010c 	orrle.w	r1, r1, ip
 8000476:	4090      	lslle	r0, r2
 8000478:	1ae4      	subs	r4, r4, r3
 800047a:	bfa2      	ittt	ge
 800047c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000480:	4329      	orrge	r1, r5
 8000482:	bd30      	popge	{r4, r5, pc}
 8000484:	ea6f 0404 	mvn.w	r4, r4
 8000488:	3c1f      	subs	r4, #31
 800048a:	da1c      	bge.n	80004c6 <__adddf3+0x1d2>
 800048c:	340c      	adds	r4, #12
 800048e:	dc0e      	bgt.n	80004ae <__adddf3+0x1ba>
 8000490:	f104 0414 	add.w	r4, r4, #20
 8000494:	f1c4 0220 	rsb	r2, r4, #32
 8000498:	fa20 f004 	lsr.w	r0, r0, r4
 800049c:	fa01 f302 	lsl.w	r3, r1, r2
 80004a0:	ea40 0003 	orr.w	r0, r0, r3
 80004a4:	fa21 f304 	lsr.w	r3, r1, r4
 80004a8:	ea45 0103 	orr.w	r1, r5, r3
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	f1c4 040c 	rsb	r4, r4, #12
 80004b2:	f1c4 0220 	rsb	r2, r4, #32
 80004b6:	fa20 f002 	lsr.w	r0, r0, r2
 80004ba:	fa01 f304 	lsl.w	r3, r1, r4
 80004be:	ea40 0003 	orr.w	r0, r0, r3
 80004c2:	4629      	mov	r1, r5
 80004c4:	bd30      	pop	{r4, r5, pc}
 80004c6:	fa21 f004 	lsr.w	r0, r1, r4
 80004ca:	4629      	mov	r1, r5
 80004cc:	bd30      	pop	{r4, r5, pc}
 80004ce:	f094 0f00 	teq	r4, #0
 80004d2:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004d6:	bf06      	itte	eq
 80004d8:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004dc:	3401      	addeq	r4, #1
 80004de:	3d01      	subne	r5, #1
 80004e0:	e74e      	b.n	8000380 <__adddf3+0x8c>
 80004e2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004e6:	bf18      	it	ne
 80004e8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004ec:	d029      	beq.n	8000542 <__adddf3+0x24e>
 80004ee:	ea94 0f05 	teq	r4, r5
 80004f2:	bf08      	it	eq
 80004f4:	ea90 0f02 	teqeq	r0, r2
 80004f8:	d005      	beq.n	8000506 <__adddf3+0x212>
 80004fa:	ea54 0c00 	orrs.w	ip, r4, r0
 80004fe:	bf04      	itt	eq
 8000500:	4619      	moveq	r1, r3
 8000502:	4610      	moveq	r0, r2
 8000504:	bd30      	pop	{r4, r5, pc}
 8000506:	ea91 0f03 	teq	r1, r3
 800050a:	bf1e      	ittt	ne
 800050c:	2100      	movne	r1, #0
 800050e:	2000      	movne	r0, #0
 8000510:	bd30      	popne	{r4, r5, pc}
 8000512:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000516:	d105      	bne.n	8000524 <__adddf3+0x230>
 8000518:	0040      	lsls	r0, r0, #1
 800051a:	4149      	adcs	r1, r1
 800051c:	bf28      	it	cs
 800051e:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 8000522:	bd30      	pop	{r4, r5, pc}
 8000524:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000528:	bf3c      	itt	cc
 800052a:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 800052e:	bd30      	popcc	{r4, r5, pc}
 8000530:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000534:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000538:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800053c:	f04f 0000 	mov.w	r0, #0
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000546:	bf1a      	itte	ne
 8000548:	4619      	movne	r1, r3
 800054a:	4610      	movne	r0, r2
 800054c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000550:	bf1c      	itt	ne
 8000552:	460b      	movne	r3, r1
 8000554:	4602      	movne	r2, r0
 8000556:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800055a:	bf06      	itte	eq
 800055c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000560:	ea91 0f03 	teqeq	r1, r3
 8000564:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000568:	bd30      	pop	{r4, r5, pc}
 800056a:	bf00      	nop

0800056c <__aeabi_ui2d>:
 800056c:	f090 0f00 	teq	r0, #0
 8000570:	bf04      	itt	eq
 8000572:	2100      	moveq	r1, #0
 8000574:	4770      	bxeq	lr
 8000576:	b530      	push	{r4, r5, lr}
 8000578:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800057c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000580:	f04f 0500 	mov.w	r5, #0
 8000584:	f04f 0100 	mov.w	r1, #0
 8000588:	e750      	b.n	800042c <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_i2d>:
 800058c:	f090 0f00 	teq	r0, #0
 8000590:	bf04      	itt	eq
 8000592:	2100      	moveq	r1, #0
 8000594:	4770      	bxeq	lr
 8000596:	b530      	push	{r4, r5, lr}
 8000598:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800059c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005a0:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80005a4:	bf48      	it	mi
 80005a6:	4240      	negmi	r0, r0
 80005a8:	f04f 0100 	mov.w	r1, #0
 80005ac:	e73e      	b.n	800042c <__adddf3+0x138>
 80005ae:	bf00      	nop

080005b0 <__aeabi_f2d>:
 80005b0:	0042      	lsls	r2, r0, #1
 80005b2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80005b6:	ea4f 0131 	mov.w	r1, r1, rrx
 80005ba:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80005be:	bf1f      	itttt	ne
 80005c0:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80005c4:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005c8:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005cc:	4770      	bxne	lr
 80005ce:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005d2:	bf08      	it	eq
 80005d4:	4770      	bxeq	lr
 80005d6:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005da:	bf04      	itt	eq
 80005dc:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005e0:	4770      	bxeq	lr
 80005e2:	b530      	push	{r4, r5, lr}
 80005e4:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005e8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005ec:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005f0:	e71c      	b.n	800042c <__adddf3+0x138>
 80005f2:	bf00      	nop

080005f4 <__aeabi_ul2d>:
 80005f4:	ea50 0201 	orrs.w	r2, r0, r1
 80005f8:	bf08      	it	eq
 80005fa:	4770      	bxeq	lr
 80005fc:	b530      	push	{r4, r5, lr}
 80005fe:	f04f 0500 	mov.w	r5, #0
 8000602:	e00a      	b.n	800061a <__aeabi_l2d+0x16>

08000604 <__aeabi_l2d>:
 8000604:	ea50 0201 	orrs.w	r2, r0, r1
 8000608:	bf08      	it	eq
 800060a:	4770      	bxeq	lr
 800060c:	b530      	push	{r4, r5, lr}
 800060e:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 8000612:	d502      	bpl.n	800061a <__aeabi_l2d+0x16>
 8000614:	4240      	negs	r0, r0
 8000616:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800061a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800061e:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000622:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000626:	f43f aed8 	beq.w	80003da <__adddf3+0xe6>
 800062a:	f04f 0203 	mov.w	r2, #3
 800062e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000632:	bf18      	it	ne
 8000634:	3203      	addne	r2, #3
 8000636:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800063a:	bf18      	it	ne
 800063c:	3203      	addne	r2, #3
 800063e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000642:	f1c2 0320 	rsb	r3, r2, #32
 8000646:	fa00 fc03 	lsl.w	ip, r0, r3
 800064a:	fa20 f002 	lsr.w	r0, r0, r2
 800064e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000652:	ea40 000e 	orr.w	r0, r0, lr
 8000656:	fa21 f102 	lsr.w	r1, r1, r2
 800065a:	4414      	add	r4, r2
 800065c:	e6bd      	b.n	80003da <__adddf3+0xe6>
 800065e:	bf00      	nop

08000660 <__aeabi_dmul>:
 8000660:	b570      	push	{r4, r5, r6, lr}
 8000662:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000666:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800066a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800066e:	bf1d      	ittte	ne
 8000670:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000674:	ea94 0f0c 	teqne	r4, ip
 8000678:	ea95 0f0c 	teqne	r5, ip
 800067c:	f000 f8de 	bleq	800083c <__aeabi_dmul+0x1dc>
 8000680:	442c      	add	r4, r5
 8000682:	ea81 0603 	eor.w	r6, r1, r3
 8000686:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 800068a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800068e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000692:	bf18      	it	ne
 8000694:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000698:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800069c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80006a0:	d038      	beq.n	8000714 <__aeabi_dmul+0xb4>
 80006a2:	fba0 ce02 	umull	ip, lr, r0, r2
 80006a6:	f04f 0500 	mov.w	r5, #0
 80006aa:	fbe1 e502 	umlal	lr, r5, r1, r2
 80006ae:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 80006b2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80006b6:	f04f 0600 	mov.w	r6, #0
 80006ba:	fbe1 5603 	umlal	r5, r6, r1, r3
 80006be:	f09c 0f00 	teq	ip, #0
 80006c2:	bf18      	it	ne
 80006c4:	f04e 0e01 	orrne.w	lr, lr, #1
 80006c8:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006cc:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006d0:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006d4:	d204      	bcs.n	80006e0 <__aeabi_dmul+0x80>
 80006d6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006da:	416d      	adcs	r5, r5
 80006dc:	eb46 0606 	adc.w	r6, r6, r6
 80006e0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006e4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006e8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006ec:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006f0:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006f4:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006f8:	bf88      	it	hi
 80006fa:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006fe:	d81e      	bhi.n	800073e <__aeabi_dmul+0xde>
 8000700:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 8000704:	bf08      	it	eq
 8000706:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800070a:	f150 0000 	adcs.w	r0, r0, #0
 800070e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000712:	bd70      	pop	{r4, r5, r6, pc}
 8000714:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000718:	ea46 0101 	orr.w	r1, r6, r1
 800071c:	ea40 0002 	orr.w	r0, r0, r2
 8000720:	ea81 0103 	eor.w	r1, r1, r3
 8000724:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000728:	bfc2      	ittt	gt
 800072a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800072e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000732:	bd70      	popgt	{r4, r5, r6, pc}
 8000734:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000738:	f04f 0e00 	mov.w	lr, #0
 800073c:	3c01      	subs	r4, #1
 800073e:	f300 80ab 	bgt.w	8000898 <__aeabi_dmul+0x238>
 8000742:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 8000746:	bfde      	ittt	le
 8000748:	2000      	movle	r0, #0
 800074a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 800074e:	bd70      	pople	{r4, r5, r6, pc}
 8000750:	f1c4 0400 	rsb	r4, r4, #0
 8000754:	3c20      	subs	r4, #32
 8000756:	da35      	bge.n	80007c4 <__aeabi_dmul+0x164>
 8000758:	340c      	adds	r4, #12
 800075a:	dc1b      	bgt.n	8000794 <__aeabi_dmul+0x134>
 800075c:	f104 0414 	add.w	r4, r4, #20
 8000760:	f1c4 0520 	rsb	r5, r4, #32
 8000764:	fa00 f305 	lsl.w	r3, r0, r5
 8000768:	fa20 f004 	lsr.w	r0, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea40 0002 	orr.w	r0, r0, r2
 8000774:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000778:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 800077c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000780:	fa21 f604 	lsr.w	r6, r1, r4
 8000784:	eb42 0106 	adc.w	r1, r2, r6
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f1c4 040c 	rsb	r4, r4, #12
 8000798:	f1c4 0520 	rsb	r5, r4, #32
 800079c:	fa00 f304 	lsl.w	r3, r0, r4
 80007a0:	fa20 f005 	lsr.w	r0, r0, r5
 80007a4:	fa01 f204 	lsl.w	r2, r1, r4
 80007a8:	ea40 0002 	orr.w	r0, r0, r2
 80007ac:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007b0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80007b4:	f141 0100 	adc.w	r1, r1, #0
 80007b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007bc:	bf08      	it	eq
 80007be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007c2:	bd70      	pop	{r4, r5, r6, pc}
 80007c4:	f1c4 0520 	rsb	r5, r4, #32
 80007c8:	fa00 f205 	lsl.w	r2, r0, r5
 80007cc:	ea4e 0e02 	orr.w	lr, lr, r2
 80007d0:	fa20 f304 	lsr.w	r3, r0, r4
 80007d4:	fa01 f205 	lsl.w	r2, r1, r5
 80007d8:	ea43 0302 	orr.w	r3, r3, r2
 80007dc:	fa21 f004 	lsr.w	r0, r1, r4
 80007e0:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007e4:	fa21 f204 	lsr.w	r2, r1, r4
 80007e8:	ea20 0002 	bic.w	r0, r0, r2
 80007ec:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007f0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007f4:	bf08      	it	eq
 80007f6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007fa:	bd70      	pop	{r4, r5, r6, pc}
 80007fc:	f094 0f00 	teq	r4, #0
 8000800:	d10f      	bne.n	8000822 <__aeabi_dmul+0x1c2>
 8000802:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 8000806:	0040      	lsls	r0, r0, #1
 8000808:	eb41 0101 	adc.w	r1, r1, r1
 800080c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000810:	bf08      	it	eq
 8000812:	3c01      	subeq	r4, #1
 8000814:	d0f7      	beq.n	8000806 <__aeabi_dmul+0x1a6>
 8000816:	ea41 0106 	orr.w	r1, r1, r6
 800081a:	f095 0f00 	teq	r5, #0
 800081e:	bf18      	it	ne
 8000820:	4770      	bxne	lr
 8000822:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 8000826:	0052      	lsls	r2, r2, #1
 8000828:	eb43 0303 	adc.w	r3, r3, r3
 800082c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000830:	bf08      	it	eq
 8000832:	3d01      	subeq	r5, #1
 8000834:	d0f7      	beq.n	8000826 <__aeabi_dmul+0x1c6>
 8000836:	ea43 0306 	orr.w	r3, r3, r6
 800083a:	4770      	bx	lr
 800083c:	ea94 0f0c 	teq	r4, ip
 8000840:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000844:	bf18      	it	ne
 8000846:	ea95 0f0c 	teqne	r5, ip
 800084a:	d00c      	beq.n	8000866 <__aeabi_dmul+0x206>
 800084c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000850:	bf18      	it	ne
 8000852:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000856:	d1d1      	bne.n	80007fc <__aeabi_dmul+0x19c>
 8000858:	ea81 0103 	eor.w	r1, r1, r3
 800085c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000860:	f04f 0000 	mov.w	r0, #0
 8000864:	bd70      	pop	{r4, r5, r6, pc}
 8000866:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800086a:	bf06      	itte	eq
 800086c:	4610      	moveq	r0, r2
 800086e:	4619      	moveq	r1, r3
 8000870:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000874:	d019      	beq.n	80008aa <__aeabi_dmul+0x24a>
 8000876:	ea94 0f0c 	teq	r4, ip
 800087a:	d102      	bne.n	8000882 <__aeabi_dmul+0x222>
 800087c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000880:	d113      	bne.n	80008aa <__aeabi_dmul+0x24a>
 8000882:	ea95 0f0c 	teq	r5, ip
 8000886:	d105      	bne.n	8000894 <__aeabi_dmul+0x234>
 8000888:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 800088c:	bf1c      	itt	ne
 800088e:	4610      	movne	r0, r2
 8000890:	4619      	movne	r1, r3
 8000892:	d10a      	bne.n	80008aa <__aeabi_dmul+0x24a>
 8000894:	ea81 0103 	eor.w	r1, r1, r3
 8000898:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800089c:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80008a0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80008a4:	f04f 0000 	mov.w	r0, #0
 80008a8:	bd70      	pop	{r4, r5, r6, pc}
 80008aa:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80008ae:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 80008b2:	bd70      	pop	{r4, r5, r6, pc}

080008b4 <__aeabi_ddiv>:
 80008b4:	b570      	push	{r4, r5, r6, lr}
 80008b6:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80008ba:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80008be:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80008c2:	bf1d      	ittte	ne
 80008c4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008c8:	ea94 0f0c 	teqne	r4, ip
 80008cc:	ea95 0f0c 	teqne	r5, ip
 80008d0:	f000 f8a7 	bleq	8000a22 <__aeabi_ddiv+0x16e>
 80008d4:	eba4 0405 	sub.w	r4, r4, r5
 80008d8:	ea81 0e03 	eor.w	lr, r1, r3
 80008dc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008e0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008e4:	f000 8088 	beq.w	80009f8 <__aeabi_ddiv+0x144>
 80008e8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008ec:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008f0:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008f4:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008f8:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008fc:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000900:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000904:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000908:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 800090c:	429d      	cmp	r5, r3
 800090e:	bf08      	it	eq
 8000910:	4296      	cmpeq	r6, r2
 8000912:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 8000916:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 800091a:	d202      	bcs.n	8000922 <__aeabi_ddiv+0x6e>
 800091c:	085b      	lsrs	r3, r3, #1
 800091e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000922:	1ab6      	subs	r6, r6, r2
 8000924:	eb65 0503 	sbc.w	r5, r5, r3
 8000928:	085b      	lsrs	r3, r3, #1
 800092a:	ea4f 0232 	mov.w	r2, r2, rrx
 800092e:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8000932:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 000c 	orrcs.w	r0, r0, ip
 8000948:	085b      	lsrs	r3, r3, #1
 800094a:	ea4f 0232 	mov.w	r2, r2, rrx
 800094e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000952:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000956:	bf22      	ittt	cs
 8000958:	1ab6      	subcs	r6, r6, r2
 800095a:	4675      	movcs	r5, lr
 800095c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000960:	085b      	lsrs	r3, r3, #1
 8000962:	ea4f 0232 	mov.w	r2, r2, rrx
 8000966:	ebb6 0e02 	subs.w	lr, r6, r2
 800096a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800096e:	bf22      	ittt	cs
 8000970:	1ab6      	subcs	r6, r6, r2
 8000972:	4675      	movcs	r5, lr
 8000974:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000978:	085b      	lsrs	r3, r3, #1
 800097a:	ea4f 0232 	mov.w	r2, r2, rrx
 800097e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000982:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000986:	bf22      	ittt	cs
 8000988:	1ab6      	subcs	r6, r6, r2
 800098a:	4675      	movcs	r5, lr
 800098c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000990:	ea55 0e06 	orrs.w	lr, r5, r6
 8000994:	d018      	beq.n	80009c8 <__aeabi_ddiv+0x114>
 8000996:	ea4f 1505 	mov.w	r5, r5, lsl #4
 800099a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 800099e:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80009a2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80009a6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80009aa:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80009ae:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80009b2:	d1c0      	bne.n	8000936 <__aeabi_ddiv+0x82>
 80009b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009b8:	d10b      	bne.n	80009d2 <__aeabi_ddiv+0x11e>
 80009ba:	ea41 0100 	orr.w	r1, r1, r0
 80009be:	f04f 0000 	mov.w	r0, #0
 80009c2:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 80009c6:	e7b6      	b.n	8000936 <__aeabi_ddiv+0x82>
 80009c8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009cc:	bf04      	itt	eq
 80009ce:	4301      	orreq	r1, r0
 80009d0:	2000      	moveq	r0, #0
 80009d2:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009d6:	bf88      	it	hi
 80009d8:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009dc:	f63f aeaf 	bhi.w	800073e <__aeabi_dmul+0xde>
 80009e0:	ebb5 0c03 	subs.w	ip, r5, r3
 80009e4:	bf04      	itt	eq
 80009e6:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009ea:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009ee:	f150 0000 	adcs.w	r0, r0, #0
 80009f2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009f6:	bd70      	pop	{r4, r5, r6, pc}
 80009f8:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009fc:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000a00:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000a04:	bfc2      	ittt	gt
 8000a06:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000a0a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000a0e:	bd70      	popgt	{r4, r5, r6, pc}
 8000a10:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000a14:	f04f 0e00 	mov.w	lr, #0
 8000a18:	3c01      	subs	r4, #1
 8000a1a:	e690      	b.n	800073e <__aeabi_dmul+0xde>
 8000a1c:	ea45 0e06 	orr.w	lr, r5, r6
 8000a20:	e68d      	b.n	800073e <__aeabi_dmul+0xde>
 8000a22:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000a26:	ea94 0f0c 	teq	r4, ip
 8000a2a:	bf08      	it	eq
 8000a2c:	ea95 0f0c 	teqeq	r5, ip
 8000a30:	f43f af3b 	beq.w	80008aa <__aeabi_dmul+0x24a>
 8000a34:	ea94 0f0c 	teq	r4, ip
 8000a38:	d10a      	bne.n	8000a50 <__aeabi_ddiv+0x19c>
 8000a3a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a3e:	f47f af34 	bne.w	80008aa <__aeabi_dmul+0x24a>
 8000a42:	ea95 0f0c 	teq	r5, ip
 8000a46:	f47f af25 	bne.w	8000894 <__aeabi_dmul+0x234>
 8000a4a:	4610      	mov	r0, r2
 8000a4c:	4619      	mov	r1, r3
 8000a4e:	e72c      	b.n	80008aa <__aeabi_dmul+0x24a>
 8000a50:	ea95 0f0c 	teq	r5, ip
 8000a54:	d106      	bne.n	8000a64 <__aeabi_ddiv+0x1b0>
 8000a56:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a5a:	f43f aefd 	beq.w	8000858 <__aeabi_dmul+0x1f8>
 8000a5e:	4610      	mov	r0, r2
 8000a60:	4619      	mov	r1, r3
 8000a62:	e722      	b.n	80008aa <__aeabi_dmul+0x24a>
 8000a64:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a68:	bf18      	it	ne
 8000a6a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a6e:	f47f aec5 	bne.w	80007fc <__aeabi_dmul+0x19c>
 8000a72:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a76:	f47f af0d 	bne.w	8000894 <__aeabi_dmul+0x234>
 8000a7a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a7e:	f47f aeeb 	bne.w	8000858 <__aeabi_dmul+0x1f8>
 8000a82:	e712      	b.n	80008aa <__aeabi_dmul+0x24a>

08000a84 <__gedf2>:
 8000a84:	f04f 3cff 	mov.w	ip, #4294967295
 8000a88:	e006      	b.n	8000a98 <__cmpdf2+0x4>
 8000a8a:	bf00      	nop

08000a8c <__ledf2>:
 8000a8c:	f04f 0c01 	mov.w	ip, #1
 8000a90:	e002      	b.n	8000a98 <__cmpdf2+0x4>
 8000a92:	bf00      	nop

08000a94 <__cmpdf2>:
 8000a94:	f04f 0c01 	mov.w	ip, #1
 8000a98:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a9c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa8:	bf18      	it	ne
 8000aaa:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000aae:	d01b      	beq.n	8000ae8 <__cmpdf2+0x54>
 8000ab0:	b001      	add	sp, #4
 8000ab2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000ab6:	bf0c      	ite	eq
 8000ab8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000abc:	ea91 0f03 	teqne	r1, r3
 8000ac0:	bf02      	ittt	eq
 8000ac2:	ea90 0f02 	teqeq	r0, r2
 8000ac6:	2000      	moveq	r0, #0
 8000ac8:	4770      	bxeq	lr
 8000aca:	f110 0f00 	cmn.w	r0, #0
 8000ace:	ea91 0f03 	teq	r1, r3
 8000ad2:	bf58      	it	pl
 8000ad4:	4299      	cmppl	r1, r3
 8000ad6:	bf08      	it	eq
 8000ad8:	4290      	cmpeq	r0, r2
 8000ada:	bf2c      	ite	cs
 8000adc:	17d8      	asrcs	r0, r3, #31
 8000ade:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000ae2:	f040 0001 	orr.w	r0, r0, #1
 8000ae6:	4770      	bx	lr
 8000ae8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aec:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000af0:	d102      	bne.n	8000af8 <__cmpdf2+0x64>
 8000af2:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000af6:	d107      	bne.n	8000b08 <__cmpdf2+0x74>
 8000af8:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000afc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b00:	d1d6      	bne.n	8000ab0 <__cmpdf2+0x1c>
 8000b02:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b06:	d0d3      	beq.n	8000ab0 <__cmpdf2+0x1c>
 8000b08:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000b0c:	4770      	bx	lr
 8000b0e:	bf00      	nop

08000b10 <__aeabi_cdrcmple>:
 8000b10:	4684      	mov	ip, r0
 8000b12:	4610      	mov	r0, r2
 8000b14:	4662      	mov	r2, ip
 8000b16:	468c      	mov	ip, r1
 8000b18:	4619      	mov	r1, r3
 8000b1a:	4663      	mov	r3, ip
 8000b1c:	e000      	b.n	8000b20 <__aeabi_cdcmpeq>
 8000b1e:	bf00      	nop

08000b20 <__aeabi_cdcmpeq>:
 8000b20:	b501      	push	{r0, lr}
 8000b22:	f7ff ffb7 	bl	8000a94 <__cmpdf2>
 8000b26:	2800      	cmp	r0, #0
 8000b28:	bf48      	it	mi
 8000b2a:	f110 0f00 	cmnmi.w	r0, #0
 8000b2e:	bd01      	pop	{r0, pc}

08000b30 <__aeabi_dcmpeq>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff fff4 	bl	8000b20 <__aeabi_cdcmpeq>
 8000b38:	bf0c      	ite	eq
 8000b3a:	2001      	moveq	r0, #1
 8000b3c:	2000      	movne	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmplt>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffea 	bl	8000b20 <__aeabi_cdcmpeq>
 8000b4c:	bf34      	ite	cc
 8000b4e:	2001      	movcc	r0, #1
 8000b50:	2000      	movcs	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmple>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffe0 	bl	8000b20 <__aeabi_cdcmpeq>
 8000b60:	bf94      	ite	ls
 8000b62:	2001      	movls	r0, #1
 8000b64:	2000      	movhi	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpge>:
 8000b6c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b70:	f7ff ffce 	bl	8000b10 <__aeabi_cdrcmple>
 8000b74:	bf94      	ite	ls
 8000b76:	2001      	movls	r0, #1
 8000b78:	2000      	movhi	r0, #0
 8000b7a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b7e:	bf00      	nop

08000b80 <__aeabi_dcmpgt>:
 8000b80:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b84:	f7ff ffc4 	bl	8000b10 <__aeabi_cdrcmple>
 8000b88:	bf34      	ite	cc
 8000b8a:	2001      	movcc	r0, #1
 8000b8c:	2000      	movcs	r0, #0
 8000b8e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b92:	bf00      	nop

08000b94 <__aeabi_dcmpun>:
 8000b94:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b98:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b9c:	d102      	bne.n	8000ba4 <__aeabi_dcmpun+0x10>
 8000b9e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ba2:	d10a      	bne.n	8000bba <__aeabi_dcmpun+0x26>
 8000ba4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ba8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000bac:	d102      	bne.n	8000bb4 <__aeabi_dcmpun+0x20>
 8000bae:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000bb2:	d102      	bne.n	8000bba <__aeabi_dcmpun+0x26>
 8000bb4:	f04f 0000 	mov.w	r0, #0
 8000bb8:	4770      	bx	lr
 8000bba:	f04f 0001 	mov.w	r0, #1
 8000bbe:	4770      	bx	lr

08000bc0 <__aeabi_d2iz>:
 8000bc0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bc4:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000bc8:	d215      	bcs.n	8000bf6 <__aeabi_d2iz+0x36>
 8000bca:	d511      	bpl.n	8000bf0 <__aeabi_d2iz+0x30>
 8000bcc:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000bd0:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bd4:	d912      	bls.n	8000bfc <__aeabi_d2iz+0x3c>
 8000bd6:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bda:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bde:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000be2:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000be6:	fa23 f002 	lsr.w	r0, r3, r2
 8000bea:	bf18      	it	ne
 8000bec:	4240      	negne	r0, r0
 8000bee:	4770      	bx	lr
 8000bf0:	f04f 0000 	mov.w	r0, #0
 8000bf4:	4770      	bx	lr
 8000bf6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bfa:	d105      	bne.n	8000c08 <__aeabi_d2iz+0x48>
 8000bfc:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000c00:	bf08      	it	eq
 8000c02:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000c06:	4770      	bx	lr
 8000c08:	f04f 0000 	mov.w	r0, #0
 8000c0c:	4770      	bx	lr
 8000c0e:	bf00      	nop

08000c10 <__aeabi_frsub>:
 8000c10:	f080 4000 	eor.w	r0, r0, #2147483648	@ 0x80000000
 8000c14:	e002      	b.n	8000c1c <__addsf3>
 8000c16:	bf00      	nop

08000c18 <__aeabi_fsub>:
 8000c18:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000

08000c1c <__addsf3>:
 8000c1c:	0042      	lsls	r2, r0, #1
 8000c1e:	bf1f      	itttt	ne
 8000c20:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000c24:	ea92 0f03 	teqne	r2, r3
 8000c28:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000c2c:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000c30:	d06a      	beq.n	8000d08 <__addsf3+0xec>
 8000c32:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000c36:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000c3a:	bfc1      	itttt	gt
 8000c3c:	18d2      	addgt	r2, r2, r3
 8000c3e:	4041      	eorgt	r1, r0
 8000c40:	4048      	eorgt	r0, r1
 8000c42:	4041      	eorgt	r1, r0
 8000c44:	bfb8      	it	lt
 8000c46:	425b      	neglt	r3, r3
 8000c48:	2b19      	cmp	r3, #25
 8000c4a:	bf88      	it	hi
 8000c4c:	4770      	bxhi	lr
 8000c4e:	f010 4f00 	tst.w	r0, #2147483648	@ 0x80000000
 8000c52:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c56:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
 8000c5a:	bf18      	it	ne
 8000c5c:	4240      	negne	r0, r0
 8000c5e:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000c62:	f441 0100 	orr.w	r1, r1, #8388608	@ 0x800000
 8000c66:	f021 417f 	bic.w	r1, r1, #4278190080	@ 0xff000000
 8000c6a:	bf18      	it	ne
 8000c6c:	4249      	negne	r1, r1
 8000c6e:	ea92 0f03 	teq	r2, r3
 8000c72:	d03f      	beq.n	8000cf4 <__addsf3+0xd8>
 8000c74:	f1a2 0201 	sub.w	r2, r2, #1
 8000c78:	fa41 fc03 	asr.w	ip, r1, r3
 8000c7c:	eb10 000c 	adds.w	r0, r0, ip
 8000c80:	f1c3 0320 	rsb	r3, r3, #32
 8000c84:	fa01 f103 	lsl.w	r1, r1, r3
 8000c88:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000c8c:	d502      	bpl.n	8000c94 <__addsf3+0x78>
 8000c8e:	4249      	negs	r1, r1
 8000c90:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000c94:	f5b0 0f00 	cmp.w	r0, #8388608	@ 0x800000
 8000c98:	d313      	bcc.n	8000cc2 <__addsf3+0xa6>
 8000c9a:	f1b0 7f80 	cmp.w	r0, #16777216	@ 0x1000000
 8000c9e:	d306      	bcc.n	8000cae <__addsf3+0x92>
 8000ca0:	0840      	lsrs	r0, r0, #1
 8000ca2:	ea4f 0131 	mov.w	r1, r1, rrx
 8000ca6:	f102 0201 	add.w	r2, r2, #1
 8000caa:	2afe      	cmp	r2, #254	@ 0xfe
 8000cac:	d251      	bcs.n	8000d52 <__addsf3+0x136>
 8000cae:	f1b1 4f00 	cmp.w	r1, #2147483648	@ 0x80000000
 8000cb2:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000cb6:	bf08      	it	eq
 8000cb8:	f020 0001 	biceq.w	r0, r0, #1
 8000cbc:	ea40 0003 	orr.w	r0, r0, r3
 8000cc0:	4770      	bx	lr
 8000cc2:	0049      	lsls	r1, r1, #1
 8000cc4:	eb40 0000 	adc.w	r0, r0, r0
 8000cc8:	3a01      	subs	r2, #1
 8000cca:	bf28      	it	cs
 8000ccc:	f5b0 0f00 	cmpcs.w	r0, #8388608	@ 0x800000
 8000cd0:	d2ed      	bcs.n	8000cae <__addsf3+0x92>
 8000cd2:	fab0 fc80 	clz	ip, r0
 8000cd6:	f1ac 0c08 	sub.w	ip, ip, #8
 8000cda:	ebb2 020c 	subs.w	r2, r2, ip
 8000cde:	fa00 f00c 	lsl.w	r0, r0, ip
 8000ce2:	bfaa      	itet	ge
 8000ce4:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000ce8:	4252      	neglt	r2, r2
 8000cea:	4318      	orrge	r0, r3
 8000cec:	bfbc      	itt	lt
 8000cee:	40d0      	lsrlt	r0, r2
 8000cf0:	4318      	orrlt	r0, r3
 8000cf2:	4770      	bx	lr
 8000cf4:	f092 0f00 	teq	r2, #0
 8000cf8:	f481 0100 	eor.w	r1, r1, #8388608	@ 0x800000
 8000cfc:	bf06      	itte	eq
 8000cfe:	f480 0000 	eoreq.w	r0, r0, #8388608	@ 0x800000
 8000d02:	3201      	addeq	r2, #1
 8000d04:	3b01      	subne	r3, #1
 8000d06:	e7b5      	b.n	8000c74 <__addsf3+0x58>
 8000d08:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000d0c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000d10:	bf18      	it	ne
 8000d12:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000d16:	d021      	beq.n	8000d5c <__addsf3+0x140>
 8000d18:	ea92 0f03 	teq	r2, r3
 8000d1c:	d004      	beq.n	8000d28 <__addsf3+0x10c>
 8000d1e:	f092 0f00 	teq	r2, #0
 8000d22:	bf08      	it	eq
 8000d24:	4608      	moveq	r0, r1
 8000d26:	4770      	bx	lr
 8000d28:	ea90 0f01 	teq	r0, r1
 8000d2c:	bf1c      	itt	ne
 8000d2e:	2000      	movne	r0, #0
 8000d30:	4770      	bxne	lr
 8000d32:	f012 4f7f 	tst.w	r2, #4278190080	@ 0xff000000
 8000d36:	d104      	bne.n	8000d42 <__addsf3+0x126>
 8000d38:	0040      	lsls	r0, r0, #1
 8000d3a:	bf28      	it	cs
 8000d3c:	f040 4000 	orrcs.w	r0, r0, #2147483648	@ 0x80000000
 8000d40:	4770      	bx	lr
 8000d42:	f112 7200 	adds.w	r2, r2, #33554432	@ 0x2000000
 8000d46:	bf3c      	itt	cc
 8000d48:	f500 0000 	addcc.w	r0, r0, #8388608	@ 0x800000
 8000d4c:	4770      	bxcc	lr
 8000d4e:	f000 4300 	and.w	r3, r0, #2147483648	@ 0x80000000
 8000d52:	f043 40fe 	orr.w	r0, r3, #2130706432	@ 0x7f000000
 8000d56:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000d5a:	4770      	bx	lr
 8000d5c:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000d60:	bf16      	itet	ne
 8000d62:	4608      	movne	r0, r1
 8000d64:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000d68:	4601      	movne	r1, r0
 8000d6a:	0242      	lsls	r2, r0, #9
 8000d6c:	bf06      	itte	eq
 8000d6e:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000d72:	ea90 0f01 	teqeq	r0, r1
 8000d76:	f440 0080 	orrne.w	r0, r0, #4194304	@ 0x400000
 8000d7a:	4770      	bx	lr

08000d7c <__aeabi_ui2f>:
 8000d7c:	f04f 0300 	mov.w	r3, #0
 8000d80:	e004      	b.n	8000d8c <__aeabi_i2f+0x8>
 8000d82:	bf00      	nop

08000d84 <__aeabi_i2f>:
 8000d84:	f010 4300 	ands.w	r3, r0, #2147483648	@ 0x80000000
 8000d88:	bf48      	it	mi
 8000d8a:	4240      	negmi	r0, r0
 8000d8c:	ea5f 0c00 	movs.w	ip, r0
 8000d90:	bf08      	it	eq
 8000d92:	4770      	bxeq	lr
 8000d94:	f043 4396 	orr.w	r3, r3, #1258291200	@ 0x4b000000
 8000d98:	4601      	mov	r1, r0
 8000d9a:	f04f 0000 	mov.w	r0, #0
 8000d9e:	e01c      	b.n	8000dda <__aeabi_l2f+0x2a>

08000da0 <__aeabi_ul2f>:
 8000da0:	ea50 0201 	orrs.w	r2, r0, r1
 8000da4:	bf08      	it	eq
 8000da6:	4770      	bxeq	lr
 8000da8:	f04f 0300 	mov.w	r3, #0
 8000dac:	e00a      	b.n	8000dc4 <__aeabi_l2f+0x14>
 8000dae:	bf00      	nop

08000db0 <__aeabi_l2f>:
 8000db0:	ea50 0201 	orrs.w	r2, r0, r1
 8000db4:	bf08      	it	eq
 8000db6:	4770      	bxeq	lr
 8000db8:	f011 4300 	ands.w	r3, r1, #2147483648	@ 0x80000000
 8000dbc:	d502      	bpl.n	8000dc4 <__aeabi_l2f+0x14>
 8000dbe:	4240      	negs	r0, r0
 8000dc0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000dc4:	ea5f 0c01 	movs.w	ip, r1
 8000dc8:	bf02      	ittt	eq
 8000dca:	4684      	moveq	ip, r0
 8000dcc:	4601      	moveq	r1, r0
 8000dce:	2000      	moveq	r0, #0
 8000dd0:	f043 43b6 	orr.w	r3, r3, #1526726656	@ 0x5b000000
 8000dd4:	bf08      	it	eq
 8000dd6:	f1a3 5380 	subeq.w	r3, r3, #268435456	@ 0x10000000
 8000dda:	f5a3 0300 	sub.w	r3, r3, #8388608	@ 0x800000
 8000dde:	fabc f28c 	clz	r2, ip
 8000de2:	3a08      	subs	r2, #8
 8000de4:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000de8:	db10      	blt.n	8000e0c <__aeabi_l2f+0x5c>
 8000dea:	fa01 fc02 	lsl.w	ip, r1, r2
 8000dee:	4463      	add	r3, ip
 8000df0:	fa00 fc02 	lsl.w	ip, r0, r2
 8000df4:	f1c2 0220 	rsb	r2, r2, #32
 8000df8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000dfc:	fa20 f202 	lsr.w	r2, r0, r2
 8000e00:	eb43 0002 	adc.w	r0, r3, r2
 8000e04:	bf08      	it	eq
 8000e06:	f020 0001 	biceq.w	r0, r0, #1
 8000e0a:	4770      	bx	lr
 8000e0c:	f102 0220 	add.w	r2, r2, #32
 8000e10:	fa01 fc02 	lsl.w	ip, r1, r2
 8000e14:	f1c2 0220 	rsb	r2, r2, #32
 8000e18:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000e1c:	fa21 f202 	lsr.w	r2, r1, r2
 8000e20:	eb43 0002 	adc.w	r0, r3, r2
 8000e24:	bf08      	it	eq
 8000e26:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000e2a:	4770      	bx	lr

08000e2c <__gesf2>:
 8000e2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000e30:	e006      	b.n	8000e40 <__cmpsf2+0x4>
 8000e32:	bf00      	nop

08000e34 <__lesf2>:
 8000e34:	f04f 0c01 	mov.w	ip, #1
 8000e38:	e002      	b.n	8000e40 <__cmpsf2+0x4>
 8000e3a:	bf00      	nop

08000e3c <__cmpsf2>:
 8000e3c:	f04f 0c01 	mov.w	ip, #1
 8000e40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000e44:	ea4f 0240 	mov.w	r2, r0, lsl #1
 8000e48:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000e4c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000e50:	bf18      	it	ne
 8000e52:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000e56:	d011      	beq.n	8000e7c <__cmpsf2+0x40>
 8000e58:	b001      	add	sp, #4
 8000e5a:	ea52 0c53 	orrs.w	ip, r2, r3, lsr #1
 8000e5e:	bf18      	it	ne
 8000e60:	ea90 0f01 	teqne	r0, r1
 8000e64:	bf58      	it	pl
 8000e66:	ebb2 0003 	subspl.w	r0, r2, r3
 8000e6a:	bf88      	it	hi
 8000e6c:	17c8      	asrhi	r0, r1, #31
 8000e6e:	bf38      	it	cc
 8000e70:	ea6f 70e1 	mvncc.w	r0, r1, asr #31
 8000e74:	bf18      	it	ne
 8000e76:	f040 0001 	orrne.w	r0, r0, #1
 8000e7a:	4770      	bx	lr
 8000e7c:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000e80:	d102      	bne.n	8000e88 <__cmpsf2+0x4c>
 8000e82:	ea5f 2c40 	movs.w	ip, r0, lsl #9
 8000e86:	d105      	bne.n	8000e94 <__cmpsf2+0x58>
 8000e88:	ea7f 6c23 	mvns.w	ip, r3, asr #24
 8000e8c:	d1e4      	bne.n	8000e58 <__cmpsf2+0x1c>
 8000e8e:	ea5f 2c41 	movs.w	ip, r1, lsl #9
 8000e92:	d0e1      	beq.n	8000e58 <__cmpsf2+0x1c>
 8000e94:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000e98:	4770      	bx	lr
 8000e9a:	bf00      	nop

08000e9c <__aeabi_cfrcmple>:
 8000e9c:	4684      	mov	ip, r0
 8000e9e:	4608      	mov	r0, r1
 8000ea0:	4661      	mov	r1, ip
 8000ea2:	e7ff      	b.n	8000ea4 <__aeabi_cfcmpeq>

08000ea4 <__aeabi_cfcmpeq>:
 8000ea4:	b50f      	push	{r0, r1, r2, r3, lr}
 8000ea6:	f7ff ffc9 	bl	8000e3c <__cmpsf2>
 8000eaa:	2800      	cmp	r0, #0
 8000eac:	bf48      	it	mi
 8000eae:	f110 0f00 	cmnmi.w	r0, #0
 8000eb2:	bd0f      	pop	{r0, r1, r2, r3, pc}

08000eb4 <__aeabi_fcmpeq>:
 8000eb4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000eb8:	f7ff fff4 	bl	8000ea4 <__aeabi_cfcmpeq>
 8000ebc:	bf0c      	ite	eq
 8000ebe:	2001      	moveq	r0, #1
 8000ec0:	2000      	movne	r0, #0
 8000ec2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ec6:	bf00      	nop

08000ec8 <__aeabi_fcmplt>:
 8000ec8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ecc:	f7ff ffea 	bl	8000ea4 <__aeabi_cfcmpeq>
 8000ed0:	bf34      	ite	cc
 8000ed2:	2001      	movcc	r0, #1
 8000ed4:	2000      	movcs	r0, #0
 8000ed6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000eda:	bf00      	nop

08000edc <__aeabi_fcmple>:
 8000edc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ee0:	f7ff ffe0 	bl	8000ea4 <__aeabi_cfcmpeq>
 8000ee4:	bf94      	ite	ls
 8000ee6:	2001      	movls	r0, #1
 8000ee8:	2000      	movhi	r0, #0
 8000eea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000eee:	bf00      	nop

08000ef0 <__aeabi_fcmpge>:
 8000ef0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ef4:	f7ff ffd2 	bl	8000e9c <__aeabi_cfrcmple>
 8000ef8:	bf94      	ite	ls
 8000efa:	2001      	movls	r0, #1
 8000efc:	2000      	movhi	r0, #0
 8000efe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000f02:	bf00      	nop

08000f04 <__aeabi_fcmpgt>:
 8000f04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000f08:	f7ff ffc8 	bl	8000e9c <__aeabi_cfrcmple>
 8000f0c:	bf34      	ite	cc
 8000f0e:	2001      	movcc	r0, #1
 8000f10:	2000      	movcs	r0, #0
 8000f12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000f16:	bf00      	nop

08000f18 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8000f18:	b580      	push	{r7, lr}
 8000f1a:	af00      	add	r7, sp, #0
  /* Reset the RCC clock configuration to the default reset state(for debug purpose) */
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8000f1c:	4b15      	ldr	r3, [pc, #84]	@ (8000f74 <SystemInit+0x5c>)
 8000f1e:	681b      	ldr	r3, [r3, #0]
 8000f20:	4a14      	ldr	r2, [pc, #80]	@ (8000f74 <SystemInit+0x5c>)
 8000f22:	f043 0301 	orr.w	r3, r3, #1
 8000f26:	6013      	str	r3, [r2, #0]

  /* Reset SW, HPRE, PPRE1, PPRE2, ADCPRE and MCO bits */
#ifndef STM32F10X_CL
  RCC->CFGR &= (uint32_t)0xF8FF0000;
 8000f28:	4b12      	ldr	r3, [pc, #72]	@ (8000f74 <SystemInit+0x5c>)
 8000f2a:	685a      	ldr	r2, [r3, #4]
 8000f2c:	4911      	ldr	r1, [pc, #68]	@ (8000f74 <SystemInit+0x5c>)
 8000f2e:	4b12      	ldr	r3, [pc, #72]	@ (8000f78 <SystemInit+0x60>)
 8000f30:	4013      	ands	r3, r2
 8000f32:	604b      	str	r3, [r1, #4]
#else
  RCC->CFGR &= (uint32_t)0xF0FF0000;
#endif /* STM32F10X_CL */   
  
  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8000f34:	4b0f      	ldr	r3, [pc, #60]	@ (8000f74 <SystemInit+0x5c>)
 8000f36:	681b      	ldr	r3, [r3, #0]
 8000f38:	4a0e      	ldr	r2, [pc, #56]	@ (8000f74 <SystemInit+0x5c>)
 8000f3a:	f023 7384 	bic.w	r3, r3, #17301504	@ 0x1080000
 8000f3e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8000f42:	6013      	str	r3, [r2, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8000f44:	4b0b      	ldr	r3, [pc, #44]	@ (8000f74 <SystemInit+0x5c>)
 8000f46:	681b      	ldr	r3, [r3, #0]
 8000f48:	4a0a      	ldr	r2, [pc, #40]	@ (8000f74 <SystemInit+0x5c>)
 8000f4a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8000f4e:	6013      	str	r3, [r2, #0]

  /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE/OTGFSPRE bits */
  RCC->CFGR &= (uint32_t)0xFF80FFFF;
 8000f50:	4b08      	ldr	r3, [pc, #32]	@ (8000f74 <SystemInit+0x5c>)
 8000f52:	685b      	ldr	r3, [r3, #4]
 8000f54:	4a07      	ldr	r2, [pc, #28]	@ (8000f74 <SystemInit+0x5c>)
 8000f56:	f423 03fe 	bic.w	r3, r3, #8323072	@ 0x7f0000
 8000f5a:	6053      	str	r3, [r2, #4]

  /* Reset CFGR2 register */
  RCC->CFGR2 = 0x00000000;      
#else
  /* Disable all interrupts and clear pending bits  */
  RCC->CIR = 0x009F0000;
 8000f5c:	4b05      	ldr	r3, [pc, #20]	@ (8000f74 <SystemInit+0x5c>)
 8000f5e:	f44f 021f 	mov.w	r2, #10420224	@ 0x9f0000
 8000f62:	609a      	str	r2, [r3, #8]
  #endif /* DATA_IN_ExtSRAM */
#endif 

  /* Configure the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers */
  /* Configure the Flash Latency cycles and enable prefetch buffer */
  SetSysClock();
 8000f64:	f000 f80c 	bl	8000f80 <SetSysClock>

#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 8000f68:	4b04      	ldr	r3, [pc, #16]	@ (8000f7c <SystemInit+0x64>)
 8000f6a:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 8000f6e:	609a      	str	r2, [r3, #8]
#endif 
}
 8000f70:	bf00      	nop
 8000f72:	bd80      	pop	{r7, pc}
 8000f74:	40021000 	.word	0x40021000
 8000f78:	f8ff0000 	.word	0xf8ff0000
 8000f7c:	e000ed00 	.word	0xe000ed00

08000f80 <SetSysClock>:
  * @brief  Configures the System clock frequency, HCLK, PCLK2 and PCLK1 prescalers.
  * @param  None
  * @retval None
  */
static void SetSysClock(void)
{
 8000f80:	b580      	push	{r7, lr}
 8000f82:	af00      	add	r7, sp, #0
#elif defined SYSCLK_FREQ_48MHz
  SetSysClockTo48();
#elif defined SYSCLK_FREQ_56MHz
  SetSysClockTo56();  
#elif defined SYSCLK_FREQ_72MHz
  SetSysClockTo72();
 8000f84:	f000 f802 	bl	8000f8c <SetSysClockTo72>
#endif
 
 /* If none of the define above is enabled, the HSI is used as System clock
    source (default after reset) */ 
}
 8000f88:	bf00      	nop
 8000f8a:	bd80      	pop	{r7, pc}

08000f8c <SetSysClockTo72>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
static void SetSysClockTo72(void)
{
 8000f8c:	b480      	push	{r7}
 8000f8e:	b083      	sub	sp, #12
 8000f90:	af00      	add	r7, sp, #0
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 8000f92:	2300      	movs	r3, #0
 8000f94:	607b      	str	r3, [r7, #4]
 8000f96:	2300      	movs	r3, #0
 8000f98:	603b      	str	r3, [r7, #0]
  
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
  /* Enable HSE */    
  RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 8000f9a:	4b3a      	ldr	r3, [pc, #232]	@ (8001084 <SetSysClockTo72+0xf8>)
 8000f9c:	681b      	ldr	r3, [r3, #0]
 8000f9e:	4a39      	ldr	r2, [pc, #228]	@ (8001084 <SetSysClockTo72+0xf8>)
 8000fa0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000fa4:	6013      	str	r3, [r2, #0]
 
  /* Wait till HSE is ready and if Time out is reached exit */
  do
  {
    HSEStatus = RCC->CR & RCC_CR_HSERDY;
 8000fa6:	4b37      	ldr	r3, [pc, #220]	@ (8001084 <SetSysClockTo72+0xf8>)
 8000fa8:	681b      	ldr	r3, [r3, #0]
 8000faa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000fae:	603b      	str	r3, [r7, #0]
    StartUpCounter++;  
 8000fb0:	687b      	ldr	r3, [r7, #4]
 8000fb2:	3301      	adds	r3, #1
 8000fb4:	607b      	str	r3, [r7, #4]
  } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 8000fb6:	683b      	ldr	r3, [r7, #0]
 8000fb8:	2b00      	cmp	r3, #0
 8000fba:	d103      	bne.n	8000fc4 <SetSysClockTo72+0x38>
 8000fbc:	687b      	ldr	r3, [r7, #4]
 8000fbe:	f5b3 6fa0 	cmp.w	r3, #1280	@ 0x500
 8000fc2:	d1f0      	bne.n	8000fa6 <SetSysClockTo72+0x1a>

  if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 8000fc4:	4b2f      	ldr	r3, [pc, #188]	@ (8001084 <SetSysClockTo72+0xf8>)
 8000fc6:	681b      	ldr	r3, [r3, #0]
 8000fc8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000fcc:	2b00      	cmp	r3, #0
 8000fce:	d002      	beq.n	8000fd6 <SetSysClockTo72+0x4a>
  {
    HSEStatus = (uint32_t)0x01;
 8000fd0:	2301      	movs	r3, #1
 8000fd2:	603b      	str	r3, [r7, #0]
 8000fd4:	e001      	b.n	8000fda <SetSysClockTo72+0x4e>
  }
  else
  {
    HSEStatus = (uint32_t)0x00;
 8000fd6:	2300      	movs	r3, #0
 8000fd8:	603b      	str	r3, [r7, #0]
  }  

  if (HSEStatus == (uint32_t)0x01)
 8000fda:	683b      	ldr	r3, [r7, #0]
 8000fdc:	2b01      	cmp	r3, #1
 8000fde:	d14b      	bne.n	8001078 <SetSysClockTo72+0xec>
  {
    /* Enable Prefetch Buffer */
    FLASH->ACR |= FLASH_ACR_PRFTBE;
 8000fe0:	4b29      	ldr	r3, [pc, #164]	@ (8001088 <SetSysClockTo72+0xfc>)
 8000fe2:	681b      	ldr	r3, [r3, #0]
 8000fe4:	4a28      	ldr	r2, [pc, #160]	@ (8001088 <SetSysClockTo72+0xfc>)
 8000fe6:	f043 0310 	orr.w	r3, r3, #16
 8000fea:	6013      	str	r3, [r2, #0]

    /* Flash 2 wait state */
    FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 8000fec:	4b26      	ldr	r3, [pc, #152]	@ (8001088 <SetSysClockTo72+0xfc>)
 8000fee:	681b      	ldr	r3, [r3, #0]
 8000ff0:	4a25      	ldr	r2, [pc, #148]	@ (8001088 <SetSysClockTo72+0xfc>)
 8000ff2:	f023 0307 	bic.w	r3, r3, #7
 8000ff6:	6013      	str	r3, [r2, #0]
    FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 8000ff8:	4b23      	ldr	r3, [pc, #140]	@ (8001088 <SetSysClockTo72+0xfc>)
 8000ffa:	681b      	ldr	r3, [r3, #0]
 8000ffc:	4a22      	ldr	r2, [pc, #136]	@ (8001088 <SetSysClockTo72+0xfc>)
 8000ffe:	f043 0302 	orr.w	r3, r3, #2
 8001002:	6013      	str	r3, [r2, #0]

 
    /* HCLK = SYSCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 8001004:	4b1f      	ldr	r3, [pc, #124]	@ (8001084 <SetSysClockTo72+0xf8>)
 8001006:	4a1f      	ldr	r2, [pc, #124]	@ (8001084 <SetSysClockTo72+0xf8>)
 8001008:	685b      	ldr	r3, [r3, #4]
 800100a:	6053      	str	r3, [r2, #4]
      
    /* PCLK2 = HCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 800100c:	4b1d      	ldr	r3, [pc, #116]	@ (8001084 <SetSysClockTo72+0xf8>)
 800100e:	4a1d      	ldr	r2, [pc, #116]	@ (8001084 <SetSysClockTo72+0xf8>)
 8001010:	685b      	ldr	r3, [r3, #4]
 8001012:	6053      	str	r3, [r2, #4]
    
    /* PCLK1 = HCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 8001014:	4b1b      	ldr	r3, [pc, #108]	@ (8001084 <SetSysClockTo72+0xf8>)
 8001016:	685b      	ldr	r3, [r3, #4]
 8001018:	4a1a      	ldr	r2, [pc, #104]	@ (8001084 <SetSysClockTo72+0xf8>)
 800101a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800101e:	6053      	str	r3, [r2, #4]
    RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
                            RCC_CFGR_PLLMULL9); 
#else    
    /*  PLL configuration: PLLCLK = HSE * 9 = 72 MHz */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE |
 8001020:	4b18      	ldr	r3, [pc, #96]	@ (8001084 <SetSysClockTo72+0xf8>)
 8001022:	685b      	ldr	r3, [r3, #4]
 8001024:	4a17      	ldr	r2, [pc, #92]	@ (8001084 <SetSysClockTo72+0xf8>)
 8001026:	f423 137c 	bic.w	r3, r3, #4128768	@ 0x3f0000
 800102a:	6053      	str	r3, [r2, #4]
                                        RCC_CFGR_PLLMULL));
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL9);
 800102c:	4b15      	ldr	r3, [pc, #84]	@ (8001084 <SetSysClockTo72+0xf8>)
 800102e:	685b      	ldr	r3, [r3, #4]
 8001030:	4a14      	ldr	r2, [pc, #80]	@ (8001084 <SetSysClockTo72+0xf8>)
 8001032:	f443 13e8 	orr.w	r3, r3, #1900544	@ 0x1d0000
 8001036:	6053      	str	r3, [r2, #4]
#endif /* STM32F10X_CL */

    /* Enable PLL */
    RCC->CR |= RCC_CR_PLLON;
 8001038:	4b12      	ldr	r3, [pc, #72]	@ (8001084 <SetSysClockTo72+0xf8>)
 800103a:	681b      	ldr	r3, [r3, #0]
 800103c:	4a11      	ldr	r2, [pc, #68]	@ (8001084 <SetSysClockTo72+0xf8>)
 800103e:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8001042:	6013      	str	r3, [r2, #0]

    /* Wait till PLL is ready */
    while((RCC->CR & RCC_CR_PLLRDY) == 0)
 8001044:	bf00      	nop
 8001046:	4b0f      	ldr	r3, [pc, #60]	@ (8001084 <SetSysClockTo72+0xf8>)
 8001048:	681b      	ldr	r3, [r3, #0]
 800104a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800104e:	2b00      	cmp	r3, #0
 8001050:	d0f9      	beq.n	8001046 <SetSysClockTo72+0xba>
    {
    }
    
    /* Select PLL as system clock source */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 8001052:	4b0c      	ldr	r3, [pc, #48]	@ (8001084 <SetSysClockTo72+0xf8>)
 8001054:	685b      	ldr	r3, [r3, #4]
 8001056:	4a0b      	ldr	r2, [pc, #44]	@ (8001084 <SetSysClockTo72+0xf8>)
 8001058:	f023 0303 	bic.w	r3, r3, #3
 800105c:	6053      	str	r3, [r2, #4]
    RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 800105e:	4b09      	ldr	r3, [pc, #36]	@ (8001084 <SetSysClockTo72+0xf8>)
 8001060:	685b      	ldr	r3, [r3, #4]
 8001062:	4a08      	ldr	r2, [pc, #32]	@ (8001084 <SetSysClockTo72+0xf8>)
 8001064:	f043 0302 	orr.w	r3, r3, #2
 8001068:	6053      	str	r3, [r2, #4]

    /* Wait till PLL is used as system clock source */
    while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 800106a:	bf00      	nop
 800106c:	4b05      	ldr	r3, [pc, #20]	@ (8001084 <SetSysClockTo72+0xf8>)
 800106e:	685b      	ldr	r3, [r3, #4]
 8001070:	f003 030c 	and.w	r3, r3, #12
 8001074:	2b08      	cmp	r3, #8
 8001076:	d1f9      	bne.n	800106c <SetSysClockTo72+0xe0>
  }
  else
  { /* If HSE fails to start-up, the application will have wrong clock 
         configuration. User can add here some code to deal with this error */
  }
}
 8001078:	bf00      	nop
 800107a:	370c      	adds	r7, #12
 800107c:	46bd      	mov	sp, r7
 800107e:	bc80      	pop	{r7}
 8001080:	4770      	bx	lr
 8001082:	bf00      	nop
 8001084:	40021000 	.word	0x40021000
 8001088:	40022000 	.word	0x40022000

0800108c <NVIC_EnableIRQ>:
 *
 * Enable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
 800108c:	b480      	push	{r7}
 800108e:	b083      	sub	sp, #12
 8001090:	af00      	add	r7, sp, #0
 8001092:	4603      	mov	r3, r0
 8001094:	71fb      	strb	r3, [r7, #7]
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 8001096:	79fb      	ldrb	r3, [r7, #7]
 8001098:	f003 031f 	and.w	r3, r3, #31
 800109c:	2201      	movs	r2, #1
 800109e:	fa02 f103 	lsl.w	r1, r2, r3
 80010a2:	4a05      	ldr	r2, [pc, #20]	@ (80010b8 <NVIC_EnableIRQ+0x2c>)
 80010a4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010a8:	095b      	lsrs	r3, r3, #5
 80010aa:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 80010ae:	bf00      	nop
 80010b0:	370c      	adds	r7, #12
 80010b2:	46bd      	mov	sp, r7
 80010b4:	bc80      	pop	{r7}
 80010b6:	4770      	bx	lr
 80010b8:	e000e100 	.word	0xe000e100

080010bc <NVIC_SetPriority>:
 * interrupt, or negative to specify an internal (core) interrupt.
 *
 * Note: The priority cannot be set for every core interrupt.
 */
static __INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80010bc:	b480      	push	{r7}
 80010be:	b083      	sub	sp, #12
 80010c0:	af00      	add	r7, sp, #0
 80010c2:	4603      	mov	r3, r0
 80010c4:	6039      	str	r1, [r7, #0]
 80010c6:	71fb      	strb	r3, [r7, #7]
  if(IRQn < 0) {
 80010c8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010cc:	2b00      	cmp	r3, #0
 80010ce:	da0b      	bge.n	80010e8 <NVIC_SetPriority+0x2c>
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M3 System Interrupts */
 80010d0:	683b      	ldr	r3, [r7, #0]
 80010d2:	b2da      	uxtb	r2, r3
 80010d4:	490c      	ldr	r1, [pc, #48]	@ (8001108 <NVIC_SetPriority+0x4c>)
 80010d6:	79fb      	ldrb	r3, [r7, #7]
 80010d8:	f003 030f 	and.w	r3, r3, #15
 80010dc:	3b04      	subs	r3, #4
 80010de:	0112      	lsls	r2, r2, #4
 80010e0:	b2d2      	uxtb	r2, r2
 80010e2:	440b      	add	r3, r1
 80010e4:	761a      	strb	r2, [r3, #24]
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
}
 80010e6:	e009      	b.n	80010fc <NVIC_SetPriority+0x40>
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
 80010e8:	683b      	ldr	r3, [r7, #0]
 80010ea:	b2da      	uxtb	r2, r3
 80010ec:	4907      	ldr	r1, [pc, #28]	@ (800110c <NVIC_SetPriority+0x50>)
 80010ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010f2:	0112      	lsls	r2, r2, #4
 80010f4:	b2d2      	uxtb	r2, r2
 80010f6:	440b      	add	r3, r1
 80010f8:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
}
 80010fc:	bf00      	nop
 80010fe:	370c      	adds	r7, #12
 8001100:	46bd      	mov	sp, r7
 8001102:	bc80      	pop	{r7}
 8001104:	4770      	bx	lr
 8001106:	bf00      	nop
 8001108:	e000ed00 	.word	0xe000ed00
 800110c:	e000e100 	.word	0xe000e100

08001110 <delay_10us>:

uint16_t parking = 20;

uint8_t toggle_flag = 0;

void delay_10us(uint32_t t) {
 8001110:	b480      	push	{r7}
 8001112:	b085      	sub	sp, #20
 8001114:	af00      	add	r7, sp, #0
 8001116:	6078      	str	r0, [r7, #4]
    uint32_t start_tick = tick_ms;
 8001118:	4b08      	ldr	r3, [pc, #32]	@ (800113c <delay_10us+0x2c>)
 800111a:	681b      	ldr	r3, [r3, #0]
 800111c:	60fb      	str	r3, [r7, #12]
    while ((tick_ms - start_tick) < t);
 800111e:	bf00      	nop
 8001120:	4b06      	ldr	r3, [pc, #24]	@ (800113c <delay_10us+0x2c>)
 8001122:	681a      	ldr	r2, [r3, #0]
 8001124:	68fb      	ldr	r3, [r7, #12]
 8001126:	1ad3      	subs	r3, r2, r3
 8001128:	687a      	ldr	r2, [r7, #4]
 800112a:	429a      	cmp	r2, r3
 800112c:	d8f8      	bhi.n	8001120 <delay_10us+0x10>
}
 800112e:	bf00      	nop
 8001130:	bf00      	nop
 8001132:	3714      	adds	r7, #20
 8001134:	46bd      	mov	sp, r7
 8001136:	bc80      	pop	{r7}
 8001138:	4770      	bx	lr
 800113a:	bf00      	nop
 800113c:	20000204 	.word	0x20000204

08001140 <My_GPIO_Init>:

// --- Initialization Functions ---
void My_GPIO_Init(void) {
 8001140:	b480      	push	{r7}
 8001142:	af00      	add	r7, sp, #0
	RCC->APB2ENR = 0xFD;
 8001144:	4b10      	ldr	r3, [pc, #64]	@ (8001188 <My_GPIO_Init+0x48>)
 8001146:	22fd      	movs	r2, #253	@ 0xfd
 8001148:	619a      	str	r2, [r3, #24]
    // PA4 (入口Trig), PA2 (出口Trig) -> 推挽輸出
    GPIOA->CRL |= (0x1 << (4 * 4)) | (0x1 << (4 * 2));
 800114a:	4b10      	ldr	r3, [pc, #64]	@ (800118c <My_GPIO_Init+0x4c>)
 800114c:	681b      	ldr	r3, [r3, #0]
 800114e:	4a0f      	ldr	r2, [pc, #60]	@ (800118c <My_GPIO_Init+0x4c>)
 8001150:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001154:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001158:	6013      	str	r3, [r2, #0]

    // PA5 (入口Echo), PA3 (出口Echo) -> 浮空輸入
    GPIOA->CRL |= (0x4 << (4 * 5)) | (0x4 << (4 * 3));
 800115a:	4b0c      	ldr	r3, [pc, #48]	@ (800118c <My_GPIO_Init+0x4c>)
 800115c:	681b      	ldr	r3, [r3, #0]
 800115e:	4a0b      	ldr	r2, [pc, #44]	@ (800118c <My_GPIO_Init+0x4c>)
 8001160:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001164:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001168:	6013      	str	r3, [r2, #0]

    GPIOA->BRR = (1 << 4) | (1 << 2);
 800116a:	4b08      	ldr	r3, [pc, #32]	@ (800118c <My_GPIO_Init+0x4c>)
 800116c:	2214      	movs	r2, #20
 800116e:	615a      	str	r2, [r3, #20]

    GPIOB->CRL = 0x33333333;  // PB0 ~ PB7 為輸出模式
 8001170:	4b07      	ldr	r3, [pc, #28]	@ (8001190 <My_GPIO_Init+0x50>)
 8001172:	f04f 3233 	mov.w	r2, #858993459	@ 0x33333333
 8001176:	601a      	str	r2, [r3, #0]
    GPIOB->CRH = 0x33333333;  // PB8 ~ PB15 為輸出模式
 8001178:	4b05      	ldr	r3, [pc, #20]	@ (8001190 <My_GPIO_Init+0x50>)
 800117a:	f04f 3233 	mov.w	r2, #858993459	@ 0x33333333
 800117e:	605a      	str	r2, [r3, #4]
}
 8001180:	bf00      	nop
 8001182:	46bd      	mov	sp, r7
 8001184:	bc80      	pop	{r7}
 8001186:	4770      	bx	lr
 8001188:	40021000 	.word	0x40021000
 800118c:	40010800 	.word	0x40010800
 8001190:	40010c00 	.word	0x40010c00

08001194 <My_Timer_Init>:

void My_Timer_Init(void) {
 8001194:	b480      	push	{r7}
 8001196:	af00      	add	r7, sp, #0
    RCC->APB1ENR |= (1<<0);
 8001198:	4b2a      	ldr	r3, [pc, #168]	@ (8001244 <My_Timer_Init+0xb0>)
 800119a:	69db      	ldr	r3, [r3, #28]
 800119c:	4a29      	ldr	r2, [pc, #164]	@ (8001244 <My_Timer_Init+0xb0>)
 800119e:	f043 0301 	orr.w	r3, r3, #1
 80011a2:	61d3      	str	r3, [r2, #28]
    RCC->APB2ENR |= (1<<11);
 80011a4:	4b27      	ldr	r3, [pc, #156]	@ (8001244 <My_Timer_Init+0xb0>)
 80011a6:	699b      	ldr	r3, [r3, #24]
 80011a8:	4a26      	ldr	r2, [pc, #152]	@ (8001244 <My_Timer_Init+0xb0>)
 80011aa:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 80011ae:	6193      	str	r3, [r2, #24]
	GPIOA->CRL |= 0xB;
 80011b0:	4b25      	ldr	r3, [pc, #148]	@ (8001248 <My_Timer_Init+0xb4>)
 80011b2:	681b      	ldr	r3, [r3, #0]
 80011b4:	4a24      	ldr	r2, [pc, #144]	@ (8001248 <My_Timer_Init+0xb4>)
 80011b6:	f043 030b 	orr.w	r3, r3, #11
 80011ba:	6013      	str	r3, [r2, #0]
	GPIOA->CRH |= 0xB;
 80011bc:	4b22      	ldr	r3, [pc, #136]	@ (8001248 <My_Timer_Init+0xb4>)
 80011be:	685b      	ldr	r3, [r3, #4]
 80011c0:	4a21      	ldr	r2, [pc, #132]	@ (8001248 <My_Timer_Init+0xb4>)
 80011c2:	f043 030b 	orr.w	r3, r3, #11
 80011c6:	6053      	str	r3, [r2, #4]

	TIM2->CCER = 0x1;
 80011c8:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80011cc:	2201      	movs	r2, #1
 80011ce:	841a      	strh	r2, [r3, #32]
	TIM2->CCMR1 |= 0x60;
 80011d0:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80011d4:	8b1b      	ldrh	r3, [r3, #24]
 80011d6:	b29b      	uxth	r3, r3
 80011d8:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80011dc:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 80011e0:	b29b      	uxth	r3, r3
 80011e2:	8313      	strh	r3, [r2, #24]
	TIM2->PSC = 72 - 1;
 80011e4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80011e8:	2247      	movs	r2, #71	@ 0x47
 80011ea:	851a      	strh	r2, [r3, #40]	@ 0x28
	TIM2->ARR = 20000 - 1;
 80011ec:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80011f0:	f644 621f 	movw	r2, #19999	@ 0x4e1f
 80011f4:	859a      	strh	r2, [r3, #44]	@ 0x2c
	TIM2->CCR1 = 500;
 80011f6:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80011fa:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 80011fe:	869a      	strh	r2, [r3, #52]	@ 0x34
	TIM2->CR1 = 1;
 8001200:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001204:	2201      	movs	r2, #1
 8001206:	801a      	strh	r2, [r3, #0]

	TIM1->CCER = 0x1;
 8001208:	4b10      	ldr	r3, [pc, #64]	@ (800124c <My_Timer_Init+0xb8>)
 800120a:	2201      	movs	r2, #1
 800120c:	841a      	strh	r2, [r3, #32]
	TIM1->CCMR1 |= 0x60;
 800120e:	4b0f      	ldr	r3, [pc, #60]	@ (800124c <My_Timer_Init+0xb8>)
 8001210:	8b1b      	ldrh	r3, [r3, #24]
 8001212:	b29b      	uxth	r3, r3
 8001214:	4a0d      	ldr	r2, [pc, #52]	@ (800124c <My_Timer_Init+0xb8>)
 8001216:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
 800121a:	b29b      	uxth	r3, r3
 800121c:	8313      	strh	r3, [r2, #24]
	TIM1->PSC = 144 - 1;
 800121e:	4b0b      	ldr	r3, [pc, #44]	@ (800124c <My_Timer_Init+0xb8>)
 8001220:	228f      	movs	r2, #143	@ 0x8f
 8001222:	851a      	strh	r2, [r3, #40]	@ 0x28
	TIM1->ARR = 20000 - 1;
 8001224:	4b09      	ldr	r3, [pc, #36]	@ (800124c <My_Timer_Init+0xb8>)
 8001226:	f644 621f 	movw	r2, #19999	@ 0x4e1f
 800122a:	859a      	strh	r2, [r3, #44]	@ 0x2c
	TIM1->CCR1 = 500;
 800122c:	4b07      	ldr	r3, [pc, #28]	@ (800124c <My_Timer_Init+0xb8>)
 800122e:	f44f 72fa 	mov.w	r2, #500	@ 0x1f4
 8001232:	869a      	strh	r2, [r3, #52]	@ 0x34
	TIM1->CR1 = 1;
 8001234:	4b05      	ldr	r3, [pc, #20]	@ (800124c <My_Timer_Init+0xb8>)
 8001236:	2201      	movs	r2, #1
 8001238:	801a      	strh	r2, [r3, #0]
}
 800123a:	bf00      	nop
 800123c:	46bd      	mov	sp, r7
 800123e:	bc80      	pop	{r7}
 8001240:	4770      	bx	lr
 8001242:	bf00      	nop
 8001244:	40021000 	.word	0x40021000
 8001248:	40010800 	.word	0x40010800
 800124c:	40012c00 	.word	0x40012c00

08001250 <ServoTIM2_SetAngle>:

void ServoTIM2_SetAngle(uint8_t angle) {
 8001250:	b480      	push	{r7}
 8001252:	b085      	sub	sp, #20
 8001254:	af00      	add	r7, sp, #0
 8001256:	4603      	mov	r3, r0
 8001258:	71fb      	strb	r3, [r7, #7]
	uint16_t pulse;
	if(angle == 0) {
 800125a:	79fb      	ldrb	r3, [r7, #7]
 800125c:	2b00      	cmp	r3, #0
 800125e:	d103      	bne.n	8001268 <ServoTIM2_SetAngle+0x18>
		pulse = 1000;
 8001260:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8001264:	81fb      	strh	r3, [r7, #14]
 8001266:	e009      	b.n	800127c <ServoTIM2_SetAngle+0x2c>
	} else if (angle == 90) {
 8001268:	79fb      	ldrb	r3, [r7, #7]
 800126a:	2b5a      	cmp	r3, #90	@ 0x5a
 800126c:	d103      	bne.n	8001276 <ServoTIM2_SetAngle+0x26>
		pulse = 1600;
 800126e:	f44f 63c8 	mov.w	r3, #1600	@ 0x640
 8001272:	81fb      	strh	r3, [r7, #14]
 8001274:	e002      	b.n	800127c <ServoTIM2_SetAngle+0x2c>
	} else {
		pulse = 2200;
 8001276:	f640 0398 	movw	r3, #2200	@ 0x898
 800127a:	81fb      	strh	r3, [r7, #14]
	}
    TIM2->CCR1 = pulse;
 800127c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001280:	89fb      	ldrh	r3, [r7, #14]
 8001282:	8693      	strh	r3, [r2, #52]	@ 0x34
}
 8001284:	bf00      	nop
 8001286:	3714      	adds	r7, #20
 8001288:	46bd      	mov	sp, r7
 800128a:	bc80      	pop	{r7}
 800128c:	4770      	bx	lr
	...

08001290 <ServoTIM1_SetAngle>:

void ServoTIM1_SetAngle(uint8_t angle) {
 8001290:	b480      	push	{r7}
 8001292:	b085      	sub	sp, #20
 8001294:	af00      	add	r7, sp, #0
 8001296:	4603      	mov	r3, r0
 8001298:	71fb      	strb	r3, [r7, #7]
	uint16_t pulse;
	if(angle == 0) {
 800129a:	79fb      	ldrb	r3, [r7, #7]
 800129c:	2b00      	cmp	r3, #0
 800129e:	d103      	bne.n	80012a8 <ServoTIM1_SetAngle+0x18>
		pulse = 1000;
 80012a0:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80012a4:	81fb      	strh	r3, [r7, #14]
 80012a6:	e009      	b.n	80012bc <ServoTIM1_SetAngle+0x2c>
	} else if (angle == 90) {
 80012a8:	79fb      	ldrb	r3, [r7, #7]
 80012aa:	2b5a      	cmp	r3, #90	@ 0x5a
 80012ac:	d103      	bne.n	80012b6 <ServoTIM1_SetAngle+0x26>
		pulse = 1500;
 80012ae:	f240 53dc 	movw	r3, #1500	@ 0x5dc
 80012b2:	81fb      	strh	r3, [r7, #14]
 80012b4:	e002      	b.n	80012bc <ServoTIM1_SetAngle+0x2c>
	} else {
		pulse = 2000;
 80012b6:	f44f 63fa 	mov.w	r3, #2000	@ 0x7d0
 80012ba:	81fb      	strh	r3, [r7, #14]
	}
    TIM1->CCR1 = pulse;
 80012bc:	4a03      	ldr	r2, [pc, #12]	@ (80012cc <ServoTIM1_SetAngle+0x3c>)
 80012be:	89fb      	ldrh	r3, [r7, #14]
 80012c0:	8693      	strh	r3, [r2, #52]	@ 0x34
}
 80012c2:	bf00      	nop
 80012c4:	3714      	adds	r7, #20
 80012c6:	46bd      	mov	sp, r7
 80012c8:	bc80      	pop	{r7}
 80012ca:	4770      	bx	lr
 80012cc:	40012c00 	.word	0x40012c00

080012d0 <My_EXTI_Init>:

void My_EXTI_Init(void) {
 80012d0:	b580      	push	{r7, lr}
 80012d2:	af00      	add	r7, sp, #0

	RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;
 80012d4:	4b17      	ldr	r3, [pc, #92]	@ (8001334 <My_EXTI_Init+0x64>)
 80012d6:	699b      	ldr	r3, [r3, #24]
 80012d8:	4a16      	ldr	r2, [pc, #88]	@ (8001334 <My_EXTI_Init+0x64>)
 80012da:	f043 0301 	orr.w	r3, r3, #1
 80012de:	6193      	str	r3, [r2, #24]
	AFIO->EXTICR[0] |= (0x0 << (4 * 3)); // 清除 EXTI3
 80012e0:	4b15      	ldr	r3, [pc, #84]	@ (8001338 <My_EXTI_Init+0x68>)
 80012e2:	4a15      	ldr	r2, [pc, #84]	@ (8001338 <My_EXTI_Init+0x68>)
 80012e4:	689b      	ldr	r3, [r3, #8]
 80012e6:	6093      	str	r3, [r2, #8]
    AFIO->EXTICR[1] |= (0x0 << (4 * 1)); // 清除 EXTI5
 80012e8:	4b13      	ldr	r3, [pc, #76]	@ (8001338 <My_EXTI_Init+0x68>)
 80012ea:	4a13      	ldr	r2, [pc, #76]	@ (8001338 <My_EXTI_Init+0x68>)
 80012ec:	68db      	ldr	r3, [r3, #12]
 80012ee:	60d3      	str	r3, [r2, #12]

    // 設定 EXTI3 (出口) 和 EXTI5 (入口)
    EXTI->RTSR |= (1 << 3) | (1 << 5);
 80012f0:	4b12      	ldr	r3, [pc, #72]	@ (800133c <My_EXTI_Init+0x6c>)
 80012f2:	689b      	ldr	r3, [r3, #8]
 80012f4:	4a11      	ldr	r2, [pc, #68]	@ (800133c <My_EXTI_Init+0x6c>)
 80012f6:	f043 0328 	orr.w	r3, r3, #40	@ 0x28
 80012fa:	6093      	str	r3, [r2, #8]
    EXTI->FTSR |= (1 << 3) | (1 << 5);
 80012fc:	4b0f      	ldr	r3, [pc, #60]	@ (800133c <My_EXTI_Init+0x6c>)
 80012fe:	68db      	ldr	r3, [r3, #12]
 8001300:	4a0e      	ldr	r2, [pc, #56]	@ (800133c <My_EXTI_Init+0x6c>)
 8001302:	f043 0328 	orr.w	r3, r3, #40	@ 0x28
 8001306:	60d3      	str	r3, [r2, #12]
    EXTI->IMR |= (1 << 3) | (1 << 5);
 8001308:	4b0c      	ldr	r3, [pc, #48]	@ (800133c <My_EXTI_Init+0x6c>)
 800130a:	681b      	ldr	r3, [r3, #0]
 800130c:	4a0b      	ldr	r2, [pc, #44]	@ (800133c <My_EXTI_Init+0x6c>)
 800130e:	f043 0328 	orr.w	r3, r3, #40	@ 0x28
 8001312:	6013      	str	r3, [r2, #0]

    // 啟用對應的中斷向量
    NVIC_SetPriority(EXTI3_IRQn, 1);
 8001314:	2101      	movs	r1, #1
 8001316:	2009      	movs	r0, #9
 8001318:	f7ff fed0 	bl	80010bc <NVIC_SetPriority>
    NVIC_EnableIRQ(EXTI3_IRQn);
 800131c:	2009      	movs	r0, #9
 800131e:	f7ff feb5 	bl	800108c <NVIC_EnableIRQ>
    NVIC_SetPriority(EXTI9_5_IRQn, 1); // PA5 使用 EXTI9_5 中斷
 8001322:	2101      	movs	r1, #1
 8001324:	2017      	movs	r0, #23
 8001326:	f7ff fec9 	bl	80010bc <NVIC_SetPriority>
    NVIC_EnableIRQ(EXTI9_5_IRQn);
 800132a:	2017      	movs	r0, #23
 800132c:	f7ff feae 	bl	800108c <NVIC_EnableIRQ>

}
 8001330:	bf00      	nop
 8001332:	bd80      	pop	{r7, pc}
 8001334:	40021000 	.word	0x40021000
 8001338:	40010000 	.word	0x40010000
 800133c:	40010400 	.word	0x40010400

08001340 <My_SysTick_Init>:

void My_SysTick_Init(void) {
 8001340:	b480      	push	{r7}
 8001342:	af00      	add	r7, sp, #0
    SysTick->LOAD = 270 - 1;
 8001344:	4b06      	ldr	r3, [pc, #24]	@ (8001360 <My_SysTick_Init+0x20>)
 8001346:	f240 120d 	movw	r2, #269	@ 0x10d
 800134a:	605a      	str	r2, [r3, #4]
    SysTick->VAL = 0;
 800134c:	4b04      	ldr	r3, [pc, #16]	@ (8001360 <My_SysTick_Init+0x20>)
 800134e:	2200      	movs	r2, #0
 8001350:	609a      	str	r2, [r3, #8]
    SysTick->CTRL = (0 << 2) | (1 << 1) | (1 << 0);
 8001352:	4b03      	ldr	r3, [pc, #12]	@ (8001360 <My_SysTick_Init+0x20>)
 8001354:	2203      	movs	r2, #3
 8001356:	601a      	str	r2, [r3, #0]
}
 8001358:	bf00      	nop
 800135a:	46bd      	mov	sp, r7
 800135c:	bc80      	pop	{r7}
 800135e:	4770      	bx	lr
 8001360:	e000e010 	.word	0xe000e010

08001364 <My_USART1_Init>:

void My_USART1_Init(void) {
 8001364:	b480      	push	{r7}
 8001366:	af00      	add	r7, sp, #0
    RCC->APB2ENR |= RCC_APB2ENR_IOPAEN | RCC_APB2ENR_USART1EN;
 8001368:	4b12      	ldr	r3, [pc, #72]	@ (80013b4 <My_USART1_Init+0x50>)
 800136a:	699b      	ldr	r3, [r3, #24]
 800136c:	4a11      	ldr	r2, [pc, #68]	@ (80013b4 <My_USART1_Init+0x50>)
 800136e:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001372:	f043 0304 	orr.w	r3, r3, #4
 8001376:	6193      	str	r3, [r2, #24]

    GPIOA->CRH &= ~(0xFF << 4);
 8001378:	4b0f      	ldr	r3, [pc, #60]	@ (80013b8 <My_USART1_Init+0x54>)
 800137a:	685b      	ldr	r3, [r3, #4]
 800137c:	4a0e      	ldr	r2, [pc, #56]	@ (80013b8 <My_USART1_Init+0x54>)
 800137e:	f423 637f 	bic.w	r3, r3, #4080	@ 0xff0
 8001382:	6053      	str	r3, [r2, #4]
    GPIOA->CRH |= (0x0B << 4);
 8001384:	4b0c      	ldr	r3, [pc, #48]	@ (80013b8 <My_USART1_Init+0x54>)
 8001386:	685b      	ldr	r3, [r3, #4]
 8001388:	4a0b      	ldr	r2, [pc, #44]	@ (80013b8 <My_USART1_Init+0x54>)
 800138a:	f043 03b0 	orr.w	r3, r3, #176	@ 0xb0
 800138e:	6053      	str	r3, [r2, #4]
    USART1->BRR = 0x1D4C;
 8001390:	4b0a      	ldr	r3, [pc, #40]	@ (80013bc <My_USART1_Init+0x58>)
 8001392:	f641 524c 	movw	r2, #7500	@ 0x1d4c
 8001396:	811a      	strh	r2, [r3, #8]
    USART1->CR1 |= (1 << 3) | (1 << 13);
 8001398:	4b08      	ldr	r3, [pc, #32]	@ (80013bc <My_USART1_Init+0x58>)
 800139a:	899b      	ldrh	r3, [r3, #12]
 800139c:	b29b      	uxth	r3, r3
 800139e:	4a07      	ldr	r2, [pc, #28]	@ (80013bc <My_USART1_Init+0x58>)
 80013a0:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80013a4:	f043 0308 	orr.w	r3, r3, #8
 80013a8:	b29b      	uxth	r3, r3
 80013aa:	8193      	strh	r3, [r2, #12]
}
 80013ac:	bf00      	nop
 80013ae:	46bd      	mov	sp, r7
 80013b0:	bc80      	pop	{r7}
 80013b2:	4770      	bx	lr
 80013b4:	40021000 	.word	0x40021000
 80013b8:	40010800 	.word	0x40010800
 80013bc:	40013800 	.word	0x40013800

080013c0 <USART1_SendString>:

void USART1_SendString(char *str) {
 80013c0:	b480      	push	{r7}
 80013c2:	b083      	sub	sp, #12
 80013c4:	af00      	add	r7, sp, #0
 80013c6:	6078      	str	r0, [r7, #4]
    while (*str) {
 80013c8:	e00e      	b.n	80013e8 <USART1_SendString+0x28>
        while (!(USART1->SR & (1 << 7)));
 80013ca:	bf00      	nop
 80013cc:	4b0b      	ldr	r3, [pc, #44]	@ (80013fc <USART1_SendString+0x3c>)
 80013ce:	881b      	ldrh	r3, [r3, #0]
 80013d0:	b29b      	uxth	r3, r3
 80013d2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80013d6:	2b00      	cmp	r3, #0
 80013d8:	d0f8      	beq.n	80013cc <USART1_SendString+0xc>
        USART1->DR = *str;
 80013da:	687b      	ldr	r3, [r7, #4]
 80013dc:	781a      	ldrb	r2, [r3, #0]
 80013de:	4b07      	ldr	r3, [pc, #28]	@ (80013fc <USART1_SendString+0x3c>)
 80013e0:	809a      	strh	r2, [r3, #4]
        str++;
 80013e2:	687b      	ldr	r3, [r7, #4]
 80013e4:	3301      	adds	r3, #1
 80013e6:	607b      	str	r3, [r7, #4]
    while (*str) {
 80013e8:	687b      	ldr	r3, [r7, #4]
 80013ea:	781b      	ldrb	r3, [r3, #0]
 80013ec:	2b00      	cmp	r3, #0
 80013ee:	d1ec      	bne.n	80013ca <USART1_SendString+0xa>
    }
}
 80013f0:	bf00      	nop
 80013f2:	bf00      	nop
 80013f4:	370c      	adds	r7, #12
 80013f6:	46bd      	mov	sp, r7
 80013f8:	bc80      	pop	{r7}
 80013fa:	4770      	bx	lr
 80013fc:	40013800 	.word	0x40013800

08001400 <USART1_SendChar>:

void USART1_SendChar(char c) {
 8001400:	b480      	push	{r7}
 8001402:	b083      	sub	sp, #12
 8001404:	af00      	add	r7, sp, #0
 8001406:	4603      	mov	r3, r0
 8001408:	71fb      	strb	r3, [r7, #7]
    while (!(USART1->SR & USART_SR_TXE));  // 等待 TX 空
 800140a:	bf00      	nop
 800140c:	4b07      	ldr	r3, [pc, #28]	@ (800142c <USART1_SendChar+0x2c>)
 800140e:	881b      	ldrh	r3, [r3, #0]
 8001410:	b29b      	uxth	r3, r3
 8001412:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001416:	2b00      	cmp	r3, #0
 8001418:	d0f8      	beq.n	800140c <USART1_SendChar+0xc>
    USART1->DR = c;
 800141a:	4b04      	ldr	r3, [pc, #16]	@ (800142c <USART1_SendChar+0x2c>)
 800141c:	79fa      	ldrb	r2, [r7, #7]
 800141e:	b292      	uxth	r2, r2
 8001420:	809a      	strh	r2, [r3, #4]
}
 8001422:	bf00      	nop
 8001424:	370c      	adds	r7, #12
 8001426:	46bd      	mov	sp, r7
 8001428:	bc80      	pop	{r7}
 800142a:	4770      	bx	lr
 800142c:	40013800 	.word	0x40013800

08001430 <seg_send>:

void seg_send(uint16_t number){
 8001430:	b480      	push	{r7}
 8001432:	b085      	sub	sp, #20
 8001434:	af00      	add	r7, sp, #0
 8001436:	4603      	mov	r3, r0
 8001438:	80fb      	strh	r3, [r7, #6]

    uint16_t first = tseg[number/10];
 800143a:	88fb      	ldrh	r3, [r7, #6]
 800143c:	4a15      	ldr	r2, [pc, #84]	@ (8001494 <seg_send+0x64>)
 800143e:	fba2 2303 	umull	r2, r3, r2, r3
 8001442:	08db      	lsrs	r3, r3, #3
 8001444:	b29b      	uxth	r3, r3
 8001446:	461a      	mov	r2, r3
 8001448:	4b13      	ldr	r3, [pc, #76]	@ (8001498 <seg_send+0x68>)
 800144a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800144e:	81fb      	strh	r3, [r7, #14]
    uint16_t second = tseg[number%10];
 8001450:	88fa      	ldrh	r2, [r7, #6]
 8001452:	4b10      	ldr	r3, [pc, #64]	@ (8001494 <seg_send+0x64>)
 8001454:	fba3 1302 	umull	r1, r3, r3, r2
 8001458:	08d9      	lsrs	r1, r3, #3
 800145a:	460b      	mov	r3, r1
 800145c:	009b      	lsls	r3, r3, #2
 800145e:	440b      	add	r3, r1
 8001460:	005b      	lsls	r3, r3, #1
 8001462:	1ad3      	subs	r3, r2, r3
 8001464:	b29b      	uxth	r3, r3
 8001466:	461a      	mov	r2, r3
 8001468:	4b0b      	ldr	r3, [pc, #44]	@ (8001498 <seg_send+0x68>)
 800146a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800146e:	81bb      	strh	r3, [r7, #12]

    uint16_t output_value = (second << 7) | first;
 8001470:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8001474:	01db      	lsls	r3, r3, #7
 8001476:	b21a      	sxth	r2, r3
 8001478:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800147c:	4313      	orrs	r3, r2
 800147e:	b21b      	sxth	r3, r3
 8001480:	817b      	strh	r3, [r7, #10]
	GPIOB->ODR = output_value;
 8001482:	4a06      	ldr	r2, [pc, #24]	@ (800149c <seg_send+0x6c>)
 8001484:	897b      	ldrh	r3, [r7, #10]
 8001486:	60d3      	str	r3, [r2, #12]
}
 8001488:	bf00      	nop
 800148a:	3714      	adds	r7, #20
 800148c:	46bd      	mov	sp, r7
 800148e:	bc80      	pop	{r7}
 8001490:	4770      	bx	lr
 8001492:	bf00      	nop
 8001494:	cccccccd 	.word	0xcccccccd
 8001498:	20000000 	.word	0x20000000
 800149c:	40010c00 	.word	0x40010c00

080014a0 <SysTick_Handler>:

// --- Interrupt Handlers ---
void SysTick_Handler(void) {
 80014a0:	b480      	push	{r7}
 80014a2:	af00      	add	r7, sp, #0
    tick_ms++;
 80014a4:	4b13      	ldr	r3, [pc, #76]	@ (80014f4 <SysTick_Handler+0x54>)
 80014a6:	681b      	ldr	r3, [r3, #0]
 80014a8:	3301      	adds	r3, #1
 80014aa:	4a12      	ldr	r2, [pc, #72]	@ (80014f4 <SysTick_Handler+0x54>)
 80014ac:	6013      	str	r3, [r2, #0]
    if(toggle_flag == 1){
 80014ae:	4b12      	ldr	r3, [pc, #72]	@ (80014f8 <SysTick_Handler+0x58>)
 80014b0:	781b      	ldrb	r3, [r3, #0]
 80014b2:	2b01      	cmp	r3, #1
 80014b4:	d11a      	bne.n	80014ec <SysTick_Handler+0x4c>
    	counter_1++;
 80014b6:	4b11      	ldr	r3, [pc, #68]	@ (80014fc <SysTick_Handler+0x5c>)
 80014b8:	681b      	ldr	r3, [r3, #0]
 80014ba:	3301      	adds	r3, #1
 80014bc:	4a0f      	ldr	r2, [pc, #60]	@ (80014fc <SysTick_Handler+0x5c>)
 80014be:	6013      	str	r3, [r2, #0]
    	if(counter_1 >=50000){
 80014c0:	4b0e      	ldr	r3, [pc, #56]	@ (80014fc <SysTick_Handler+0x5c>)
 80014c2:	681b      	ldr	r3, [r3, #0]
 80014c4:	f24c 324f 	movw	r2, #49999	@ 0xc34f
 80014c8:	4293      	cmp	r3, r2
 80014ca:	d904      	bls.n	80014d6 <SysTick_Handler+0x36>
    		GPIOB->ODR = (0x3F << 7) | 0x3F;
 80014cc:	4b0c      	ldr	r3, [pc, #48]	@ (8001500 <SysTick_Handler+0x60>)
 80014ce:	f641 72bf 	movw	r2, #8127	@ 0x1fbf
 80014d2:	60da      	str	r2, [r3, #12]
 80014d4:	e002      	b.n	80014dc <SysTick_Handler+0x3c>
    	} else {
    		GPIOB->ODR = 0x0000;
 80014d6:	4b0a      	ldr	r3, [pc, #40]	@ (8001500 <SysTick_Handler+0x60>)
 80014d8:	2200      	movs	r2, #0
 80014da:	60da      	str	r2, [r3, #12]
    	}
    	if(counter_1 >=100000){
 80014dc:	4b07      	ldr	r3, [pc, #28]	@ (80014fc <SysTick_Handler+0x5c>)
 80014de:	681b      	ldr	r3, [r3, #0]
 80014e0:	4a08      	ldr	r2, [pc, #32]	@ (8001504 <SysTick_Handler+0x64>)
 80014e2:	4293      	cmp	r3, r2
 80014e4:	d902      	bls.n	80014ec <SysTick_Handler+0x4c>
			counter_1 = 0;
 80014e6:	4b05      	ldr	r3, [pc, #20]	@ (80014fc <SysTick_Handler+0x5c>)
 80014e8:	2200      	movs	r2, #0
 80014ea:	601a      	str	r2, [r3, #0]
		}
    }
}
 80014ec:	bf00      	nop
 80014ee:	46bd      	mov	sp, r7
 80014f0:	bc80      	pop	{r7}
 80014f2:	4770      	bx	lr
 80014f4:	20000204 	.word	0x20000204
 80014f8:	20000220 	.word	0x20000220
 80014fc:	20000208 	.word	0x20000208
 8001500:	40010c00 	.word	0x40010c00
 8001504:	0001869f 	.word	0x0001869f

08001508 <EXTI3_IRQHandler>:

void EXTI3_IRQHandler(void) {
 8001508:	b480      	push	{r7}
 800150a:	b083      	sub	sp, #12
 800150c:	af00      	add	r7, sp, #0

	EXTI->PR = (1 << 3); // 立即清除旗標
 800150e:	4b15      	ldr	r3, [pc, #84]	@ (8001564 <EXTI3_IRQHandler+0x5c>)
 8001510:	2208      	movs	r2, #8
 8001512:	615a      	str	r2, [r3, #20]
	if (GPIOA->IDR & (1 << 3)) { // 上升緣
 8001514:	4b14      	ldr	r3, [pc, #80]	@ (8001568 <EXTI3_IRQHandler+0x60>)
 8001516:	689b      	ldr	r3, [r3, #8]
 8001518:	f003 0308 	and.w	r3, r3, #8
 800151c:	2b00      	cmp	r3, #0
 800151e:	d004      	beq.n	800152a <EXTI3_IRQHandler+0x22>
			// 記錄當前 SysTick 的計數
			exit_start_tick = tick_ms;
 8001520:	4b12      	ldr	r3, [pc, #72]	@ (800156c <EXTI3_IRQHandler+0x64>)
 8001522:	681b      	ldr	r3, [r3, #0]
 8001524:	4a12      	ldr	r2, [pc, #72]	@ (8001570 <EXTI3_IRQHandler+0x68>)
 8001526:	6013      	str	r3, [r2, #0]
				// 處理溢位的情況 (uint32_t 最大值)
				exit_pwidth = (0xFFFFFFFF - exit_start_tick) + current_tick + 1;
			}
			exit_measurement_done = 1;
	}
}
 8001528:	e017      	b.n	800155a <EXTI3_IRQHandler+0x52>
			uint32_t current_tick = tick_ms;
 800152a:	4b10      	ldr	r3, [pc, #64]	@ (800156c <EXTI3_IRQHandler+0x64>)
 800152c:	681b      	ldr	r3, [r3, #0]
 800152e:	607b      	str	r3, [r7, #4]
			if (current_tick >= exit_start_tick) {
 8001530:	4b0f      	ldr	r3, [pc, #60]	@ (8001570 <EXTI3_IRQHandler+0x68>)
 8001532:	681b      	ldr	r3, [r3, #0]
 8001534:	687a      	ldr	r2, [r7, #4]
 8001536:	429a      	cmp	r2, r3
 8001538:	d306      	bcc.n	8001548 <EXTI3_IRQHandler+0x40>
				exit_pwidth = current_tick - exit_start_tick;
 800153a:	4b0d      	ldr	r3, [pc, #52]	@ (8001570 <EXTI3_IRQHandler+0x68>)
 800153c:	681b      	ldr	r3, [r3, #0]
 800153e:	687a      	ldr	r2, [r7, #4]
 8001540:	1ad3      	subs	r3, r2, r3
 8001542:	4a0c      	ldr	r2, [pc, #48]	@ (8001574 <EXTI3_IRQHandler+0x6c>)
 8001544:	6013      	str	r3, [r2, #0]
 8001546:	e005      	b.n	8001554 <EXTI3_IRQHandler+0x4c>
				exit_pwidth = (0xFFFFFFFF - exit_start_tick) + current_tick + 1;
 8001548:	4b09      	ldr	r3, [pc, #36]	@ (8001570 <EXTI3_IRQHandler+0x68>)
 800154a:	681b      	ldr	r3, [r3, #0]
 800154c:	687a      	ldr	r2, [r7, #4]
 800154e:	1ad3      	subs	r3, r2, r3
 8001550:	4a08      	ldr	r2, [pc, #32]	@ (8001574 <EXTI3_IRQHandler+0x6c>)
 8001552:	6013      	str	r3, [r2, #0]
			exit_measurement_done = 1;
 8001554:	4b08      	ldr	r3, [pc, #32]	@ (8001578 <EXTI3_IRQHandler+0x70>)
 8001556:	2201      	movs	r2, #1
 8001558:	701a      	strb	r2, [r3, #0]
}
 800155a:	bf00      	nop
 800155c:	370c      	adds	r7, #12
 800155e:	46bd      	mov	sp, r7
 8001560:	bc80      	pop	{r7}
 8001562:	4770      	bx	lr
 8001564:	40010400 	.word	0x40010400
 8001568:	40010800 	.word	0x40010800
 800156c:	20000204 	.word	0x20000204
 8001570:	20000210 	.word	0x20000210
 8001574:	2000021c 	.word	0x2000021c
 8001578:	20000215 	.word	0x20000215

0800157c <EXTI9_5_IRQHandler>:


void EXTI9_5_IRQHandler(void) {
 800157c:	b480      	push	{r7}
 800157e:	b083      	sub	sp, #12
 8001580:	af00      	add	r7, sp, #0

	EXTI->PR = (1 << 5); // 立即清除旗標
 8001582:	4b15      	ldr	r3, [pc, #84]	@ (80015d8 <EXTI9_5_IRQHandler+0x5c>)
 8001584:	2220      	movs	r2, #32
 8001586:	615a      	str	r2, [r3, #20]
	if (GPIOA->IDR & (1 << 5)) { // 上升緣
 8001588:	4b14      	ldr	r3, [pc, #80]	@ (80015dc <EXTI9_5_IRQHandler+0x60>)
 800158a:	689b      	ldr	r3, [r3, #8]
 800158c:	f003 0320 	and.w	r3, r3, #32
 8001590:	2b00      	cmp	r3, #0
 8001592:	d004      	beq.n	800159e <EXTI9_5_IRQHandler+0x22>

			// 記錄當前 SysTick 的計數
			entry_start_tick = tick_ms;
 8001594:	4b12      	ldr	r3, [pc, #72]	@ (80015e0 <EXTI9_5_IRQHandler+0x64>)
 8001596:	681b      	ldr	r3, [r3, #0]
 8001598:	4a12      	ldr	r2, [pc, #72]	@ (80015e4 <EXTI9_5_IRQHandler+0x68>)
 800159a:	6013      	str	r3, [r2, #0]
				entry_pwidth = (0xFFFFFFFF - entry_start_tick) + current_tick + 1;
			}
			entry_measurement_done = 1;

	}
}
 800159c:	e017      	b.n	80015ce <EXTI9_5_IRQHandler+0x52>
			uint32_t current_tick = tick_ms;
 800159e:	4b10      	ldr	r3, [pc, #64]	@ (80015e0 <EXTI9_5_IRQHandler+0x64>)
 80015a0:	681b      	ldr	r3, [r3, #0]
 80015a2:	607b      	str	r3, [r7, #4]
			if (current_tick >= entry_start_tick) {
 80015a4:	4b0f      	ldr	r3, [pc, #60]	@ (80015e4 <EXTI9_5_IRQHandler+0x68>)
 80015a6:	681b      	ldr	r3, [r3, #0]
 80015a8:	687a      	ldr	r2, [r7, #4]
 80015aa:	429a      	cmp	r2, r3
 80015ac:	d306      	bcc.n	80015bc <EXTI9_5_IRQHandler+0x40>
				entry_pwidth = current_tick - entry_start_tick;
 80015ae:	4b0d      	ldr	r3, [pc, #52]	@ (80015e4 <EXTI9_5_IRQHandler+0x68>)
 80015b0:	681b      	ldr	r3, [r3, #0]
 80015b2:	687a      	ldr	r2, [r7, #4]
 80015b4:	1ad3      	subs	r3, r2, r3
 80015b6:	4a0c      	ldr	r2, [pc, #48]	@ (80015e8 <EXTI9_5_IRQHandler+0x6c>)
 80015b8:	6013      	str	r3, [r2, #0]
 80015ba:	e005      	b.n	80015c8 <EXTI9_5_IRQHandler+0x4c>
				entry_pwidth = (0xFFFFFFFF - entry_start_tick) + current_tick + 1;
 80015bc:	4b09      	ldr	r3, [pc, #36]	@ (80015e4 <EXTI9_5_IRQHandler+0x68>)
 80015be:	681b      	ldr	r3, [r3, #0]
 80015c0:	687a      	ldr	r2, [r7, #4]
 80015c2:	1ad3      	subs	r3, r2, r3
 80015c4:	4a08      	ldr	r2, [pc, #32]	@ (80015e8 <EXTI9_5_IRQHandler+0x6c>)
 80015c6:	6013      	str	r3, [r2, #0]
			entry_measurement_done = 1;
 80015c8:	4b08      	ldr	r3, [pc, #32]	@ (80015ec <EXTI9_5_IRQHandler+0x70>)
 80015ca:	2201      	movs	r2, #1
 80015cc:	701a      	strb	r2, [r3, #0]
}
 80015ce:	bf00      	nop
 80015d0:	370c      	adds	r7, #12
 80015d2:	46bd      	mov	sp, r7
 80015d4:	bc80      	pop	{r7}
 80015d6:	4770      	bx	lr
 80015d8:	40010400 	.word	0x40010400
 80015dc:	40010800 	.word	0x40010800
 80015e0:	20000204 	.word	0x20000204
 80015e4:	2000020c 	.word	0x2000020c
 80015e8:	20000218 	.word	0x20000218
 80015ec:	20000214 	.word	0x20000214

080015f0 <main>:


int main(void) {
 80015f0:	b580      	push	{r7, lr}
 80015f2:	b086      	sub	sp, #24
 80015f4:	af00      	add	r7, sp, #0
    My_GPIO_Init();
 80015f6:	f7ff fda3 	bl	8001140 <My_GPIO_Init>
    My_Timer_Init();
 80015fa:	f7ff fdcb 	bl	8001194 <My_Timer_Init>
    My_EXTI_Init();
 80015fe:	f7ff fe67 	bl	80012d0 <My_EXTI_Init>
    My_SysTick_Init();
 8001602:	f7ff fe9d 	bl	8001340 <My_SysTick_Init>
    My_USART1_Init();
 8001606:	f7ff fead 	bl	8001364 <My_USART1_Init>

    ServoTIM1_SetAngle(0);
 800160a:	2000      	movs	r0, #0
 800160c:	f7ff fe40 	bl	8001290 <ServoTIM1_SetAngle>
    ServoTIM2_SetAngle(180);
 8001610:	20b4      	movs	r0, #180	@ 0xb4
 8001612:	f7ff fe1d 	bl	8001250 <ServoTIM2_SetAngle>
    uint8_t choose_flag = 0;
 8001616:	2300      	movs	r3, #0
 8001618:	75fb      	strb	r3, [r7, #23]

    uint32_t loop_start_time;
    uint32_t loop2_start_time;

    uint32_t car = 20 - parking;
 800161a:	4b8e      	ldr	r3, [pc, #568]	@ (8001854 <main+0x264>)
 800161c:	881b      	ldrh	r3, [r3, #0]
 800161e:	f1c3 0314 	rsb	r3, r3, #20
 8001622:	60fb      	str	r3, [r7, #12]

    while (1) {
    	car = 20 - parking;
 8001624:	4b8b      	ldr	r3, [pc, #556]	@ (8001854 <main+0x264>)
 8001626:	881b      	ldrh	r3, [r3, #0]
 8001628:	f1c3 0314 	rsb	r3, r3, #20
 800162c:	60fb      	str	r3, [r7, #12]
    	if (parking != 0) {
 800162e:	4b89      	ldr	r3, [pc, #548]	@ (8001854 <main+0x264>)
 8001630:	881b      	ldrh	r3, [r3, #0]
 8001632:	2b00      	cmp	r3, #0
 8001634:	f000 8236 	beq.w	8001aa4 <main+0x4b4>
			seg_send(parking);
 8001638:	4b86      	ldr	r3, [pc, #536]	@ (8001854 <main+0x264>)
 800163a:	881b      	ldrh	r3, [r3, #0]
 800163c:	4618      	mov	r0, r3
 800163e:	f7ff fef7 	bl	8001430 <seg_send>

    		if (choose_flag == 0) {
 8001642:	7dfb      	ldrb	r3, [r7, #23]
 8001644:	2b00      	cmp	r3, #0
 8001646:	f040 811b 	bne.w	8001880 <main+0x290>

				if (entry_measurement_done == 0){
 800164a:	4b83      	ldr	r3, [pc, #524]	@ (8001858 <main+0x268>)
 800164c:	781b      	ldrb	r3, [r3, #0]
 800164e:	2b00      	cmp	r3, #0
 8001650:	d10b      	bne.n	800166a <main+0x7a>
					loop_start_time = tick_ms;
 8001652:	4b82      	ldr	r3, [pc, #520]	@ (800185c <main+0x26c>)
 8001654:	681b      	ldr	r3, [r3, #0]
 8001656:	613b      	str	r3, [r7, #16]
					GPIOA->BSRR = (1 << 4);
 8001658:	4b81      	ldr	r3, [pc, #516]	@ (8001860 <main+0x270>)
 800165a:	2210      	movs	r2, #16
 800165c:	611a      	str	r2, [r3, #16]
					delay_10us(1);
 800165e:	2001      	movs	r0, #1
 8001660:	f7ff fd56 	bl	8001110 <delay_10us>
					GPIOA->BRR = (1 << 4);
 8001664:	4b7e      	ldr	r3, [pc, #504]	@ (8001860 <main+0x270>)
 8001666:	2210      	movs	r2, #16
 8001668:	615a      	str	r2, [r3, #20]
				}

				if (entry_measurement_done) {
 800166a:	4b7b      	ldr	r3, [pc, #492]	@ (8001858 <main+0x268>)
 800166c:	781b      	ldrb	r3, [r3, #0]
 800166e:	2b00      	cmp	r3, #0
 8001670:	f000 80b3 	beq.w	80017da <main+0x1ea>
					distance_entry_cm = (float)entry_pwidth * 0.1715f;
 8001674:	4b7b      	ldr	r3, [pc, #492]	@ (8001864 <main+0x274>)
 8001676:	681b      	ldr	r3, [r3, #0]
 8001678:	4618      	mov	r0, r3
 800167a:	f7ff fb7f 	bl	8000d7c <__aeabi_ui2f>
 800167e:	4603      	mov	r3, r0
 8001680:	4979      	ldr	r1, [pc, #484]	@ (8001868 <main+0x278>)
 8001682:	4618      	mov	r0, r3
 8001684:	f7fe fd7c 	bl	8000180 <__aeabi_fmul>
 8001688:	4603      	mov	r3, r0
 800168a:	461a      	mov	r2, r3
 800168c:	4b77      	ldr	r3, [pc, #476]	@ (800186c <main+0x27c>)
 800168e:	601a      	str	r2, [r3, #0]
					entry_measurement_done = 0;
 8001690:	4b71      	ldr	r3, [pc, #452]	@ (8001858 <main+0x268>)
 8001692:	2200      	movs	r2, #0
 8001694:	701a      	strb	r2, [r3, #0]
					USART1_SendString("Car : ");
 8001696:	4876      	ldr	r0, [pc, #472]	@ (8001870 <main+0x280>)
 8001698:	f7ff fe92 	bl	80013c0 <USART1_SendString>
					car = 20 - parking;
 800169c:	4b6d      	ldr	r3, [pc, #436]	@ (8001854 <main+0x264>)
 800169e:	881b      	ldrh	r3, [r3, #0]
 80016a0:	f1c3 0314 	rsb	r3, r3, #20
 80016a4:	60fb      	str	r3, [r7, #12]
					if(car >= 10) {
 80016a6:	68fb      	ldr	r3, [r7, #12]
 80016a8:	2b09      	cmp	r3, #9
 80016aa:	d921      	bls.n	80016f0 <main+0x100>
						USART1_SendChar(car/10 + '0');
 80016ac:	68fb      	ldr	r3, [r7, #12]
 80016ae:	4a71      	ldr	r2, [pc, #452]	@ (8001874 <main+0x284>)
 80016b0:	fba2 2303 	umull	r2, r3, r2, r3
 80016b4:	08db      	lsrs	r3, r3, #3
 80016b6:	b2db      	uxtb	r3, r3
 80016b8:	3330      	adds	r3, #48	@ 0x30
 80016ba:	b2db      	uxtb	r3, r3
 80016bc:	4618      	mov	r0, r3
 80016be:	f7ff fe9f 	bl	8001400 <USART1_SendChar>
						USART1_SendChar(car%10 + '0');
 80016c2:	68f9      	ldr	r1, [r7, #12]
 80016c4:	4b6b      	ldr	r3, [pc, #428]	@ (8001874 <main+0x284>)
 80016c6:	fba3 2301 	umull	r2, r3, r3, r1
 80016ca:	08da      	lsrs	r2, r3, #3
 80016cc:	4613      	mov	r3, r2
 80016ce:	009b      	lsls	r3, r3, #2
 80016d0:	4413      	add	r3, r2
 80016d2:	005b      	lsls	r3, r3, #1
 80016d4:	1aca      	subs	r2, r1, r3
 80016d6:	b2d3      	uxtb	r3, r2
 80016d8:	3330      	adds	r3, #48	@ 0x30
 80016da:	b2db      	uxtb	r3, r3
 80016dc:	4618      	mov	r0, r3
 80016de:	f7ff fe8f 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\r');
 80016e2:	200d      	movs	r0, #13
 80016e4:	f7ff fe8c 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\n');
 80016e8:	200a      	movs	r0, #10
 80016ea:	f7ff fe89 	bl	8001400 <USART1_SendChar>
 80016ee:	e00c      	b.n	800170a <main+0x11a>
					} else {
						USART1_SendChar(car + '0');
 80016f0:	68fb      	ldr	r3, [r7, #12]
 80016f2:	b2db      	uxtb	r3, r3
 80016f4:	3330      	adds	r3, #48	@ 0x30
 80016f6:	b2db      	uxtb	r3, r3
 80016f8:	4618      	mov	r0, r3
 80016fa:	f7ff fe81 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\r');
 80016fe:	200d      	movs	r0, #13
 8001700:	f7ff fe7e 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\n');
 8001704:	200a      	movs	r0, #10
 8001706:	f7ff fe7b 	bl	8001400 <USART1_SendChar>
					}

					if (parking > 0) {
 800170a:	4b52      	ldr	r3, [pc, #328]	@ (8001854 <main+0x264>)
 800170c:	881b      	ldrh	r3, [r3, #0]
 800170e:	2b00      	cmp	r3, #0
 8001710:	d024      	beq.n	800175c <main+0x16c>
						if (distance_entry_cm < 100) {
 8001712:	4b56      	ldr	r3, [pc, #344]	@ (800186c <main+0x27c>)
 8001714:	681b      	ldr	r3, [r3, #0]
 8001716:	4958      	ldr	r1, [pc, #352]	@ (8001878 <main+0x288>)
 8001718:	4618      	mov	r0, r3
 800171a:	f7ff fbd5 	bl	8000ec8 <__aeabi_fcmplt>
 800171e:	4603      	mov	r3, r0
 8001720:	2b00      	cmp	r3, #0
 8001722:	d014      	beq.n	800174e <main+0x15e>
							parking -= 1;
 8001724:	4b4b      	ldr	r3, [pc, #300]	@ (8001854 <main+0x264>)
 8001726:	881b      	ldrh	r3, [r3, #0]
 8001728:	3b01      	subs	r3, #1
 800172a:	b29a      	uxth	r2, r3
 800172c:	4b49      	ldr	r3, [pc, #292]	@ (8001854 <main+0x264>)
 800172e:	801a      	strh	r2, [r3, #0]
							seg_send(parking);
 8001730:	4b48      	ldr	r3, [pc, #288]	@ (8001854 <main+0x264>)
 8001732:	881b      	ldrh	r3, [r3, #0]
 8001734:	4618      	mov	r0, r3
 8001736:	f7ff fe7b 	bl	8001430 <seg_send>
							ServoTIM2_SetAngle(90);
 800173a:	205a      	movs	r0, #90	@ 0x5a
 800173c:	f7ff fd88 	bl	8001250 <ServoTIM2_SetAngle>
							delay_10us(100000);
 8001740:	484e      	ldr	r0, [pc, #312]	@ (800187c <main+0x28c>)
 8001742:	f7ff fce5 	bl	8001110 <delay_10us>
							ServoTIM2_SetAngle(180);
 8001746:	20b4      	movs	r0, #180	@ 0xb4
 8001748:	f7ff fd82 	bl	8001250 <ServoTIM2_SetAngle>
 800174c:	e006      	b.n	800175c <main+0x16c>
						} else {
							ServoTIM2_SetAngle(180);
 800174e:	20b4      	movs	r0, #180	@ 0xb4
 8001750:	f7ff fd7e 	bl	8001250 <ServoTIM2_SetAngle>
							delay_10us(10000);
 8001754:	f242 7010 	movw	r0, #10000	@ 0x2710
 8001758:	f7ff fcda 	bl	8001110 <delay_10us>
						}
					}
					car = 20 - parking;
 800175c:	4b3d      	ldr	r3, [pc, #244]	@ (8001854 <main+0x264>)
 800175e:	881b      	ldrh	r3, [r3, #0]
 8001760:	f1c3 0314 	rsb	r3, r3, #20
 8001764:	60fb      	str	r3, [r7, #12]
					USART1_SendString("Car : ");
 8001766:	4842      	ldr	r0, [pc, #264]	@ (8001870 <main+0x280>)
 8001768:	f7ff fe2a 	bl	80013c0 <USART1_SendString>
					if(car >= 10) {
 800176c:	68fb      	ldr	r3, [r7, #12]
 800176e:	2b09      	cmp	r3, #9
 8001770:	d921      	bls.n	80017b6 <main+0x1c6>
						USART1_SendChar(car/10 + '0');
 8001772:	68fb      	ldr	r3, [r7, #12]
 8001774:	4a3f      	ldr	r2, [pc, #252]	@ (8001874 <main+0x284>)
 8001776:	fba2 2303 	umull	r2, r3, r2, r3
 800177a:	08db      	lsrs	r3, r3, #3
 800177c:	b2db      	uxtb	r3, r3
 800177e:	3330      	adds	r3, #48	@ 0x30
 8001780:	b2db      	uxtb	r3, r3
 8001782:	4618      	mov	r0, r3
 8001784:	f7ff fe3c 	bl	8001400 <USART1_SendChar>
						USART1_SendChar(car%10 + '0');
 8001788:	68f9      	ldr	r1, [r7, #12]
 800178a:	4b3a      	ldr	r3, [pc, #232]	@ (8001874 <main+0x284>)
 800178c:	fba3 2301 	umull	r2, r3, r3, r1
 8001790:	08da      	lsrs	r2, r3, #3
 8001792:	4613      	mov	r3, r2
 8001794:	009b      	lsls	r3, r3, #2
 8001796:	4413      	add	r3, r2
 8001798:	005b      	lsls	r3, r3, #1
 800179a:	1aca      	subs	r2, r1, r3
 800179c:	b2d3      	uxtb	r3, r2
 800179e:	3330      	adds	r3, #48	@ 0x30
 80017a0:	b2db      	uxtb	r3, r3
 80017a2:	4618      	mov	r0, r3
 80017a4:	f7ff fe2c 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\r');
 80017a8:	200d      	movs	r0, #13
 80017aa:	f7ff fe29 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\n');
 80017ae:	200a      	movs	r0, #10
 80017b0:	f7ff fe26 	bl	8001400 <USART1_SendChar>
 80017b4:	e00c      	b.n	80017d0 <main+0x1e0>
					} else {
						USART1_SendChar(car + '0');
 80017b6:	68fb      	ldr	r3, [r7, #12]
 80017b8:	b2db      	uxtb	r3, r3
 80017ba:	3330      	adds	r3, #48	@ 0x30
 80017bc:	b2db      	uxtb	r3, r3
 80017be:	4618      	mov	r0, r3
 80017c0:	f7ff fe1e 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\r');
 80017c4:	200d      	movs	r0, #13
 80017c6:	f7ff fe1b 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\n');
 80017ca:	200a      	movs	r0, #10
 80017cc:	f7ff fe18 	bl	8001400 <USART1_SendChar>
					}
					if(parking == 0) {
 80017d0:	4b20      	ldr	r3, [pc, #128]	@ (8001854 <main+0x264>)
 80017d2:	881b      	ldrh	r3, [r3, #0]
 80017d4:	2b00      	cmp	r3, #0
 80017d6:	d13a      	bne.n	800184e <main+0x25e>
						continue;
 80017d8:	e293      	b.n	8001d02 <main+0x712>
					}
				}
				else {
					car = 20 - parking;
 80017da:	4b1e      	ldr	r3, [pc, #120]	@ (8001854 <main+0x264>)
 80017dc:	881b      	ldrh	r3, [r3, #0]
 80017de:	f1c3 0314 	rsb	r3, r3, #20
 80017e2:	60fb      	str	r3, [r7, #12]
					USART1_SendString("Car : ");
 80017e4:	4822      	ldr	r0, [pc, #136]	@ (8001870 <main+0x280>)
 80017e6:	f7ff fdeb 	bl	80013c0 <USART1_SendString>
					if(car >= 10) {
 80017ea:	68fb      	ldr	r3, [r7, #12]
 80017ec:	2b09      	cmp	r3, #9
 80017ee:	d921      	bls.n	8001834 <main+0x244>
						USART1_SendChar(car/10 + '0');
 80017f0:	68fb      	ldr	r3, [r7, #12]
 80017f2:	4a20      	ldr	r2, [pc, #128]	@ (8001874 <main+0x284>)
 80017f4:	fba2 2303 	umull	r2, r3, r2, r3
 80017f8:	08db      	lsrs	r3, r3, #3
 80017fa:	b2db      	uxtb	r3, r3
 80017fc:	3330      	adds	r3, #48	@ 0x30
 80017fe:	b2db      	uxtb	r3, r3
 8001800:	4618      	mov	r0, r3
 8001802:	f7ff fdfd 	bl	8001400 <USART1_SendChar>
						USART1_SendChar(car%10 + '0');
 8001806:	68f9      	ldr	r1, [r7, #12]
 8001808:	4b1a      	ldr	r3, [pc, #104]	@ (8001874 <main+0x284>)
 800180a:	fba3 2301 	umull	r2, r3, r3, r1
 800180e:	08da      	lsrs	r2, r3, #3
 8001810:	4613      	mov	r3, r2
 8001812:	009b      	lsls	r3, r3, #2
 8001814:	4413      	add	r3, r2
 8001816:	005b      	lsls	r3, r3, #1
 8001818:	1aca      	subs	r2, r1, r3
 800181a:	b2d3      	uxtb	r3, r2
 800181c:	3330      	adds	r3, #48	@ 0x30
 800181e:	b2db      	uxtb	r3, r3
 8001820:	4618      	mov	r0, r3
 8001822:	f7ff fded 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\r');
 8001826:	200d      	movs	r0, #13
 8001828:	f7ff fdea 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\n');
 800182c:	200a      	movs	r0, #10
 800182e:	f7ff fde7 	bl	8001400 <USART1_SendChar>
 8001832:	e00c      	b.n	800184e <main+0x25e>
					} else {
						USART1_SendChar(car + '0');
 8001834:	68fb      	ldr	r3, [r7, #12]
 8001836:	b2db      	uxtb	r3, r3
 8001838:	3330      	adds	r3, #48	@ 0x30
 800183a:	b2db      	uxtb	r3, r3
 800183c:	4618      	mov	r0, r3
 800183e:	f7ff fddf 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\r');
 8001842:	200d      	movs	r0, #13
 8001844:	f7ff fddc 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\n');
 8001848:	200a      	movs	r0, #10
 800184a:	f7ff fdd9 	bl	8001400 <USART1_SendChar>
					}
				}
				choose_flag = 1;
 800184e:	2301      	movs	r3, #1
 8001850:	75fb      	strb	r3, [r7, #23]
 8001852:	e115      	b.n	8001a80 <main+0x490>
 8001854:	2000001c 	.word	0x2000001c
 8001858:	20000214 	.word	0x20000214
 800185c:	20000204 	.word	0x20000204
 8001860:	40010800 	.word	0x40010800
 8001864:	20000218 	.word	0x20000218
 8001868:	3e2f9db2 	.word	0x3e2f9db2
 800186c:	20000014 	.word	0x20000014
 8001870:	08004888 	.word	0x08004888
 8001874:	cccccccd 	.word	0xcccccccd
 8001878:	42c80000 	.word	0x42c80000
 800187c:	000186a0 	.word	0x000186a0
    		} else {
    			if (exit_measurement_done == 0){
 8001880:	4bb3      	ldr	r3, [pc, #716]	@ (8001b50 <main+0x560>)
 8001882:	781b      	ldrb	r3, [r3, #0]
 8001884:	2b00      	cmp	r3, #0
 8001886:	d10b      	bne.n	80018a0 <main+0x2b0>
    				loop_start_time = tick_ms;
 8001888:	4bb2      	ldr	r3, [pc, #712]	@ (8001b54 <main+0x564>)
 800188a:	681b      	ldr	r3, [r3, #0]
 800188c:	613b      	str	r3, [r7, #16]
					GPIOA->BSRR = (1 << 2);
 800188e:	4bb2      	ldr	r3, [pc, #712]	@ (8001b58 <main+0x568>)
 8001890:	2204      	movs	r2, #4
 8001892:	611a      	str	r2, [r3, #16]
					delay_10us(1);
 8001894:	2001      	movs	r0, #1
 8001896:	f7ff fc3b 	bl	8001110 <delay_10us>
					GPIOA->BRR = (1 << 2);
 800189a:	4baf      	ldr	r3, [pc, #700]	@ (8001b58 <main+0x568>)
 800189c:	2204      	movs	r2, #4
 800189e:	615a      	str	r2, [r3, #20]
				}

				if (exit_measurement_done) {
 80018a0:	4bab      	ldr	r3, [pc, #684]	@ (8001b50 <main+0x560>)
 80018a2:	781b      	ldrb	r3, [r3, #0]
 80018a4:	2b00      	cmp	r3, #0
 80018a6:	f000 80af 	beq.w	8001a08 <main+0x418>
					distance_exit_cm = (float)exit_pwidth * 0.1715f;
 80018aa:	4bac      	ldr	r3, [pc, #688]	@ (8001b5c <main+0x56c>)
 80018ac:	681b      	ldr	r3, [r3, #0]
 80018ae:	4618      	mov	r0, r3
 80018b0:	f7ff fa64 	bl	8000d7c <__aeabi_ui2f>
 80018b4:	4603      	mov	r3, r0
 80018b6:	49aa      	ldr	r1, [pc, #680]	@ (8001b60 <main+0x570>)
 80018b8:	4618      	mov	r0, r3
 80018ba:	f7fe fc61 	bl	8000180 <__aeabi_fmul>
 80018be:	4603      	mov	r3, r0
 80018c0:	461a      	mov	r2, r3
 80018c2:	4ba8      	ldr	r3, [pc, #672]	@ (8001b64 <main+0x574>)
 80018c4:	601a      	str	r2, [r3, #0]
					exit_measurement_done = 0;
 80018c6:	4ba2      	ldr	r3, [pc, #648]	@ (8001b50 <main+0x560>)
 80018c8:	2200      	movs	r2, #0
 80018ca:	701a      	strb	r2, [r3, #0]
					USART1_SendString("Car : ");
 80018cc:	48a6      	ldr	r0, [pc, #664]	@ (8001b68 <main+0x578>)
 80018ce:	f7ff fd77 	bl	80013c0 <USART1_SendString>
					car = 20 - parking;
 80018d2:	4ba6      	ldr	r3, [pc, #664]	@ (8001b6c <main+0x57c>)
 80018d4:	881b      	ldrh	r3, [r3, #0]
 80018d6:	f1c3 0314 	rsb	r3, r3, #20
 80018da:	60fb      	str	r3, [r7, #12]
					if(car >= 10) {
 80018dc:	68fb      	ldr	r3, [r7, #12]
 80018de:	2b09      	cmp	r3, #9
 80018e0:	d921      	bls.n	8001926 <main+0x336>
						USART1_SendChar(car/10 + '0');
 80018e2:	68fb      	ldr	r3, [r7, #12]
 80018e4:	4aa2      	ldr	r2, [pc, #648]	@ (8001b70 <main+0x580>)
 80018e6:	fba2 2303 	umull	r2, r3, r2, r3
 80018ea:	08db      	lsrs	r3, r3, #3
 80018ec:	b2db      	uxtb	r3, r3
 80018ee:	3330      	adds	r3, #48	@ 0x30
 80018f0:	b2db      	uxtb	r3, r3
 80018f2:	4618      	mov	r0, r3
 80018f4:	f7ff fd84 	bl	8001400 <USART1_SendChar>
						USART1_SendChar(car%10 + '0');
 80018f8:	68f9      	ldr	r1, [r7, #12]
 80018fa:	4b9d      	ldr	r3, [pc, #628]	@ (8001b70 <main+0x580>)
 80018fc:	fba3 2301 	umull	r2, r3, r3, r1
 8001900:	08da      	lsrs	r2, r3, #3
 8001902:	4613      	mov	r3, r2
 8001904:	009b      	lsls	r3, r3, #2
 8001906:	4413      	add	r3, r2
 8001908:	005b      	lsls	r3, r3, #1
 800190a:	1aca      	subs	r2, r1, r3
 800190c:	b2d3      	uxtb	r3, r2
 800190e:	3330      	adds	r3, #48	@ 0x30
 8001910:	b2db      	uxtb	r3, r3
 8001912:	4618      	mov	r0, r3
 8001914:	f7ff fd74 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\r');
 8001918:	200d      	movs	r0, #13
 800191a:	f7ff fd71 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\n');
 800191e:	200a      	movs	r0, #10
 8001920:	f7ff fd6e 	bl	8001400 <USART1_SendChar>
 8001924:	e00c      	b.n	8001940 <main+0x350>
					} else {
						USART1_SendChar(car + '0');
 8001926:	68fb      	ldr	r3, [r7, #12]
 8001928:	b2db      	uxtb	r3, r3
 800192a:	3330      	adds	r3, #48	@ 0x30
 800192c:	b2db      	uxtb	r3, r3
 800192e:	4618      	mov	r0, r3
 8001930:	f7ff fd66 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\r');
 8001934:	200d      	movs	r0, #13
 8001936:	f7ff fd63 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\n');
 800193a:	200a      	movs	r0, #10
 800193c:	f7ff fd60 	bl	8001400 <USART1_SendChar>
					}
					if (parking < 20) {
 8001940:	4b8a      	ldr	r3, [pc, #552]	@ (8001b6c <main+0x57c>)
 8001942:	881b      	ldrh	r3, [r3, #0]
 8001944:	2b13      	cmp	r3, #19
 8001946:	d824      	bhi.n	8001992 <main+0x3a2>
						if (distance_exit_cm < 100) {
 8001948:	4b86      	ldr	r3, [pc, #536]	@ (8001b64 <main+0x574>)
 800194a:	681b      	ldr	r3, [r3, #0]
 800194c:	4989      	ldr	r1, [pc, #548]	@ (8001b74 <main+0x584>)
 800194e:	4618      	mov	r0, r3
 8001950:	f7ff faba 	bl	8000ec8 <__aeabi_fcmplt>
 8001954:	4603      	mov	r3, r0
 8001956:	2b00      	cmp	r3, #0
 8001958:	d014      	beq.n	8001984 <main+0x394>
							parking += 1;
 800195a:	4b84      	ldr	r3, [pc, #528]	@ (8001b6c <main+0x57c>)
 800195c:	881b      	ldrh	r3, [r3, #0]
 800195e:	3301      	adds	r3, #1
 8001960:	b29a      	uxth	r2, r3
 8001962:	4b82      	ldr	r3, [pc, #520]	@ (8001b6c <main+0x57c>)
 8001964:	801a      	strh	r2, [r3, #0]
							seg_send(parking);
 8001966:	4b81      	ldr	r3, [pc, #516]	@ (8001b6c <main+0x57c>)
 8001968:	881b      	ldrh	r3, [r3, #0]
 800196a:	4618      	mov	r0, r3
 800196c:	f7ff fd60 	bl	8001430 <seg_send>
							ServoTIM1_SetAngle(90);
 8001970:	205a      	movs	r0, #90	@ 0x5a
 8001972:	f7ff fc8d 	bl	8001290 <ServoTIM1_SetAngle>
							delay_10us(100000);
 8001976:	4880      	ldr	r0, [pc, #512]	@ (8001b78 <main+0x588>)
 8001978:	f7ff fbca 	bl	8001110 <delay_10us>
							ServoTIM1_SetAngle(0);
 800197c:	2000      	movs	r0, #0
 800197e:	f7ff fc87 	bl	8001290 <ServoTIM1_SetAngle>
 8001982:	e006      	b.n	8001992 <main+0x3a2>
						} else {
							ServoTIM1_SetAngle(0);
 8001984:	2000      	movs	r0, #0
 8001986:	f7ff fc83 	bl	8001290 <ServoTIM1_SetAngle>
							delay_10us(10000);
 800198a:	f242 7010 	movw	r0, #10000	@ 0x2710
 800198e:	f7ff fbbf 	bl	8001110 <delay_10us>
						}
					}
					USART1_SendString("Car : ");
 8001992:	4875      	ldr	r0, [pc, #468]	@ (8001b68 <main+0x578>)
 8001994:	f7ff fd14 	bl	80013c0 <USART1_SendString>
					car = 20 - parking;
 8001998:	4b74      	ldr	r3, [pc, #464]	@ (8001b6c <main+0x57c>)
 800199a:	881b      	ldrh	r3, [r3, #0]
 800199c:	f1c3 0314 	rsb	r3, r3, #20
 80019a0:	60fb      	str	r3, [r7, #12]
					if(car >= 10) {
 80019a2:	68fb      	ldr	r3, [r7, #12]
 80019a4:	2b09      	cmp	r3, #9
 80019a6:	d921      	bls.n	80019ec <main+0x3fc>
						USART1_SendChar(car/10 + '0');
 80019a8:	68fb      	ldr	r3, [r7, #12]
 80019aa:	4a71      	ldr	r2, [pc, #452]	@ (8001b70 <main+0x580>)
 80019ac:	fba2 2303 	umull	r2, r3, r2, r3
 80019b0:	08db      	lsrs	r3, r3, #3
 80019b2:	b2db      	uxtb	r3, r3
 80019b4:	3330      	adds	r3, #48	@ 0x30
 80019b6:	b2db      	uxtb	r3, r3
 80019b8:	4618      	mov	r0, r3
 80019ba:	f7ff fd21 	bl	8001400 <USART1_SendChar>
						USART1_SendChar(car%10 + '0');
 80019be:	68f9      	ldr	r1, [r7, #12]
 80019c0:	4b6b      	ldr	r3, [pc, #428]	@ (8001b70 <main+0x580>)
 80019c2:	fba3 2301 	umull	r2, r3, r3, r1
 80019c6:	08da      	lsrs	r2, r3, #3
 80019c8:	4613      	mov	r3, r2
 80019ca:	009b      	lsls	r3, r3, #2
 80019cc:	4413      	add	r3, r2
 80019ce:	005b      	lsls	r3, r3, #1
 80019d0:	1aca      	subs	r2, r1, r3
 80019d2:	b2d3      	uxtb	r3, r2
 80019d4:	3330      	adds	r3, #48	@ 0x30
 80019d6:	b2db      	uxtb	r3, r3
 80019d8:	4618      	mov	r0, r3
 80019da:	f7ff fd11 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\r');
 80019de:	200d      	movs	r0, #13
 80019e0:	f7ff fd0e 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\n');
 80019e4:	200a      	movs	r0, #10
 80019e6:	f7ff fd0b 	bl	8001400 <USART1_SendChar>
 80019ea:	e047      	b.n	8001a7c <main+0x48c>
					} else {
						USART1_SendChar(car + '0');
 80019ec:	68fb      	ldr	r3, [r7, #12]
 80019ee:	b2db      	uxtb	r3, r3
 80019f0:	3330      	adds	r3, #48	@ 0x30
 80019f2:	b2db      	uxtb	r3, r3
 80019f4:	4618      	mov	r0, r3
 80019f6:	f7ff fd03 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\r');
 80019fa:	200d      	movs	r0, #13
 80019fc:	f7ff fd00 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\n');
 8001a00:	200a      	movs	r0, #10
 8001a02:	f7ff fcfd 	bl	8001400 <USART1_SendChar>
 8001a06:	e039      	b.n	8001a7c <main+0x48c>
					}
				} else {
					USART1_SendString("Car : ");
 8001a08:	4857      	ldr	r0, [pc, #348]	@ (8001b68 <main+0x578>)
 8001a0a:	f7ff fcd9 	bl	80013c0 <USART1_SendString>
					car = 20 - parking;
 8001a0e:	4b57      	ldr	r3, [pc, #348]	@ (8001b6c <main+0x57c>)
 8001a10:	881b      	ldrh	r3, [r3, #0]
 8001a12:	f1c3 0314 	rsb	r3, r3, #20
 8001a16:	60fb      	str	r3, [r7, #12]
					if(car >= 10) {
 8001a18:	68fb      	ldr	r3, [r7, #12]
 8001a1a:	2b09      	cmp	r3, #9
 8001a1c:	d921      	bls.n	8001a62 <main+0x472>
						USART1_SendChar(car/10 + '0');
 8001a1e:	68fb      	ldr	r3, [r7, #12]
 8001a20:	4a53      	ldr	r2, [pc, #332]	@ (8001b70 <main+0x580>)
 8001a22:	fba2 2303 	umull	r2, r3, r2, r3
 8001a26:	08db      	lsrs	r3, r3, #3
 8001a28:	b2db      	uxtb	r3, r3
 8001a2a:	3330      	adds	r3, #48	@ 0x30
 8001a2c:	b2db      	uxtb	r3, r3
 8001a2e:	4618      	mov	r0, r3
 8001a30:	f7ff fce6 	bl	8001400 <USART1_SendChar>
						USART1_SendChar(car%10 + '0');
 8001a34:	68f9      	ldr	r1, [r7, #12]
 8001a36:	4b4e      	ldr	r3, [pc, #312]	@ (8001b70 <main+0x580>)
 8001a38:	fba3 2301 	umull	r2, r3, r3, r1
 8001a3c:	08da      	lsrs	r2, r3, #3
 8001a3e:	4613      	mov	r3, r2
 8001a40:	009b      	lsls	r3, r3, #2
 8001a42:	4413      	add	r3, r2
 8001a44:	005b      	lsls	r3, r3, #1
 8001a46:	1aca      	subs	r2, r1, r3
 8001a48:	b2d3      	uxtb	r3, r2
 8001a4a:	3330      	adds	r3, #48	@ 0x30
 8001a4c:	b2db      	uxtb	r3, r3
 8001a4e:	4618      	mov	r0, r3
 8001a50:	f7ff fcd6 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\r');
 8001a54:	200d      	movs	r0, #13
 8001a56:	f7ff fcd3 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\n');
 8001a5a:	200a      	movs	r0, #10
 8001a5c:	f7ff fcd0 	bl	8001400 <USART1_SendChar>
 8001a60:	e00c      	b.n	8001a7c <main+0x48c>
					} else {
						USART1_SendChar(car + '0');
 8001a62:	68fb      	ldr	r3, [r7, #12]
 8001a64:	b2db      	uxtb	r3, r3
 8001a66:	3330      	adds	r3, #48	@ 0x30
 8001a68:	b2db      	uxtb	r3, r3
 8001a6a:	4618      	mov	r0, r3
 8001a6c:	f7ff fcc8 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\r');
 8001a70:	200d      	movs	r0, #13
 8001a72:	f7ff fcc5 	bl	8001400 <USART1_SendChar>
						USART1_SendChar('\n');
 8001a76:	200a      	movs	r0, #10
 8001a78:	f7ff fcc2 	bl	8001400 <USART1_SendChar>
					}
				}
				choose_flag = 0;
 8001a7c:	2300      	movs	r3, #0
 8001a7e:	75fb      	strb	r3, [r7, #23]
    		}

    		// 補齊 delay時間差
	        uint32_t time_elapsed = tick_ms - loop_start_time;
 8001a80:	4b34      	ldr	r3, [pc, #208]	@ (8001b54 <main+0x564>)
 8001a82:	681a      	ldr	r2, [r3, #0]
 8001a84:	693b      	ldr	r3, [r7, #16]
 8001a86:	1ad3      	subs	r3, r2, r3
 8001a88:	603b      	str	r3, [r7, #0]
	        if (time_elapsed < 250000) {
 8001a8a:	683b      	ldr	r3, [r7, #0]
 8001a8c:	4a3b      	ldr	r2, [pc, #236]	@ (8001b7c <main+0x58c>)
 8001a8e:	4293      	cmp	r3, r2
 8001a90:	f63f adc8 	bhi.w	8001624 <main+0x34>
	            delay_10us(250000 - time_elapsed);
 8001a94:	683b      	ldr	r3, [r7, #0]
 8001a96:	f5c3 3374 	rsb	r3, r3, #249856	@ 0x3d000
 8001a9a:	3390      	adds	r3, #144	@ 0x90
 8001a9c:	4618      	mov	r0, r3
 8001a9e:	f7ff fb37 	bl	8001110 <delay_10us>
 8001aa2:	e5bf      	b.n	8001624 <main+0x34>
	        }

    	} else {
			toggle_flag = 1;
 8001aa4:	4b36      	ldr	r3, [pc, #216]	@ (8001b80 <main+0x590>)
 8001aa6:	2201      	movs	r2, #1
 8001aa8:	701a      	strb	r2, [r3, #0]
			loop2_start_time = tick_ms;
 8001aaa:	4b2a      	ldr	r3, [pc, #168]	@ (8001b54 <main+0x564>)
 8001aac:	681b      	ldr	r3, [r3, #0]
 8001aae:	60bb      	str	r3, [r7, #8]
			GPIOA->BSRR = (1 << 2);
 8001ab0:	4b29      	ldr	r3, [pc, #164]	@ (8001b58 <main+0x568>)
 8001ab2:	2204      	movs	r2, #4
 8001ab4:	611a      	str	r2, [r3, #16]
			delay_10us(1);
 8001ab6:	2001      	movs	r0, #1
 8001ab8:	f7ff fb2a 	bl	8001110 <delay_10us>
			GPIOA->BRR = (1 << 2);
 8001abc:	4b26      	ldr	r3, [pc, #152]	@ (8001b58 <main+0x568>)
 8001abe:	2204      	movs	r2, #4
 8001ac0:	615a      	str	r2, [r3, #20]

			if (exit_measurement_done) {
 8001ac2:	4b23      	ldr	r3, [pc, #140]	@ (8001b50 <main+0x560>)
 8001ac4:	781b      	ldrb	r3, [r3, #0]
 8001ac6:	2b00      	cmp	r3, #0
 8001ac8:	f000 80cf 	beq.w	8001c6a <main+0x67a>
				distance_exit_cm = (float)exit_pwidth * 0.1715f;
 8001acc:	4b23      	ldr	r3, [pc, #140]	@ (8001b5c <main+0x56c>)
 8001ace:	681b      	ldr	r3, [r3, #0]
 8001ad0:	4618      	mov	r0, r3
 8001ad2:	f7ff f953 	bl	8000d7c <__aeabi_ui2f>
 8001ad6:	4603      	mov	r3, r0
 8001ad8:	4921      	ldr	r1, [pc, #132]	@ (8001b60 <main+0x570>)
 8001ada:	4618      	mov	r0, r3
 8001adc:	f7fe fb50 	bl	8000180 <__aeabi_fmul>
 8001ae0:	4603      	mov	r3, r0
 8001ae2:	461a      	mov	r2, r3
 8001ae4:	4b1f      	ldr	r3, [pc, #124]	@ (8001b64 <main+0x574>)
 8001ae6:	601a      	str	r2, [r3, #0]
				exit_measurement_done = 0;
 8001ae8:	4b19      	ldr	r3, [pc, #100]	@ (8001b50 <main+0x560>)
 8001aea:	2200      	movs	r2, #0
 8001aec:	701a      	strb	r2, [r3, #0]
				entry_measurement_done = 0;
 8001aee:	4b25      	ldr	r3, [pc, #148]	@ (8001b84 <main+0x594>)
 8001af0:	2200      	movs	r2, #0
 8001af2:	701a      	strb	r2, [r3, #0]
				USART1_SendString("Car : ");
 8001af4:	481c      	ldr	r0, [pc, #112]	@ (8001b68 <main+0x578>)
 8001af6:	f7ff fc63 	bl	80013c0 <USART1_SendString>
				car = 20 - parking;
 8001afa:	4b1c      	ldr	r3, [pc, #112]	@ (8001b6c <main+0x57c>)
 8001afc:	881b      	ldrh	r3, [r3, #0]
 8001afe:	f1c3 0314 	rsb	r3, r3, #20
 8001b02:	60fb      	str	r3, [r7, #12]
				if(car >= 10) {
 8001b04:	68fb      	ldr	r3, [r7, #12]
 8001b06:	2b09      	cmp	r3, #9
 8001b08:	d93e      	bls.n	8001b88 <main+0x598>
					USART1_SendChar(car/10 + '0');
 8001b0a:	68fb      	ldr	r3, [r7, #12]
 8001b0c:	4a18      	ldr	r2, [pc, #96]	@ (8001b70 <main+0x580>)
 8001b0e:	fba2 2303 	umull	r2, r3, r2, r3
 8001b12:	08db      	lsrs	r3, r3, #3
 8001b14:	b2db      	uxtb	r3, r3
 8001b16:	3330      	adds	r3, #48	@ 0x30
 8001b18:	b2db      	uxtb	r3, r3
 8001b1a:	4618      	mov	r0, r3
 8001b1c:	f7ff fc70 	bl	8001400 <USART1_SendChar>
					USART1_SendChar(car%10 + '0');
 8001b20:	68f9      	ldr	r1, [r7, #12]
 8001b22:	4b13      	ldr	r3, [pc, #76]	@ (8001b70 <main+0x580>)
 8001b24:	fba3 2301 	umull	r2, r3, r3, r1
 8001b28:	08da      	lsrs	r2, r3, #3
 8001b2a:	4613      	mov	r3, r2
 8001b2c:	009b      	lsls	r3, r3, #2
 8001b2e:	4413      	add	r3, r2
 8001b30:	005b      	lsls	r3, r3, #1
 8001b32:	1aca      	subs	r2, r1, r3
 8001b34:	b2d3      	uxtb	r3, r2
 8001b36:	3330      	adds	r3, #48	@ 0x30
 8001b38:	b2db      	uxtb	r3, r3
 8001b3a:	4618      	mov	r0, r3
 8001b3c:	f7ff fc60 	bl	8001400 <USART1_SendChar>
					USART1_SendChar('\r');
 8001b40:	200d      	movs	r0, #13
 8001b42:	f7ff fc5d 	bl	8001400 <USART1_SendChar>
					USART1_SendChar('\n');
 8001b46:	200a      	movs	r0, #10
 8001b48:	f7ff fc5a 	bl	8001400 <USART1_SendChar>
 8001b4c:	e029      	b.n	8001ba2 <main+0x5b2>
 8001b4e:	bf00      	nop
 8001b50:	20000215 	.word	0x20000215
 8001b54:	20000204 	.word	0x20000204
 8001b58:	40010800 	.word	0x40010800
 8001b5c:	2000021c 	.word	0x2000021c
 8001b60:	3e2f9db2 	.word	0x3e2f9db2
 8001b64:	20000018 	.word	0x20000018
 8001b68:	08004888 	.word	0x08004888
 8001b6c:	2000001c 	.word	0x2000001c
 8001b70:	cccccccd 	.word	0xcccccccd
 8001b74:	42c80000 	.word	0x42c80000
 8001b78:	000186a0 	.word	0x000186a0
 8001b7c:	0003d08f 	.word	0x0003d08f
 8001b80:	20000220 	.word	0x20000220
 8001b84:	20000214 	.word	0x20000214
				} else {
					USART1_SendChar(car + '0');
 8001b88:	68fb      	ldr	r3, [r7, #12]
 8001b8a:	b2db      	uxtb	r3, r3
 8001b8c:	3330      	adds	r3, #48	@ 0x30
 8001b8e:	b2db      	uxtb	r3, r3
 8001b90:	4618      	mov	r0, r3
 8001b92:	f7ff fc35 	bl	8001400 <USART1_SendChar>
					USART1_SendChar('\r');
 8001b96:	200d      	movs	r0, #13
 8001b98:	f7ff fc32 	bl	8001400 <USART1_SendChar>
					USART1_SendChar('\n');
 8001b9c:	200a      	movs	r0, #10
 8001b9e:	f7ff fc2f 	bl	8001400 <USART1_SendChar>
				}
				if (distance_exit_cm < 100) {
 8001ba2:	4b58      	ldr	r3, [pc, #352]	@ (8001d04 <main+0x714>)
 8001ba4:	681b      	ldr	r3, [r3, #0]
 8001ba6:	4958      	ldr	r1, [pc, #352]	@ (8001d08 <main+0x718>)
 8001ba8:	4618      	mov	r0, r3
 8001baa:	f7ff f98d 	bl	8000ec8 <__aeabi_fcmplt>
 8001bae:	4603      	mov	r3, r0
 8001bb0:	2b00      	cmp	r3, #0
 8001bb2:	d017      	beq.n	8001be4 <main+0x5f4>
					parking += 1;
 8001bb4:	4b55      	ldr	r3, [pc, #340]	@ (8001d0c <main+0x71c>)
 8001bb6:	881b      	ldrh	r3, [r3, #0]
 8001bb8:	3301      	adds	r3, #1
 8001bba:	b29a      	uxth	r2, r3
 8001bbc:	4b53      	ldr	r3, [pc, #332]	@ (8001d0c <main+0x71c>)
 8001bbe:	801a      	strh	r2, [r3, #0]
					toggle_flag = 0;
 8001bc0:	4b53      	ldr	r3, [pc, #332]	@ (8001d10 <main+0x720>)
 8001bc2:	2200      	movs	r2, #0
 8001bc4:	701a      	strb	r2, [r3, #0]
					seg_send(parking);
 8001bc6:	4b51      	ldr	r3, [pc, #324]	@ (8001d0c <main+0x71c>)
 8001bc8:	881b      	ldrh	r3, [r3, #0]
 8001bca:	4618      	mov	r0, r3
 8001bcc:	f7ff fc30 	bl	8001430 <seg_send>
					ServoTIM1_SetAngle(90);
 8001bd0:	205a      	movs	r0, #90	@ 0x5a
 8001bd2:	f7ff fb5d 	bl	8001290 <ServoTIM1_SetAngle>
					delay_10us(100000);
 8001bd6:	484f      	ldr	r0, [pc, #316]	@ (8001d14 <main+0x724>)
 8001bd8:	f7ff fa9a 	bl	8001110 <delay_10us>
					ServoTIM1_SetAngle(0);
 8001bdc:	2000      	movs	r0, #0
 8001bde:	f7ff fb57 	bl	8001290 <ServoTIM1_SetAngle>
 8001be2:	e006      	b.n	8001bf2 <main+0x602>
				} else {
					ServoTIM1_SetAngle(0);
 8001be4:	2000      	movs	r0, #0
 8001be6:	f7ff fb53 	bl	8001290 <ServoTIM1_SetAngle>
					delay_10us(10000);
 8001bea:	f242 7010 	movw	r0, #10000	@ 0x2710
 8001bee:	f7ff fa8f 	bl	8001110 <delay_10us>
				}
				car = 20 - parking;
 8001bf2:	4b46      	ldr	r3, [pc, #280]	@ (8001d0c <main+0x71c>)
 8001bf4:	881b      	ldrh	r3, [r3, #0]
 8001bf6:	f1c3 0314 	rsb	r3, r3, #20
 8001bfa:	60fb      	str	r3, [r7, #12]
				USART1_SendString("Car : ");
 8001bfc:	4846      	ldr	r0, [pc, #280]	@ (8001d18 <main+0x728>)
 8001bfe:	f7ff fbdf 	bl	80013c0 <USART1_SendString>
				if(car >= 10) {
 8001c02:	68fb      	ldr	r3, [r7, #12]
 8001c04:	2b09      	cmp	r3, #9
 8001c06:	d921      	bls.n	8001c4c <main+0x65c>
					USART1_SendChar(car/10 + '0');
 8001c08:	68fb      	ldr	r3, [r7, #12]
 8001c0a:	4a44      	ldr	r2, [pc, #272]	@ (8001d1c <main+0x72c>)
 8001c0c:	fba2 2303 	umull	r2, r3, r2, r3
 8001c10:	08db      	lsrs	r3, r3, #3
 8001c12:	b2db      	uxtb	r3, r3
 8001c14:	3330      	adds	r3, #48	@ 0x30
 8001c16:	b2db      	uxtb	r3, r3
 8001c18:	4618      	mov	r0, r3
 8001c1a:	f7ff fbf1 	bl	8001400 <USART1_SendChar>
					USART1_SendChar(car%10 + '0');
 8001c1e:	68f9      	ldr	r1, [r7, #12]
 8001c20:	4b3e      	ldr	r3, [pc, #248]	@ (8001d1c <main+0x72c>)
 8001c22:	fba3 2301 	umull	r2, r3, r3, r1
 8001c26:	08da      	lsrs	r2, r3, #3
 8001c28:	4613      	mov	r3, r2
 8001c2a:	009b      	lsls	r3, r3, #2
 8001c2c:	4413      	add	r3, r2
 8001c2e:	005b      	lsls	r3, r3, #1
 8001c30:	1aca      	subs	r2, r1, r3
 8001c32:	b2d3      	uxtb	r3, r2
 8001c34:	3330      	adds	r3, #48	@ 0x30
 8001c36:	b2db      	uxtb	r3, r3
 8001c38:	4618      	mov	r0, r3
 8001c3a:	f7ff fbe1 	bl	8001400 <USART1_SendChar>
					USART1_SendChar('\r');
 8001c3e:	200d      	movs	r0, #13
 8001c40:	f7ff fbde 	bl	8001400 <USART1_SendChar>
					USART1_SendChar('\n');
 8001c44:	200a      	movs	r0, #10
 8001c46:	f7ff fbdb 	bl	8001400 <USART1_SendChar>
 8001c4a:	e048      	b.n	8001cde <main+0x6ee>
				} else {
					USART1_SendChar(parking + '0');
 8001c4c:	4b2f      	ldr	r3, [pc, #188]	@ (8001d0c <main+0x71c>)
 8001c4e:	881b      	ldrh	r3, [r3, #0]
 8001c50:	b2db      	uxtb	r3, r3
 8001c52:	3330      	adds	r3, #48	@ 0x30
 8001c54:	b2db      	uxtb	r3, r3
 8001c56:	4618      	mov	r0, r3
 8001c58:	f7ff fbd2 	bl	8001400 <USART1_SendChar>
					USART1_SendChar('\r');
 8001c5c:	200d      	movs	r0, #13
 8001c5e:	f7ff fbcf 	bl	8001400 <USART1_SendChar>
					USART1_SendChar('\n');
 8001c62:	200a      	movs	r0, #10
 8001c64:	f7ff fbcc 	bl	8001400 <USART1_SendChar>
 8001c68:	e039      	b.n	8001cde <main+0x6ee>
				}
			} else {
				USART1_SendString("Car : ");
 8001c6a:	482b      	ldr	r0, [pc, #172]	@ (8001d18 <main+0x728>)
 8001c6c:	f7ff fba8 	bl	80013c0 <USART1_SendString>
				car = 20 - parking;
 8001c70:	4b26      	ldr	r3, [pc, #152]	@ (8001d0c <main+0x71c>)
 8001c72:	881b      	ldrh	r3, [r3, #0]
 8001c74:	f1c3 0314 	rsb	r3, r3, #20
 8001c78:	60fb      	str	r3, [r7, #12]
				if(car >= 10) {
 8001c7a:	68fb      	ldr	r3, [r7, #12]
 8001c7c:	2b09      	cmp	r3, #9
 8001c7e:	d921      	bls.n	8001cc4 <main+0x6d4>
					USART1_SendChar(car/10 + '0');
 8001c80:	68fb      	ldr	r3, [r7, #12]
 8001c82:	4a26      	ldr	r2, [pc, #152]	@ (8001d1c <main+0x72c>)
 8001c84:	fba2 2303 	umull	r2, r3, r2, r3
 8001c88:	08db      	lsrs	r3, r3, #3
 8001c8a:	b2db      	uxtb	r3, r3
 8001c8c:	3330      	adds	r3, #48	@ 0x30
 8001c8e:	b2db      	uxtb	r3, r3
 8001c90:	4618      	mov	r0, r3
 8001c92:	f7ff fbb5 	bl	8001400 <USART1_SendChar>
					USART1_SendChar(car%10 + '0');
 8001c96:	68f9      	ldr	r1, [r7, #12]
 8001c98:	4b20      	ldr	r3, [pc, #128]	@ (8001d1c <main+0x72c>)
 8001c9a:	fba3 2301 	umull	r2, r3, r3, r1
 8001c9e:	08da      	lsrs	r2, r3, #3
 8001ca0:	4613      	mov	r3, r2
 8001ca2:	009b      	lsls	r3, r3, #2
 8001ca4:	4413      	add	r3, r2
 8001ca6:	005b      	lsls	r3, r3, #1
 8001ca8:	1aca      	subs	r2, r1, r3
 8001caa:	b2d3      	uxtb	r3, r2
 8001cac:	3330      	adds	r3, #48	@ 0x30
 8001cae:	b2db      	uxtb	r3, r3
 8001cb0:	4618      	mov	r0, r3
 8001cb2:	f7ff fba5 	bl	8001400 <USART1_SendChar>
					USART1_SendChar('\r');
 8001cb6:	200d      	movs	r0, #13
 8001cb8:	f7ff fba2 	bl	8001400 <USART1_SendChar>
					USART1_SendChar('\n');
 8001cbc:	200a      	movs	r0, #10
 8001cbe:	f7ff fb9f 	bl	8001400 <USART1_SendChar>
 8001cc2:	e00c      	b.n	8001cde <main+0x6ee>
				} else {
					USART1_SendChar(car + '0');
 8001cc4:	68fb      	ldr	r3, [r7, #12]
 8001cc6:	b2db      	uxtb	r3, r3
 8001cc8:	3330      	adds	r3, #48	@ 0x30
 8001cca:	b2db      	uxtb	r3, r3
 8001ccc:	4618      	mov	r0, r3
 8001cce:	f7ff fb97 	bl	8001400 <USART1_SendChar>
					USART1_SendChar('\r');
 8001cd2:	200d      	movs	r0, #13
 8001cd4:	f7ff fb94 	bl	8001400 <USART1_SendChar>
					USART1_SendChar('\n');
 8001cd8:	200a      	movs	r0, #10
 8001cda:	f7ff fb91 	bl	8001400 <USART1_SendChar>
				}
			}
			uint32_t time2_elapsed = tick_ms - loop2_start_time;
 8001cde:	4b10      	ldr	r3, [pc, #64]	@ (8001d20 <main+0x730>)
 8001ce0:	681a      	ldr	r2, [r3, #0]
 8001ce2:	68bb      	ldr	r3, [r7, #8]
 8001ce4:	1ad3      	subs	r3, r2, r3
 8001ce6:	607b      	str	r3, [r7, #4]
			if (time2_elapsed < 500000) {
 8001ce8:	687b      	ldr	r3, [r7, #4]
 8001cea:	4a0e      	ldr	r2, [pc, #56]	@ (8001d24 <main+0x734>)
 8001cec:	4293      	cmp	r3, r2
 8001cee:	f63f ac99 	bhi.w	8001624 <main+0x34>
				delay_10us(500000 - time2_elapsed);
 8001cf2:	687b      	ldr	r3, [r7, #4]
 8001cf4:	f5c3 23f4 	rsb	r3, r3, #499712	@ 0x7a000
 8001cf8:	f503 7390 	add.w	r3, r3, #288	@ 0x120
 8001cfc:	4618      	mov	r0, r3
 8001cfe:	f7ff fa07 	bl	8001110 <delay_10us>
    	car = 20 - parking;
 8001d02:	e48f      	b.n	8001624 <main+0x34>
 8001d04:	20000018 	.word	0x20000018
 8001d08:	42c80000 	.word	0x42c80000
 8001d0c:	2000001c 	.word	0x2000001c
 8001d10:	20000220 	.word	0x20000220
 8001d14:	000186a0 	.word	0x000186a0
 8001d18:	08004888 	.word	0x08004888
 8001d1c:	cccccccd 	.word	0xcccccccd
 8001d20:	20000204 	.word	0x20000204
 8001d24:	0007a11f 	.word	0x0007a11f

08001d28 <NMI_Handler>:
  * @brief  This function handles NMI exception.
  * @param  None
  * @retval None
  */
void NMI_Handler(void)
{
 8001d28:	b480      	push	{r7}
 8001d2a:	af00      	add	r7, sp, #0
}
 8001d2c:	bf00      	nop
 8001d2e:	46bd      	mov	sp, r7
 8001d30:	bc80      	pop	{r7}
 8001d32:	4770      	bx	lr

08001d34 <HardFault_Handler>:
  * @brief  This function handles Hard Fault exception.
  * @param  None
  * @retval None
  */
void HardFault_Handler(void)
{
 8001d34:	b480      	push	{r7}
 8001d36:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Hard Fault exception occurs */
  while (1)
 8001d38:	bf00      	nop
 8001d3a:	e7fd      	b.n	8001d38 <HardFault_Handler+0x4>

08001d3c <MemManage_Handler>:
  * @brief  This function handles Memory Manage exception.
  * @param  None
  * @retval None
  */
void MemManage_Handler(void)
{
 8001d3c:	b480      	push	{r7}
 8001d3e:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Memory Manage exception occurs */
  while (1)
 8001d40:	bf00      	nop
 8001d42:	e7fd      	b.n	8001d40 <MemManage_Handler+0x4>

08001d44 <BusFault_Handler>:
  * @brief  This function handles Bus Fault exception.
  * @param  None
  * @retval None
  */
void BusFault_Handler(void)
{
 8001d44:	b480      	push	{r7}
 8001d46:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Bus Fault exception occurs */
  while (1)
 8001d48:	bf00      	nop
 8001d4a:	e7fd      	b.n	8001d48 <BusFault_Handler+0x4>

08001d4c <UsageFault_Handler>:
  * @brief  This function handles Usage Fault exception.
  * @param  None
  * @retval None
  */
void UsageFault_Handler(void)
{
 8001d4c:	b480      	push	{r7}
 8001d4e:	af00      	add	r7, sp, #0
  /* Go to infinite loop when Usage Fault exception occurs */
  while (1)
 8001d50:	bf00      	nop
 8001d52:	e7fd      	b.n	8001d50 <UsageFault_Handler+0x4>

08001d54 <SVC_Handler>:
  * @brief  This function handles SVCall exception.
  * @param  None
  * @retval None
  */
void SVC_Handler(void)
{
 8001d54:	b480      	push	{r7}
 8001d56:	af00      	add	r7, sp, #0
}
 8001d58:	bf00      	nop
 8001d5a:	46bd      	mov	sp, r7
 8001d5c:	bc80      	pop	{r7}
 8001d5e:	4770      	bx	lr

08001d60 <DebugMon_Handler>:
  * @brief  This function handles Debug Monitor exception.
  * @param  None
  * @retval None
  */
void DebugMon_Handler(void)
{
 8001d60:	b480      	push	{r7}
 8001d62:	af00      	add	r7, sp, #0
}
 8001d64:	bf00      	nop
 8001d66:	46bd      	mov	sp, r7
 8001d68:	bc80      	pop	{r7}
 8001d6a:	4770      	bx	lr

08001d6c <PendSV_Handler>:
  * @brief  This function handles PendSVC exception.
  * @param  None
  * @retval None
  */
void PendSV_Handler(void)
{
 8001d6c:	b480      	push	{r7}
 8001d6e:	af00      	add	r7, sp, #0
}
 8001d70:	bf00      	nop
 8001d72:	46bd      	mov	sp, r7
 8001d74:	bc80      	pop	{r7}
 8001d76:	4770      	bx	lr

08001d78 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8001d78:	b480      	push	{r7}
 8001d7a:	af00      	add	r7, sp, #0
  return 1;
 8001d7c:	2301      	movs	r3, #1
}
 8001d7e:	4618      	mov	r0, r3
 8001d80:	46bd      	mov	sp, r7
 8001d82:	bc80      	pop	{r7}
 8001d84:	4770      	bx	lr

08001d86 <_kill>:

int _kill(int pid, int sig)
{
 8001d86:	b580      	push	{r7, lr}
 8001d88:	b082      	sub	sp, #8
 8001d8a:	af00      	add	r7, sp, #0
 8001d8c:	6078      	str	r0, [r7, #4]
 8001d8e:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001d90:	f000 fe90 	bl	8002ab4 <__errno>
 8001d94:	4603      	mov	r3, r0
 8001d96:	2216      	movs	r2, #22
 8001d98:	601a      	str	r2, [r3, #0]
  return -1;
 8001d9a:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001d9e:	4618      	mov	r0, r3
 8001da0:	3708      	adds	r7, #8
 8001da2:	46bd      	mov	sp, r7
 8001da4:	bd80      	pop	{r7, pc}

08001da6 <_exit>:

void _exit (int status)
{
 8001da6:	b580      	push	{r7, lr}
 8001da8:	b082      	sub	sp, #8
 8001daa:	af00      	add	r7, sp, #0
 8001dac:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001dae:	f04f 31ff 	mov.w	r1, #4294967295
 8001db2:	6878      	ldr	r0, [r7, #4]
 8001db4:	f7ff ffe7 	bl	8001d86 <_kill>
  while (1) {}    /* Make sure we hang here */
 8001db8:	bf00      	nop
 8001dba:	e7fd      	b.n	8001db8 <_exit+0x12>

08001dbc <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001dbc:	b580      	push	{r7, lr}
 8001dbe:	b086      	sub	sp, #24
 8001dc0:	af00      	add	r7, sp, #0
 8001dc2:	60f8      	str	r0, [r7, #12]
 8001dc4:	60b9      	str	r1, [r7, #8]
 8001dc6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001dc8:	2300      	movs	r3, #0
 8001dca:	617b      	str	r3, [r7, #20]
 8001dcc:	e00a      	b.n	8001de4 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001dce:	f3af 8000 	nop.w
 8001dd2:	4601      	mov	r1, r0
 8001dd4:	68bb      	ldr	r3, [r7, #8]
 8001dd6:	1c5a      	adds	r2, r3, #1
 8001dd8:	60ba      	str	r2, [r7, #8]
 8001dda:	b2ca      	uxtb	r2, r1
 8001ddc:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001dde:	697b      	ldr	r3, [r7, #20]
 8001de0:	3301      	adds	r3, #1
 8001de2:	617b      	str	r3, [r7, #20]
 8001de4:	697a      	ldr	r2, [r7, #20]
 8001de6:	687b      	ldr	r3, [r7, #4]
 8001de8:	429a      	cmp	r2, r3
 8001dea:	dbf0      	blt.n	8001dce <_read+0x12>
  }

  return len;
 8001dec:	687b      	ldr	r3, [r7, #4]
}
 8001dee:	4618      	mov	r0, r3
 8001df0:	3718      	adds	r7, #24
 8001df2:	46bd      	mov	sp, r7
 8001df4:	bd80      	pop	{r7, pc}

08001df6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001df6:	b580      	push	{r7, lr}
 8001df8:	b086      	sub	sp, #24
 8001dfa:	af00      	add	r7, sp, #0
 8001dfc:	60f8      	str	r0, [r7, #12]
 8001dfe:	60b9      	str	r1, [r7, #8]
 8001e00:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001e02:	2300      	movs	r3, #0
 8001e04:	617b      	str	r3, [r7, #20]
 8001e06:	e009      	b.n	8001e1c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001e08:	68bb      	ldr	r3, [r7, #8]
 8001e0a:	1c5a      	adds	r2, r3, #1
 8001e0c:	60ba      	str	r2, [r7, #8]
 8001e0e:	781b      	ldrb	r3, [r3, #0]
 8001e10:	4618      	mov	r0, r3
 8001e12:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001e16:	697b      	ldr	r3, [r7, #20]
 8001e18:	3301      	adds	r3, #1
 8001e1a:	617b      	str	r3, [r7, #20]
 8001e1c:	697a      	ldr	r2, [r7, #20]
 8001e1e:	687b      	ldr	r3, [r7, #4]
 8001e20:	429a      	cmp	r2, r3
 8001e22:	dbf1      	blt.n	8001e08 <_write+0x12>
  }
  return len;
 8001e24:	687b      	ldr	r3, [r7, #4]
}
 8001e26:	4618      	mov	r0, r3
 8001e28:	3718      	adds	r7, #24
 8001e2a:	46bd      	mov	sp, r7
 8001e2c:	bd80      	pop	{r7, pc}

08001e2e <_close>:

int _close(int file)
{
 8001e2e:	b480      	push	{r7}
 8001e30:	b083      	sub	sp, #12
 8001e32:	af00      	add	r7, sp, #0
 8001e34:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001e36:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001e3a:	4618      	mov	r0, r3
 8001e3c:	370c      	adds	r7, #12
 8001e3e:	46bd      	mov	sp, r7
 8001e40:	bc80      	pop	{r7}
 8001e42:	4770      	bx	lr

08001e44 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8001e44:	b480      	push	{r7}
 8001e46:	b083      	sub	sp, #12
 8001e48:	af00      	add	r7, sp, #0
 8001e4a:	6078      	str	r0, [r7, #4]
 8001e4c:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001e4e:	683b      	ldr	r3, [r7, #0]
 8001e50:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001e54:	605a      	str	r2, [r3, #4]
  return 0;
 8001e56:	2300      	movs	r3, #0
}
 8001e58:	4618      	mov	r0, r3
 8001e5a:	370c      	adds	r7, #12
 8001e5c:	46bd      	mov	sp, r7
 8001e5e:	bc80      	pop	{r7}
 8001e60:	4770      	bx	lr

08001e62 <_isatty>:

int _isatty(int file)
{
 8001e62:	b480      	push	{r7}
 8001e64:	b083      	sub	sp, #12
 8001e66:	af00      	add	r7, sp, #0
 8001e68:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001e6a:	2301      	movs	r3, #1
}
 8001e6c:	4618      	mov	r0, r3
 8001e6e:	370c      	adds	r7, #12
 8001e70:	46bd      	mov	sp, r7
 8001e72:	bc80      	pop	{r7}
 8001e74:	4770      	bx	lr

08001e76 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001e76:	b480      	push	{r7}
 8001e78:	b085      	sub	sp, #20
 8001e7a:	af00      	add	r7, sp, #0
 8001e7c:	60f8      	str	r0, [r7, #12]
 8001e7e:	60b9      	str	r1, [r7, #8]
 8001e80:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001e82:	2300      	movs	r3, #0
}
 8001e84:	4618      	mov	r0, r3
 8001e86:	3714      	adds	r7, #20
 8001e88:	46bd      	mov	sp, r7
 8001e8a:	bc80      	pop	{r7}
 8001e8c:	4770      	bx	lr
	...

08001e90 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001e90:	b580      	push	{r7, lr}
 8001e92:	b086      	sub	sp, #24
 8001e94:	af00      	add	r7, sp, #0
 8001e96:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001e98:	4a14      	ldr	r2, [pc, #80]	@ (8001eec <_sbrk+0x5c>)
 8001e9a:	4b15      	ldr	r3, [pc, #84]	@ (8001ef0 <_sbrk+0x60>)
 8001e9c:	1ad3      	subs	r3, r2, r3
 8001e9e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001ea0:	697b      	ldr	r3, [r7, #20]
 8001ea2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001ea4:	4b13      	ldr	r3, [pc, #76]	@ (8001ef4 <_sbrk+0x64>)
 8001ea6:	681b      	ldr	r3, [r3, #0]
 8001ea8:	2b00      	cmp	r3, #0
 8001eaa:	d102      	bne.n	8001eb2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001eac:	4b11      	ldr	r3, [pc, #68]	@ (8001ef4 <_sbrk+0x64>)
 8001eae:	4a12      	ldr	r2, [pc, #72]	@ (8001ef8 <_sbrk+0x68>)
 8001eb0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001eb2:	4b10      	ldr	r3, [pc, #64]	@ (8001ef4 <_sbrk+0x64>)
 8001eb4:	681a      	ldr	r2, [r3, #0]
 8001eb6:	687b      	ldr	r3, [r7, #4]
 8001eb8:	4413      	add	r3, r2
 8001eba:	693a      	ldr	r2, [r7, #16]
 8001ebc:	429a      	cmp	r2, r3
 8001ebe:	d207      	bcs.n	8001ed0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001ec0:	f000 fdf8 	bl	8002ab4 <__errno>
 8001ec4:	4603      	mov	r3, r0
 8001ec6:	220c      	movs	r2, #12
 8001ec8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001eca:	f04f 33ff 	mov.w	r3, #4294967295
 8001ece:	e009      	b.n	8001ee4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001ed0:	4b08      	ldr	r3, [pc, #32]	@ (8001ef4 <_sbrk+0x64>)
 8001ed2:	681b      	ldr	r3, [r3, #0]
 8001ed4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001ed6:	4b07      	ldr	r3, [pc, #28]	@ (8001ef4 <_sbrk+0x64>)
 8001ed8:	681a      	ldr	r2, [r3, #0]
 8001eda:	687b      	ldr	r3, [r7, #4]
 8001edc:	4413      	add	r3, r2
 8001ede:	4a05      	ldr	r2, [pc, #20]	@ (8001ef4 <_sbrk+0x64>)
 8001ee0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001ee2:	68fb      	ldr	r3, [r7, #12]
}
 8001ee4:	4618      	mov	r0, r3
 8001ee6:	3718      	adds	r7, #24
 8001ee8:	46bd      	mov	sp, r7
 8001eea:	bd80      	pop	{r7, pc}
 8001eec:	20005000 	.word	0x20005000
 8001ef0:	00000400 	.word	0x00000400
 8001ef4:	20000224 	.word	0x20000224
 8001ef8:	20000378 	.word	0x20000378

08001efc <Reset_Handler>:
 8001efc:	480d      	ldr	r0, [pc, #52]	@ (8001f34 <LoopForever+0x2>)
 8001efe:	4685      	mov	sp, r0
 8001f00:	f7ff f80a 	bl	8000f18 <SystemInit>
 8001f04:	480c      	ldr	r0, [pc, #48]	@ (8001f38 <LoopForever+0x6>)
 8001f06:	490d      	ldr	r1, [pc, #52]	@ (8001f3c <LoopForever+0xa>)
 8001f08:	4a0d      	ldr	r2, [pc, #52]	@ (8001f40 <LoopForever+0xe>)
 8001f0a:	2300      	movs	r3, #0
 8001f0c:	e002      	b.n	8001f14 <LoopCopyDataInit>

08001f0e <CopyDataInit>:
 8001f0e:	58d4      	ldr	r4, [r2, r3]
 8001f10:	50c4      	str	r4, [r0, r3]
 8001f12:	3304      	adds	r3, #4

08001f14 <LoopCopyDataInit>:
 8001f14:	18c4      	adds	r4, r0, r3
 8001f16:	428c      	cmp	r4, r1
 8001f18:	d3f9      	bcc.n	8001f0e <CopyDataInit>
 8001f1a:	4a0a      	ldr	r2, [pc, #40]	@ (8001f44 <LoopForever+0x12>)
 8001f1c:	4c0a      	ldr	r4, [pc, #40]	@ (8001f48 <LoopForever+0x16>)
 8001f1e:	2300      	movs	r3, #0
 8001f20:	e001      	b.n	8001f26 <LoopFillZerobss>

08001f22 <FillZerobss>:
 8001f22:	6013      	str	r3, [r2, #0]
 8001f24:	3204      	adds	r2, #4

08001f26 <LoopFillZerobss>:
 8001f26:	42a2      	cmp	r2, r4
 8001f28:	d3fb      	bcc.n	8001f22 <FillZerobss>
 8001f2a:	f000 fdc9 	bl	8002ac0 <__libc_init_array>
 8001f2e:	f7ff fb5f 	bl	80015f0 <main>

08001f32 <LoopForever>:
 8001f32:	e7fe      	b.n	8001f32 <LoopForever>
 8001f34:	20005000 	.word	0x20005000
 8001f38:	20000000 	.word	0x20000000
 8001f3c:	200001e8 	.word	0x200001e8
 8001f40:	08004c14 	.word	0x08004c14
 8001f44:	200001e8 	.word	0x200001e8
 8001f48:	20000374 	.word	0x20000374

08001f4c <ADC1_2_IRQHandler>:
 8001f4c:	e7fe      	b.n	8001f4c <ADC1_2_IRQHandler>

08001f4e <__cvt>:
 8001f4e:	2b00      	cmp	r3, #0
 8001f50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001f54:	461d      	mov	r5, r3
 8001f56:	bfbb      	ittet	lt
 8001f58:	f103 4300 	addlt.w	r3, r3, #2147483648	@ 0x80000000
 8001f5c:	461d      	movlt	r5, r3
 8001f5e:	2300      	movge	r3, #0
 8001f60:	232d      	movlt	r3, #45	@ 0x2d
 8001f62:	b088      	sub	sp, #32
 8001f64:	4614      	mov	r4, r2
 8001f66:	bfb8      	it	lt
 8001f68:	4614      	movlt	r4, r2
 8001f6a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8001f6c:	9e10      	ldr	r6, [sp, #64]	@ 0x40
 8001f6e:	7013      	strb	r3, [r2, #0]
 8001f70:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8001f72:	f8dd a04c 	ldr.w	sl, [sp, #76]	@ 0x4c
 8001f76:	f023 0820 	bic.w	r8, r3, #32
 8001f7a:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001f7e:	d005      	beq.n	8001f8c <__cvt+0x3e>
 8001f80:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8001f84:	d100      	bne.n	8001f88 <__cvt+0x3a>
 8001f86:	3601      	adds	r6, #1
 8001f88:	2302      	movs	r3, #2
 8001f8a:	e000      	b.n	8001f8e <__cvt+0x40>
 8001f8c:	2303      	movs	r3, #3
 8001f8e:	aa07      	add	r2, sp, #28
 8001f90:	9204      	str	r2, [sp, #16]
 8001f92:	aa06      	add	r2, sp, #24
 8001f94:	e9cd a202 	strd	sl, r2, [sp, #8]
 8001f98:	e9cd 3600 	strd	r3, r6, [sp]
 8001f9c:	4622      	mov	r2, r4
 8001f9e:	462b      	mov	r3, r5
 8001fa0:	f000 fe4e 	bl	8002c40 <_dtoa_r>
 8001fa4:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8001fa8:	4607      	mov	r7, r0
 8001faa:	d119      	bne.n	8001fe0 <__cvt+0x92>
 8001fac:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8001fae:	07db      	lsls	r3, r3, #31
 8001fb0:	d50e      	bpl.n	8001fd0 <__cvt+0x82>
 8001fb2:	eb00 0906 	add.w	r9, r0, r6
 8001fb6:	2200      	movs	r2, #0
 8001fb8:	2300      	movs	r3, #0
 8001fba:	4620      	mov	r0, r4
 8001fbc:	4629      	mov	r1, r5
 8001fbe:	f7fe fdb7 	bl	8000b30 <__aeabi_dcmpeq>
 8001fc2:	b108      	cbz	r0, 8001fc8 <__cvt+0x7a>
 8001fc4:	f8cd 901c 	str.w	r9, [sp, #28]
 8001fc8:	2230      	movs	r2, #48	@ 0x30
 8001fca:	9b07      	ldr	r3, [sp, #28]
 8001fcc:	454b      	cmp	r3, r9
 8001fce:	d31e      	bcc.n	800200e <__cvt+0xc0>
 8001fd0:	4638      	mov	r0, r7
 8001fd2:	9b07      	ldr	r3, [sp, #28]
 8001fd4:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8001fd6:	1bdb      	subs	r3, r3, r7
 8001fd8:	6013      	str	r3, [r2, #0]
 8001fda:	b008      	add	sp, #32
 8001fdc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001fe0:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8001fe4:	eb00 0906 	add.w	r9, r0, r6
 8001fe8:	d1e5      	bne.n	8001fb6 <__cvt+0x68>
 8001fea:	7803      	ldrb	r3, [r0, #0]
 8001fec:	2b30      	cmp	r3, #48	@ 0x30
 8001fee:	d10a      	bne.n	8002006 <__cvt+0xb8>
 8001ff0:	2200      	movs	r2, #0
 8001ff2:	2300      	movs	r3, #0
 8001ff4:	4620      	mov	r0, r4
 8001ff6:	4629      	mov	r1, r5
 8001ff8:	f7fe fd9a 	bl	8000b30 <__aeabi_dcmpeq>
 8001ffc:	b918      	cbnz	r0, 8002006 <__cvt+0xb8>
 8001ffe:	f1c6 0601 	rsb	r6, r6, #1
 8002002:	f8ca 6000 	str.w	r6, [sl]
 8002006:	f8da 3000 	ldr.w	r3, [sl]
 800200a:	4499      	add	r9, r3
 800200c:	e7d3      	b.n	8001fb6 <__cvt+0x68>
 800200e:	1c59      	adds	r1, r3, #1
 8002010:	9107      	str	r1, [sp, #28]
 8002012:	701a      	strb	r2, [r3, #0]
 8002014:	e7d9      	b.n	8001fca <__cvt+0x7c>

08002016 <__exponent>:
 8002016:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002018:	2900      	cmp	r1, #0
 800201a:	bfb6      	itet	lt
 800201c:	232d      	movlt	r3, #45	@ 0x2d
 800201e:	232b      	movge	r3, #43	@ 0x2b
 8002020:	4249      	neglt	r1, r1
 8002022:	2909      	cmp	r1, #9
 8002024:	7002      	strb	r2, [r0, #0]
 8002026:	7043      	strb	r3, [r0, #1]
 8002028:	dd29      	ble.n	800207e <__exponent+0x68>
 800202a:	f10d 0307 	add.w	r3, sp, #7
 800202e:	461d      	mov	r5, r3
 8002030:	270a      	movs	r7, #10
 8002032:	fbb1 f6f7 	udiv	r6, r1, r7
 8002036:	461a      	mov	r2, r3
 8002038:	fb07 1416 	mls	r4, r7, r6, r1
 800203c:	3430      	adds	r4, #48	@ 0x30
 800203e:	f802 4c01 	strb.w	r4, [r2, #-1]
 8002042:	460c      	mov	r4, r1
 8002044:	2c63      	cmp	r4, #99	@ 0x63
 8002046:	4631      	mov	r1, r6
 8002048:	f103 33ff 	add.w	r3, r3, #4294967295
 800204c:	dcf1      	bgt.n	8002032 <__exponent+0x1c>
 800204e:	3130      	adds	r1, #48	@ 0x30
 8002050:	1e94      	subs	r4, r2, #2
 8002052:	f803 1c01 	strb.w	r1, [r3, #-1]
 8002056:	4623      	mov	r3, r4
 8002058:	1c41      	adds	r1, r0, #1
 800205a:	42ab      	cmp	r3, r5
 800205c:	d30a      	bcc.n	8002074 <__exponent+0x5e>
 800205e:	f10d 0309 	add.w	r3, sp, #9
 8002062:	1a9b      	subs	r3, r3, r2
 8002064:	42ac      	cmp	r4, r5
 8002066:	bf88      	it	hi
 8002068:	2300      	movhi	r3, #0
 800206a:	3302      	adds	r3, #2
 800206c:	4403      	add	r3, r0
 800206e:	1a18      	subs	r0, r3, r0
 8002070:	b003      	add	sp, #12
 8002072:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002074:	f813 6b01 	ldrb.w	r6, [r3], #1
 8002078:	f801 6f01 	strb.w	r6, [r1, #1]!
 800207c:	e7ed      	b.n	800205a <__exponent+0x44>
 800207e:	2330      	movs	r3, #48	@ 0x30
 8002080:	3130      	adds	r1, #48	@ 0x30
 8002082:	7083      	strb	r3, [r0, #2]
 8002084:	70c1      	strb	r1, [r0, #3]
 8002086:	1d03      	adds	r3, r0, #4
 8002088:	e7f1      	b.n	800206e <__exponent+0x58>
	...

0800208c <_printf_float>:
 800208c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002090:	b091      	sub	sp, #68	@ 0x44
 8002092:	460c      	mov	r4, r1
 8002094:	f8dd 8068 	ldr.w	r8, [sp, #104]	@ 0x68
 8002098:	4616      	mov	r6, r2
 800209a:	461f      	mov	r7, r3
 800209c:	4605      	mov	r5, r0
 800209e:	f000 fcbf 	bl	8002a20 <_localeconv_r>
 80020a2:	6803      	ldr	r3, [r0, #0]
 80020a4:	4618      	mov	r0, r3
 80020a6:	9308      	str	r3, [sp, #32]
 80020a8:	f7fe f862 	bl	8000170 <strlen>
 80020ac:	2300      	movs	r3, #0
 80020ae:	930e      	str	r3, [sp, #56]	@ 0x38
 80020b0:	f8d8 3000 	ldr.w	r3, [r8]
 80020b4:	9009      	str	r0, [sp, #36]	@ 0x24
 80020b6:	3307      	adds	r3, #7
 80020b8:	f023 0307 	bic.w	r3, r3, #7
 80020bc:	f103 0208 	add.w	r2, r3, #8
 80020c0:	f894 a018 	ldrb.w	sl, [r4, #24]
 80020c4:	f8d4 b000 	ldr.w	fp, [r4]
 80020c8:	f8c8 2000 	str.w	r2, [r8]
 80020cc:	e9d3 8900 	ldrd	r8, r9, [r3]
 80020d0:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 80020d4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80020d6:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 80020da:	f04f 32ff 	mov.w	r2, #4294967295
 80020de:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80020e2:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 80020e6:	4b9c      	ldr	r3, [pc, #624]	@ (8002358 <_printf_float+0x2cc>)
 80020e8:	f7fe fd54 	bl	8000b94 <__aeabi_dcmpun>
 80020ec:	bb70      	cbnz	r0, 800214c <_printf_float+0xc0>
 80020ee:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	@ 0x28
 80020f2:	f04f 32ff 	mov.w	r2, #4294967295
 80020f6:	4b98      	ldr	r3, [pc, #608]	@ (8002358 <_printf_float+0x2cc>)
 80020f8:	f7fe fd2e 	bl	8000b58 <__aeabi_dcmple>
 80020fc:	bb30      	cbnz	r0, 800214c <_printf_float+0xc0>
 80020fe:	2200      	movs	r2, #0
 8002100:	2300      	movs	r3, #0
 8002102:	4640      	mov	r0, r8
 8002104:	4649      	mov	r1, r9
 8002106:	f7fe fd1d 	bl	8000b44 <__aeabi_dcmplt>
 800210a:	b110      	cbz	r0, 8002112 <_printf_float+0x86>
 800210c:	232d      	movs	r3, #45	@ 0x2d
 800210e:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002112:	4a92      	ldr	r2, [pc, #584]	@ (800235c <_printf_float+0x2d0>)
 8002114:	4b92      	ldr	r3, [pc, #584]	@ (8002360 <_printf_float+0x2d4>)
 8002116:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800211a:	bf8c      	ite	hi
 800211c:	4690      	movhi	r8, r2
 800211e:	4698      	movls	r8, r3
 8002120:	2303      	movs	r3, #3
 8002122:	f04f 0900 	mov.w	r9, #0
 8002126:	6123      	str	r3, [r4, #16]
 8002128:	f02b 0304 	bic.w	r3, fp, #4
 800212c:	6023      	str	r3, [r4, #0]
 800212e:	4633      	mov	r3, r6
 8002130:	4621      	mov	r1, r4
 8002132:	4628      	mov	r0, r5
 8002134:	9700      	str	r7, [sp, #0]
 8002136:	aa0f      	add	r2, sp, #60	@ 0x3c
 8002138:	f000 f9d4 	bl	80024e4 <_printf_common>
 800213c:	3001      	adds	r0, #1
 800213e:	f040 8090 	bne.w	8002262 <_printf_float+0x1d6>
 8002142:	f04f 30ff 	mov.w	r0, #4294967295
 8002146:	b011      	add	sp, #68	@ 0x44
 8002148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800214c:	4642      	mov	r2, r8
 800214e:	464b      	mov	r3, r9
 8002150:	4640      	mov	r0, r8
 8002152:	4649      	mov	r1, r9
 8002154:	f7fe fd1e 	bl	8000b94 <__aeabi_dcmpun>
 8002158:	b148      	cbz	r0, 800216e <_printf_float+0xe2>
 800215a:	464b      	mov	r3, r9
 800215c:	2b00      	cmp	r3, #0
 800215e:	bfb8      	it	lt
 8002160:	232d      	movlt	r3, #45	@ 0x2d
 8002162:	4a80      	ldr	r2, [pc, #512]	@ (8002364 <_printf_float+0x2d8>)
 8002164:	bfb8      	it	lt
 8002166:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 800216a:	4b7f      	ldr	r3, [pc, #508]	@ (8002368 <_printf_float+0x2dc>)
 800216c:	e7d3      	b.n	8002116 <_printf_float+0x8a>
 800216e:	6863      	ldr	r3, [r4, #4]
 8002170:	f00a 01df 	and.w	r1, sl, #223	@ 0xdf
 8002174:	1c5a      	adds	r2, r3, #1
 8002176:	d13f      	bne.n	80021f8 <_printf_float+0x16c>
 8002178:	2306      	movs	r3, #6
 800217a:	6063      	str	r3, [r4, #4]
 800217c:	2200      	movs	r2, #0
 800217e:	f44b 6380 	orr.w	r3, fp, #1024	@ 0x400
 8002182:	6023      	str	r3, [r4, #0]
 8002184:	9206      	str	r2, [sp, #24]
 8002186:	aa0e      	add	r2, sp, #56	@ 0x38
 8002188:	e9cd a204 	strd	sl, r2, [sp, #16]
 800218c:	aa0d      	add	r2, sp, #52	@ 0x34
 800218e:	9203      	str	r2, [sp, #12]
 8002190:	f10d 0233 	add.w	r2, sp, #51	@ 0x33
 8002194:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002198:	6863      	ldr	r3, [r4, #4]
 800219a:	4642      	mov	r2, r8
 800219c:	9300      	str	r3, [sp, #0]
 800219e:	4628      	mov	r0, r5
 80021a0:	464b      	mov	r3, r9
 80021a2:	910a      	str	r1, [sp, #40]	@ 0x28
 80021a4:	f7ff fed3 	bl	8001f4e <__cvt>
 80021a8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80021aa:	4680      	mov	r8, r0
 80021ac:	2947      	cmp	r1, #71	@ 0x47
 80021ae:	990d      	ldr	r1, [sp, #52]	@ 0x34
 80021b0:	d128      	bne.n	8002204 <_printf_float+0x178>
 80021b2:	1cc8      	adds	r0, r1, #3
 80021b4:	db02      	blt.n	80021bc <_printf_float+0x130>
 80021b6:	6863      	ldr	r3, [r4, #4]
 80021b8:	4299      	cmp	r1, r3
 80021ba:	dd40      	ble.n	800223e <_printf_float+0x1b2>
 80021bc:	f1aa 0a02 	sub.w	sl, sl, #2
 80021c0:	fa5f fa8a 	uxtb.w	sl, sl
 80021c4:	4652      	mov	r2, sl
 80021c6:	3901      	subs	r1, #1
 80021c8:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 80021cc:	910d      	str	r1, [sp, #52]	@ 0x34
 80021ce:	f7ff ff22 	bl	8002016 <__exponent>
 80021d2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80021d4:	4681      	mov	r9, r0
 80021d6:	1813      	adds	r3, r2, r0
 80021d8:	2a01      	cmp	r2, #1
 80021da:	6123      	str	r3, [r4, #16]
 80021dc:	dc02      	bgt.n	80021e4 <_printf_float+0x158>
 80021de:	6822      	ldr	r2, [r4, #0]
 80021e0:	07d2      	lsls	r2, r2, #31
 80021e2:	d501      	bpl.n	80021e8 <_printf_float+0x15c>
 80021e4:	3301      	adds	r3, #1
 80021e6:	6123      	str	r3, [r4, #16]
 80021e8:	f89d 3033 	ldrb.w	r3, [sp, #51]	@ 0x33
 80021ec:	2b00      	cmp	r3, #0
 80021ee:	d09e      	beq.n	800212e <_printf_float+0xa2>
 80021f0:	232d      	movs	r3, #45	@ 0x2d
 80021f2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80021f6:	e79a      	b.n	800212e <_printf_float+0xa2>
 80021f8:	2947      	cmp	r1, #71	@ 0x47
 80021fa:	d1bf      	bne.n	800217c <_printf_float+0xf0>
 80021fc:	2b00      	cmp	r3, #0
 80021fe:	d1bd      	bne.n	800217c <_printf_float+0xf0>
 8002200:	2301      	movs	r3, #1
 8002202:	e7ba      	b.n	800217a <_printf_float+0xee>
 8002204:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8002208:	d9dc      	bls.n	80021c4 <_printf_float+0x138>
 800220a:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 800220e:	d118      	bne.n	8002242 <_printf_float+0x1b6>
 8002210:	2900      	cmp	r1, #0
 8002212:	6863      	ldr	r3, [r4, #4]
 8002214:	dd0b      	ble.n	800222e <_printf_float+0x1a2>
 8002216:	6121      	str	r1, [r4, #16]
 8002218:	b913      	cbnz	r3, 8002220 <_printf_float+0x194>
 800221a:	6822      	ldr	r2, [r4, #0]
 800221c:	07d0      	lsls	r0, r2, #31
 800221e:	d502      	bpl.n	8002226 <_printf_float+0x19a>
 8002220:	3301      	adds	r3, #1
 8002222:	440b      	add	r3, r1
 8002224:	6123      	str	r3, [r4, #16]
 8002226:	f04f 0900 	mov.w	r9, #0
 800222a:	65a1      	str	r1, [r4, #88]	@ 0x58
 800222c:	e7dc      	b.n	80021e8 <_printf_float+0x15c>
 800222e:	b913      	cbnz	r3, 8002236 <_printf_float+0x1aa>
 8002230:	6822      	ldr	r2, [r4, #0]
 8002232:	07d2      	lsls	r2, r2, #31
 8002234:	d501      	bpl.n	800223a <_printf_float+0x1ae>
 8002236:	3302      	adds	r3, #2
 8002238:	e7f4      	b.n	8002224 <_printf_float+0x198>
 800223a:	2301      	movs	r3, #1
 800223c:	e7f2      	b.n	8002224 <_printf_float+0x198>
 800223e:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8002242:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002244:	4299      	cmp	r1, r3
 8002246:	db05      	blt.n	8002254 <_printf_float+0x1c8>
 8002248:	6823      	ldr	r3, [r4, #0]
 800224a:	6121      	str	r1, [r4, #16]
 800224c:	07d8      	lsls	r0, r3, #31
 800224e:	d5ea      	bpl.n	8002226 <_printf_float+0x19a>
 8002250:	1c4b      	adds	r3, r1, #1
 8002252:	e7e7      	b.n	8002224 <_printf_float+0x198>
 8002254:	2900      	cmp	r1, #0
 8002256:	bfcc      	ite	gt
 8002258:	2201      	movgt	r2, #1
 800225a:	f1c1 0202 	rsble	r2, r1, #2
 800225e:	4413      	add	r3, r2
 8002260:	e7e0      	b.n	8002224 <_printf_float+0x198>
 8002262:	6823      	ldr	r3, [r4, #0]
 8002264:	055a      	lsls	r2, r3, #21
 8002266:	d407      	bmi.n	8002278 <_printf_float+0x1ec>
 8002268:	6923      	ldr	r3, [r4, #16]
 800226a:	4642      	mov	r2, r8
 800226c:	4631      	mov	r1, r6
 800226e:	4628      	mov	r0, r5
 8002270:	47b8      	blx	r7
 8002272:	3001      	adds	r0, #1
 8002274:	d12b      	bne.n	80022ce <_printf_float+0x242>
 8002276:	e764      	b.n	8002142 <_printf_float+0xb6>
 8002278:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800227c:	f240 80dc 	bls.w	8002438 <_printf_float+0x3ac>
 8002280:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8002284:	2200      	movs	r2, #0
 8002286:	2300      	movs	r3, #0
 8002288:	f7fe fc52 	bl	8000b30 <__aeabi_dcmpeq>
 800228c:	2800      	cmp	r0, #0
 800228e:	d033      	beq.n	80022f8 <_printf_float+0x26c>
 8002290:	2301      	movs	r3, #1
 8002292:	4631      	mov	r1, r6
 8002294:	4628      	mov	r0, r5
 8002296:	4a35      	ldr	r2, [pc, #212]	@ (800236c <_printf_float+0x2e0>)
 8002298:	47b8      	blx	r7
 800229a:	3001      	adds	r0, #1
 800229c:	f43f af51 	beq.w	8002142 <_printf_float+0xb6>
 80022a0:	e9dd 380d 	ldrd	r3, r8, [sp, #52]	@ 0x34
 80022a4:	4543      	cmp	r3, r8
 80022a6:	db02      	blt.n	80022ae <_printf_float+0x222>
 80022a8:	6823      	ldr	r3, [r4, #0]
 80022aa:	07d8      	lsls	r0, r3, #31
 80022ac:	d50f      	bpl.n	80022ce <_printf_float+0x242>
 80022ae:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80022b2:	4631      	mov	r1, r6
 80022b4:	4628      	mov	r0, r5
 80022b6:	47b8      	blx	r7
 80022b8:	3001      	adds	r0, #1
 80022ba:	f43f af42 	beq.w	8002142 <_printf_float+0xb6>
 80022be:	f04f 0900 	mov.w	r9, #0
 80022c2:	f108 38ff 	add.w	r8, r8, #4294967295
 80022c6:	f104 0a1a 	add.w	sl, r4, #26
 80022ca:	45c8      	cmp	r8, r9
 80022cc:	dc09      	bgt.n	80022e2 <_printf_float+0x256>
 80022ce:	6823      	ldr	r3, [r4, #0]
 80022d0:	079b      	lsls	r3, r3, #30
 80022d2:	f100 8102 	bmi.w	80024da <_printf_float+0x44e>
 80022d6:	68e0      	ldr	r0, [r4, #12]
 80022d8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80022da:	4298      	cmp	r0, r3
 80022dc:	bfb8      	it	lt
 80022de:	4618      	movlt	r0, r3
 80022e0:	e731      	b.n	8002146 <_printf_float+0xba>
 80022e2:	2301      	movs	r3, #1
 80022e4:	4652      	mov	r2, sl
 80022e6:	4631      	mov	r1, r6
 80022e8:	4628      	mov	r0, r5
 80022ea:	47b8      	blx	r7
 80022ec:	3001      	adds	r0, #1
 80022ee:	f43f af28 	beq.w	8002142 <_printf_float+0xb6>
 80022f2:	f109 0901 	add.w	r9, r9, #1
 80022f6:	e7e8      	b.n	80022ca <_printf_float+0x23e>
 80022f8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80022fa:	2b00      	cmp	r3, #0
 80022fc:	dc38      	bgt.n	8002370 <_printf_float+0x2e4>
 80022fe:	2301      	movs	r3, #1
 8002300:	4631      	mov	r1, r6
 8002302:	4628      	mov	r0, r5
 8002304:	4a19      	ldr	r2, [pc, #100]	@ (800236c <_printf_float+0x2e0>)
 8002306:	47b8      	blx	r7
 8002308:	3001      	adds	r0, #1
 800230a:	f43f af1a 	beq.w	8002142 <_printf_float+0xb6>
 800230e:	e9dd 390d 	ldrd	r3, r9, [sp, #52]	@ 0x34
 8002312:	ea59 0303 	orrs.w	r3, r9, r3
 8002316:	d102      	bne.n	800231e <_printf_float+0x292>
 8002318:	6823      	ldr	r3, [r4, #0]
 800231a:	07d9      	lsls	r1, r3, #31
 800231c:	d5d7      	bpl.n	80022ce <_printf_float+0x242>
 800231e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8002322:	4631      	mov	r1, r6
 8002324:	4628      	mov	r0, r5
 8002326:	47b8      	blx	r7
 8002328:	3001      	adds	r0, #1
 800232a:	f43f af0a 	beq.w	8002142 <_printf_float+0xb6>
 800232e:	f04f 0a00 	mov.w	sl, #0
 8002332:	f104 0b1a 	add.w	fp, r4, #26
 8002336:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002338:	425b      	negs	r3, r3
 800233a:	4553      	cmp	r3, sl
 800233c:	dc01      	bgt.n	8002342 <_printf_float+0x2b6>
 800233e:	464b      	mov	r3, r9
 8002340:	e793      	b.n	800226a <_printf_float+0x1de>
 8002342:	2301      	movs	r3, #1
 8002344:	465a      	mov	r2, fp
 8002346:	4631      	mov	r1, r6
 8002348:	4628      	mov	r0, r5
 800234a:	47b8      	blx	r7
 800234c:	3001      	adds	r0, #1
 800234e:	f43f aef8 	beq.w	8002142 <_printf_float+0xb6>
 8002352:	f10a 0a01 	add.w	sl, sl, #1
 8002356:	e7ee      	b.n	8002336 <_printf_float+0x2aa>
 8002358:	7fefffff 	.word	0x7fefffff
 800235c:	08004893 	.word	0x08004893
 8002360:	0800488f 	.word	0x0800488f
 8002364:	0800489b 	.word	0x0800489b
 8002368:	08004897 	.word	0x08004897
 800236c:	0800489f 	.word	0x0800489f
 8002370:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002372:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 8002376:	4553      	cmp	r3, sl
 8002378:	bfa8      	it	ge
 800237a:	4653      	movge	r3, sl
 800237c:	2b00      	cmp	r3, #0
 800237e:	4699      	mov	r9, r3
 8002380:	dc36      	bgt.n	80023f0 <_printf_float+0x364>
 8002382:	f04f 0b00 	mov.w	fp, #0
 8002386:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800238a:	f104 021a 	add.w	r2, r4, #26
 800238e:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8002390:	930a      	str	r3, [sp, #40]	@ 0x28
 8002392:	eba3 0309 	sub.w	r3, r3, r9
 8002396:	455b      	cmp	r3, fp
 8002398:	dc31      	bgt.n	80023fe <_printf_float+0x372>
 800239a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800239c:	459a      	cmp	sl, r3
 800239e:	dc3a      	bgt.n	8002416 <_printf_float+0x38a>
 80023a0:	6823      	ldr	r3, [r4, #0]
 80023a2:	07da      	lsls	r2, r3, #31
 80023a4:	d437      	bmi.n	8002416 <_printf_float+0x38a>
 80023a6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80023a8:	ebaa 0903 	sub.w	r9, sl, r3
 80023ac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80023ae:	ebaa 0303 	sub.w	r3, sl, r3
 80023b2:	4599      	cmp	r9, r3
 80023b4:	bfa8      	it	ge
 80023b6:	4699      	movge	r9, r3
 80023b8:	f1b9 0f00 	cmp.w	r9, #0
 80023bc:	dc33      	bgt.n	8002426 <_printf_float+0x39a>
 80023be:	f04f 0800 	mov.w	r8, #0
 80023c2:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80023c6:	f104 0b1a 	add.w	fp, r4, #26
 80023ca:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80023cc:	ebaa 0303 	sub.w	r3, sl, r3
 80023d0:	eba3 0309 	sub.w	r3, r3, r9
 80023d4:	4543      	cmp	r3, r8
 80023d6:	f77f af7a 	ble.w	80022ce <_printf_float+0x242>
 80023da:	2301      	movs	r3, #1
 80023dc:	465a      	mov	r2, fp
 80023de:	4631      	mov	r1, r6
 80023e0:	4628      	mov	r0, r5
 80023e2:	47b8      	blx	r7
 80023e4:	3001      	adds	r0, #1
 80023e6:	f43f aeac 	beq.w	8002142 <_printf_float+0xb6>
 80023ea:	f108 0801 	add.w	r8, r8, #1
 80023ee:	e7ec      	b.n	80023ca <_printf_float+0x33e>
 80023f0:	4642      	mov	r2, r8
 80023f2:	4631      	mov	r1, r6
 80023f4:	4628      	mov	r0, r5
 80023f6:	47b8      	blx	r7
 80023f8:	3001      	adds	r0, #1
 80023fa:	d1c2      	bne.n	8002382 <_printf_float+0x2f6>
 80023fc:	e6a1      	b.n	8002142 <_printf_float+0xb6>
 80023fe:	2301      	movs	r3, #1
 8002400:	4631      	mov	r1, r6
 8002402:	4628      	mov	r0, r5
 8002404:	920a      	str	r2, [sp, #40]	@ 0x28
 8002406:	47b8      	blx	r7
 8002408:	3001      	adds	r0, #1
 800240a:	f43f ae9a 	beq.w	8002142 <_printf_float+0xb6>
 800240e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8002410:	f10b 0b01 	add.w	fp, fp, #1
 8002414:	e7bb      	b.n	800238e <_printf_float+0x302>
 8002416:	4631      	mov	r1, r6
 8002418:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800241c:	4628      	mov	r0, r5
 800241e:	47b8      	blx	r7
 8002420:	3001      	adds	r0, #1
 8002422:	d1c0      	bne.n	80023a6 <_printf_float+0x31a>
 8002424:	e68d      	b.n	8002142 <_printf_float+0xb6>
 8002426:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8002428:	464b      	mov	r3, r9
 800242a:	4631      	mov	r1, r6
 800242c:	4628      	mov	r0, r5
 800242e:	4442      	add	r2, r8
 8002430:	47b8      	blx	r7
 8002432:	3001      	adds	r0, #1
 8002434:	d1c3      	bne.n	80023be <_printf_float+0x332>
 8002436:	e684      	b.n	8002142 <_printf_float+0xb6>
 8002438:	f8dd a038 	ldr.w	sl, [sp, #56]	@ 0x38
 800243c:	f1ba 0f01 	cmp.w	sl, #1
 8002440:	dc01      	bgt.n	8002446 <_printf_float+0x3ba>
 8002442:	07db      	lsls	r3, r3, #31
 8002444:	d536      	bpl.n	80024b4 <_printf_float+0x428>
 8002446:	2301      	movs	r3, #1
 8002448:	4642      	mov	r2, r8
 800244a:	4631      	mov	r1, r6
 800244c:	4628      	mov	r0, r5
 800244e:	47b8      	blx	r7
 8002450:	3001      	adds	r0, #1
 8002452:	f43f ae76 	beq.w	8002142 <_printf_float+0xb6>
 8002456:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800245a:	4631      	mov	r1, r6
 800245c:	4628      	mov	r0, r5
 800245e:	47b8      	blx	r7
 8002460:	3001      	adds	r0, #1
 8002462:	f43f ae6e 	beq.w	8002142 <_printf_float+0xb6>
 8002466:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 800246a:	2200      	movs	r2, #0
 800246c:	2300      	movs	r3, #0
 800246e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8002472:	f7fe fb5d 	bl	8000b30 <__aeabi_dcmpeq>
 8002476:	b9c0      	cbnz	r0, 80024aa <_printf_float+0x41e>
 8002478:	4653      	mov	r3, sl
 800247a:	f108 0201 	add.w	r2, r8, #1
 800247e:	4631      	mov	r1, r6
 8002480:	4628      	mov	r0, r5
 8002482:	47b8      	blx	r7
 8002484:	3001      	adds	r0, #1
 8002486:	d10c      	bne.n	80024a2 <_printf_float+0x416>
 8002488:	e65b      	b.n	8002142 <_printf_float+0xb6>
 800248a:	2301      	movs	r3, #1
 800248c:	465a      	mov	r2, fp
 800248e:	4631      	mov	r1, r6
 8002490:	4628      	mov	r0, r5
 8002492:	47b8      	blx	r7
 8002494:	3001      	adds	r0, #1
 8002496:	f43f ae54 	beq.w	8002142 <_printf_float+0xb6>
 800249a:	f108 0801 	add.w	r8, r8, #1
 800249e:	45d0      	cmp	r8, sl
 80024a0:	dbf3      	blt.n	800248a <_printf_float+0x3fe>
 80024a2:	464b      	mov	r3, r9
 80024a4:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 80024a8:	e6e0      	b.n	800226c <_printf_float+0x1e0>
 80024aa:	f04f 0800 	mov.w	r8, #0
 80024ae:	f104 0b1a 	add.w	fp, r4, #26
 80024b2:	e7f4      	b.n	800249e <_printf_float+0x412>
 80024b4:	2301      	movs	r3, #1
 80024b6:	4642      	mov	r2, r8
 80024b8:	e7e1      	b.n	800247e <_printf_float+0x3f2>
 80024ba:	2301      	movs	r3, #1
 80024bc:	464a      	mov	r2, r9
 80024be:	4631      	mov	r1, r6
 80024c0:	4628      	mov	r0, r5
 80024c2:	47b8      	blx	r7
 80024c4:	3001      	adds	r0, #1
 80024c6:	f43f ae3c 	beq.w	8002142 <_printf_float+0xb6>
 80024ca:	f108 0801 	add.w	r8, r8, #1
 80024ce:	68e3      	ldr	r3, [r4, #12]
 80024d0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80024d2:	1a5b      	subs	r3, r3, r1
 80024d4:	4543      	cmp	r3, r8
 80024d6:	dcf0      	bgt.n	80024ba <_printf_float+0x42e>
 80024d8:	e6fd      	b.n	80022d6 <_printf_float+0x24a>
 80024da:	f04f 0800 	mov.w	r8, #0
 80024de:	f104 0919 	add.w	r9, r4, #25
 80024e2:	e7f4      	b.n	80024ce <_printf_float+0x442>

080024e4 <_printf_common>:
 80024e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80024e8:	4616      	mov	r6, r2
 80024ea:	4698      	mov	r8, r3
 80024ec:	688a      	ldr	r2, [r1, #8]
 80024ee:	690b      	ldr	r3, [r1, #16]
 80024f0:	4607      	mov	r7, r0
 80024f2:	4293      	cmp	r3, r2
 80024f4:	bfb8      	it	lt
 80024f6:	4613      	movlt	r3, r2
 80024f8:	6033      	str	r3, [r6, #0]
 80024fa:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80024fe:	460c      	mov	r4, r1
 8002500:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8002504:	b10a      	cbz	r2, 800250a <_printf_common+0x26>
 8002506:	3301      	adds	r3, #1
 8002508:	6033      	str	r3, [r6, #0]
 800250a:	6823      	ldr	r3, [r4, #0]
 800250c:	0699      	lsls	r1, r3, #26
 800250e:	bf42      	ittt	mi
 8002510:	6833      	ldrmi	r3, [r6, #0]
 8002512:	3302      	addmi	r3, #2
 8002514:	6033      	strmi	r3, [r6, #0]
 8002516:	6825      	ldr	r5, [r4, #0]
 8002518:	f015 0506 	ands.w	r5, r5, #6
 800251c:	d106      	bne.n	800252c <_printf_common+0x48>
 800251e:	f104 0a19 	add.w	sl, r4, #25
 8002522:	68e3      	ldr	r3, [r4, #12]
 8002524:	6832      	ldr	r2, [r6, #0]
 8002526:	1a9b      	subs	r3, r3, r2
 8002528:	42ab      	cmp	r3, r5
 800252a:	dc2b      	bgt.n	8002584 <_printf_common+0xa0>
 800252c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8002530:	6822      	ldr	r2, [r4, #0]
 8002532:	3b00      	subs	r3, #0
 8002534:	bf18      	it	ne
 8002536:	2301      	movne	r3, #1
 8002538:	0692      	lsls	r2, r2, #26
 800253a:	d430      	bmi.n	800259e <_printf_common+0xba>
 800253c:	4641      	mov	r1, r8
 800253e:	4638      	mov	r0, r7
 8002540:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8002544:	47c8      	blx	r9
 8002546:	3001      	adds	r0, #1
 8002548:	d023      	beq.n	8002592 <_printf_common+0xae>
 800254a:	6823      	ldr	r3, [r4, #0]
 800254c:	6922      	ldr	r2, [r4, #16]
 800254e:	f003 0306 	and.w	r3, r3, #6
 8002552:	2b04      	cmp	r3, #4
 8002554:	bf14      	ite	ne
 8002556:	2500      	movne	r5, #0
 8002558:	6833      	ldreq	r3, [r6, #0]
 800255a:	f04f 0600 	mov.w	r6, #0
 800255e:	bf08      	it	eq
 8002560:	68e5      	ldreq	r5, [r4, #12]
 8002562:	f104 041a 	add.w	r4, r4, #26
 8002566:	bf08      	it	eq
 8002568:	1aed      	subeq	r5, r5, r3
 800256a:	f854 3c12 	ldr.w	r3, [r4, #-18]
 800256e:	bf08      	it	eq
 8002570:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002574:	4293      	cmp	r3, r2
 8002576:	bfc4      	itt	gt
 8002578:	1a9b      	subgt	r3, r3, r2
 800257a:	18ed      	addgt	r5, r5, r3
 800257c:	42b5      	cmp	r5, r6
 800257e:	d11a      	bne.n	80025b6 <_printf_common+0xd2>
 8002580:	2000      	movs	r0, #0
 8002582:	e008      	b.n	8002596 <_printf_common+0xb2>
 8002584:	2301      	movs	r3, #1
 8002586:	4652      	mov	r2, sl
 8002588:	4641      	mov	r1, r8
 800258a:	4638      	mov	r0, r7
 800258c:	47c8      	blx	r9
 800258e:	3001      	adds	r0, #1
 8002590:	d103      	bne.n	800259a <_printf_common+0xb6>
 8002592:	f04f 30ff 	mov.w	r0, #4294967295
 8002596:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800259a:	3501      	adds	r5, #1
 800259c:	e7c1      	b.n	8002522 <_printf_common+0x3e>
 800259e:	2030      	movs	r0, #48	@ 0x30
 80025a0:	18e1      	adds	r1, r4, r3
 80025a2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80025a6:	1c5a      	adds	r2, r3, #1
 80025a8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80025ac:	4422      	add	r2, r4
 80025ae:	3302      	adds	r3, #2
 80025b0:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80025b4:	e7c2      	b.n	800253c <_printf_common+0x58>
 80025b6:	2301      	movs	r3, #1
 80025b8:	4622      	mov	r2, r4
 80025ba:	4641      	mov	r1, r8
 80025bc:	4638      	mov	r0, r7
 80025be:	47c8      	blx	r9
 80025c0:	3001      	adds	r0, #1
 80025c2:	d0e6      	beq.n	8002592 <_printf_common+0xae>
 80025c4:	3601      	adds	r6, #1
 80025c6:	e7d9      	b.n	800257c <_printf_common+0x98>

080025c8 <_printf_i>:
 80025c8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80025cc:	7e0f      	ldrb	r7, [r1, #24]
 80025ce:	4691      	mov	r9, r2
 80025d0:	2f78      	cmp	r7, #120	@ 0x78
 80025d2:	4680      	mov	r8, r0
 80025d4:	460c      	mov	r4, r1
 80025d6:	469a      	mov	sl, r3
 80025d8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80025da:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80025de:	d807      	bhi.n	80025f0 <_printf_i+0x28>
 80025e0:	2f62      	cmp	r7, #98	@ 0x62
 80025e2:	d80a      	bhi.n	80025fa <_printf_i+0x32>
 80025e4:	2f00      	cmp	r7, #0
 80025e6:	f000 80d1 	beq.w	800278c <_printf_i+0x1c4>
 80025ea:	2f58      	cmp	r7, #88	@ 0x58
 80025ec:	f000 80b8 	beq.w	8002760 <_printf_i+0x198>
 80025f0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80025f4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80025f8:	e03a      	b.n	8002670 <_printf_i+0xa8>
 80025fa:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80025fe:	2b15      	cmp	r3, #21
 8002600:	d8f6      	bhi.n	80025f0 <_printf_i+0x28>
 8002602:	a101      	add	r1, pc, #4	@ (adr r1, 8002608 <_printf_i+0x40>)
 8002604:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8002608:	08002661 	.word	0x08002661
 800260c:	08002675 	.word	0x08002675
 8002610:	080025f1 	.word	0x080025f1
 8002614:	080025f1 	.word	0x080025f1
 8002618:	080025f1 	.word	0x080025f1
 800261c:	080025f1 	.word	0x080025f1
 8002620:	08002675 	.word	0x08002675
 8002624:	080025f1 	.word	0x080025f1
 8002628:	080025f1 	.word	0x080025f1
 800262c:	080025f1 	.word	0x080025f1
 8002630:	080025f1 	.word	0x080025f1
 8002634:	08002773 	.word	0x08002773
 8002638:	0800269f 	.word	0x0800269f
 800263c:	0800272d 	.word	0x0800272d
 8002640:	080025f1 	.word	0x080025f1
 8002644:	080025f1 	.word	0x080025f1
 8002648:	08002795 	.word	0x08002795
 800264c:	080025f1 	.word	0x080025f1
 8002650:	0800269f 	.word	0x0800269f
 8002654:	080025f1 	.word	0x080025f1
 8002658:	080025f1 	.word	0x080025f1
 800265c:	08002735 	.word	0x08002735
 8002660:	6833      	ldr	r3, [r6, #0]
 8002662:	1d1a      	adds	r2, r3, #4
 8002664:	681b      	ldr	r3, [r3, #0]
 8002666:	6032      	str	r2, [r6, #0]
 8002668:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800266c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8002670:	2301      	movs	r3, #1
 8002672:	e09c      	b.n	80027ae <_printf_i+0x1e6>
 8002674:	6833      	ldr	r3, [r6, #0]
 8002676:	6820      	ldr	r0, [r4, #0]
 8002678:	1d19      	adds	r1, r3, #4
 800267a:	6031      	str	r1, [r6, #0]
 800267c:	0606      	lsls	r6, r0, #24
 800267e:	d501      	bpl.n	8002684 <_printf_i+0xbc>
 8002680:	681d      	ldr	r5, [r3, #0]
 8002682:	e003      	b.n	800268c <_printf_i+0xc4>
 8002684:	0645      	lsls	r5, r0, #25
 8002686:	d5fb      	bpl.n	8002680 <_printf_i+0xb8>
 8002688:	f9b3 5000 	ldrsh.w	r5, [r3]
 800268c:	2d00      	cmp	r5, #0
 800268e:	da03      	bge.n	8002698 <_printf_i+0xd0>
 8002690:	232d      	movs	r3, #45	@ 0x2d
 8002692:	426d      	negs	r5, r5
 8002694:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8002698:	230a      	movs	r3, #10
 800269a:	4858      	ldr	r0, [pc, #352]	@ (80027fc <_printf_i+0x234>)
 800269c:	e011      	b.n	80026c2 <_printf_i+0xfa>
 800269e:	6821      	ldr	r1, [r4, #0]
 80026a0:	6833      	ldr	r3, [r6, #0]
 80026a2:	0608      	lsls	r0, r1, #24
 80026a4:	f853 5b04 	ldr.w	r5, [r3], #4
 80026a8:	d402      	bmi.n	80026b0 <_printf_i+0xe8>
 80026aa:	0649      	lsls	r1, r1, #25
 80026ac:	bf48      	it	mi
 80026ae:	b2ad      	uxthmi	r5, r5
 80026b0:	2f6f      	cmp	r7, #111	@ 0x6f
 80026b2:	6033      	str	r3, [r6, #0]
 80026b4:	bf14      	ite	ne
 80026b6:	230a      	movne	r3, #10
 80026b8:	2308      	moveq	r3, #8
 80026ba:	4850      	ldr	r0, [pc, #320]	@ (80027fc <_printf_i+0x234>)
 80026bc:	2100      	movs	r1, #0
 80026be:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80026c2:	6866      	ldr	r6, [r4, #4]
 80026c4:	2e00      	cmp	r6, #0
 80026c6:	60a6      	str	r6, [r4, #8]
 80026c8:	db05      	blt.n	80026d6 <_printf_i+0x10e>
 80026ca:	6821      	ldr	r1, [r4, #0]
 80026cc:	432e      	orrs	r6, r5
 80026ce:	f021 0104 	bic.w	r1, r1, #4
 80026d2:	6021      	str	r1, [r4, #0]
 80026d4:	d04b      	beq.n	800276e <_printf_i+0x1a6>
 80026d6:	4616      	mov	r6, r2
 80026d8:	fbb5 f1f3 	udiv	r1, r5, r3
 80026dc:	fb03 5711 	mls	r7, r3, r1, r5
 80026e0:	5dc7      	ldrb	r7, [r0, r7]
 80026e2:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80026e6:	462f      	mov	r7, r5
 80026e8:	42bb      	cmp	r3, r7
 80026ea:	460d      	mov	r5, r1
 80026ec:	d9f4      	bls.n	80026d8 <_printf_i+0x110>
 80026ee:	2b08      	cmp	r3, #8
 80026f0:	d10b      	bne.n	800270a <_printf_i+0x142>
 80026f2:	6823      	ldr	r3, [r4, #0]
 80026f4:	07df      	lsls	r7, r3, #31
 80026f6:	d508      	bpl.n	800270a <_printf_i+0x142>
 80026f8:	6923      	ldr	r3, [r4, #16]
 80026fa:	6861      	ldr	r1, [r4, #4]
 80026fc:	4299      	cmp	r1, r3
 80026fe:	bfde      	ittt	le
 8002700:	2330      	movle	r3, #48	@ 0x30
 8002702:	f806 3c01 	strble.w	r3, [r6, #-1]
 8002706:	f106 36ff 	addle.w	r6, r6, #4294967295
 800270a:	1b92      	subs	r2, r2, r6
 800270c:	6122      	str	r2, [r4, #16]
 800270e:	464b      	mov	r3, r9
 8002710:	4621      	mov	r1, r4
 8002712:	4640      	mov	r0, r8
 8002714:	f8cd a000 	str.w	sl, [sp]
 8002718:	aa03      	add	r2, sp, #12
 800271a:	f7ff fee3 	bl	80024e4 <_printf_common>
 800271e:	3001      	adds	r0, #1
 8002720:	d14a      	bne.n	80027b8 <_printf_i+0x1f0>
 8002722:	f04f 30ff 	mov.w	r0, #4294967295
 8002726:	b004      	add	sp, #16
 8002728:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800272c:	6823      	ldr	r3, [r4, #0]
 800272e:	f043 0320 	orr.w	r3, r3, #32
 8002732:	6023      	str	r3, [r4, #0]
 8002734:	2778      	movs	r7, #120	@ 0x78
 8002736:	4832      	ldr	r0, [pc, #200]	@ (8002800 <_printf_i+0x238>)
 8002738:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800273c:	6823      	ldr	r3, [r4, #0]
 800273e:	6831      	ldr	r1, [r6, #0]
 8002740:	061f      	lsls	r7, r3, #24
 8002742:	f851 5b04 	ldr.w	r5, [r1], #4
 8002746:	d402      	bmi.n	800274e <_printf_i+0x186>
 8002748:	065f      	lsls	r7, r3, #25
 800274a:	bf48      	it	mi
 800274c:	b2ad      	uxthmi	r5, r5
 800274e:	6031      	str	r1, [r6, #0]
 8002750:	07d9      	lsls	r1, r3, #31
 8002752:	bf44      	itt	mi
 8002754:	f043 0320 	orrmi.w	r3, r3, #32
 8002758:	6023      	strmi	r3, [r4, #0]
 800275a:	b11d      	cbz	r5, 8002764 <_printf_i+0x19c>
 800275c:	2310      	movs	r3, #16
 800275e:	e7ad      	b.n	80026bc <_printf_i+0xf4>
 8002760:	4826      	ldr	r0, [pc, #152]	@ (80027fc <_printf_i+0x234>)
 8002762:	e7e9      	b.n	8002738 <_printf_i+0x170>
 8002764:	6823      	ldr	r3, [r4, #0]
 8002766:	f023 0320 	bic.w	r3, r3, #32
 800276a:	6023      	str	r3, [r4, #0]
 800276c:	e7f6      	b.n	800275c <_printf_i+0x194>
 800276e:	4616      	mov	r6, r2
 8002770:	e7bd      	b.n	80026ee <_printf_i+0x126>
 8002772:	6833      	ldr	r3, [r6, #0]
 8002774:	6825      	ldr	r5, [r4, #0]
 8002776:	1d18      	adds	r0, r3, #4
 8002778:	6961      	ldr	r1, [r4, #20]
 800277a:	6030      	str	r0, [r6, #0]
 800277c:	062e      	lsls	r6, r5, #24
 800277e:	681b      	ldr	r3, [r3, #0]
 8002780:	d501      	bpl.n	8002786 <_printf_i+0x1be>
 8002782:	6019      	str	r1, [r3, #0]
 8002784:	e002      	b.n	800278c <_printf_i+0x1c4>
 8002786:	0668      	lsls	r0, r5, #25
 8002788:	d5fb      	bpl.n	8002782 <_printf_i+0x1ba>
 800278a:	8019      	strh	r1, [r3, #0]
 800278c:	2300      	movs	r3, #0
 800278e:	4616      	mov	r6, r2
 8002790:	6123      	str	r3, [r4, #16]
 8002792:	e7bc      	b.n	800270e <_printf_i+0x146>
 8002794:	6833      	ldr	r3, [r6, #0]
 8002796:	2100      	movs	r1, #0
 8002798:	1d1a      	adds	r2, r3, #4
 800279a:	6032      	str	r2, [r6, #0]
 800279c:	681e      	ldr	r6, [r3, #0]
 800279e:	6862      	ldr	r2, [r4, #4]
 80027a0:	4630      	mov	r0, r6
 80027a2:	f000 f9b4 	bl	8002b0e <memchr>
 80027a6:	b108      	cbz	r0, 80027ac <_printf_i+0x1e4>
 80027a8:	1b80      	subs	r0, r0, r6
 80027aa:	6060      	str	r0, [r4, #4]
 80027ac:	6863      	ldr	r3, [r4, #4]
 80027ae:	6123      	str	r3, [r4, #16]
 80027b0:	2300      	movs	r3, #0
 80027b2:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80027b6:	e7aa      	b.n	800270e <_printf_i+0x146>
 80027b8:	4632      	mov	r2, r6
 80027ba:	4649      	mov	r1, r9
 80027bc:	4640      	mov	r0, r8
 80027be:	6923      	ldr	r3, [r4, #16]
 80027c0:	47d0      	blx	sl
 80027c2:	3001      	adds	r0, #1
 80027c4:	d0ad      	beq.n	8002722 <_printf_i+0x15a>
 80027c6:	6823      	ldr	r3, [r4, #0]
 80027c8:	079b      	lsls	r3, r3, #30
 80027ca:	d413      	bmi.n	80027f4 <_printf_i+0x22c>
 80027cc:	68e0      	ldr	r0, [r4, #12]
 80027ce:	9b03      	ldr	r3, [sp, #12]
 80027d0:	4298      	cmp	r0, r3
 80027d2:	bfb8      	it	lt
 80027d4:	4618      	movlt	r0, r3
 80027d6:	e7a6      	b.n	8002726 <_printf_i+0x15e>
 80027d8:	2301      	movs	r3, #1
 80027da:	4632      	mov	r2, r6
 80027dc:	4649      	mov	r1, r9
 80027de:	4640      	mov	r0, r8
 80027e0:	47d0      	blx	sl
 80027e2:	3001      	adds	r0, #1
 80027e4:	d09d      	beq.n	8002722 <_printf_i+0x15a>
 80027e6:	3501      	adds	r5, #1
 80027e8:	68e3      	ldr	r3, [r4, #12]
 80027ea:	9903      	ldr	r1, [sp, #12]
 80027ec:	1a5b      	subs	r3, r3, r1
 80027ee:	42ab      	cmp	r3, r5
 80027f0:	dcf2      	bgt.n	80027d8 <_printf_i+0x210>
 80027f2:	e7eb      	b.n	80027cc <_printf_i+0x204>
 80027f4:	2500      	movs	r5, #0
 80027f6:	f104 0619 	add.w	r6, r4, #25
 80027fa:	e7f5      	b.n	80027e8 <_printf_i+0x220>
 80027fc:	080048a1 	.word	0x080048a1
 8002800:	080048b2 	.word	0x080048b2

08002804 <std>:
 8002804:	2300      	movs	r3, #0
 8002806:	b510      	push	{r4, lr}
 8002808:	4604      	mov	r4, r0
 800280a:	e9c0 3300 	strd	r3, r3, [r0]
 800280e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8002812:	6083      	str	r3, [r0, #8]
 8002814:	8181      	strh	r1, [r0, #12]
 8002816:	6643      	str	r3, [r0, #100]	@ 0x64
 8002818:	81c2      	strh	r2, [r0, #14]
 800281a:	6183      	str	r3, [r0, #24]
 800281c:	4619      	mov	r1, r3
 800281e:	2208      	movs	r2, #8
 8002820:	305c      	adds	r0, #92	@ 0x5c
 8002822:	f000 f8f4 	bl	8002a0e <memset>
 8002826:	4b0d      	ldr	r3, [pc, #52]	@ (800285c <std+0x58>)
 8002828:	6224      	str	r4, [r4, #32]
 800282a:	6263      	str	r3, [r4, #36]	@ 0x24
 800282c:	4b0c      	ldr	r3, [pc, #48]	@ (8002860 <std+0x5c>)
 800282e:	62a3      	str	r3, [r4, #40]	@ 0x28
 8002830:	4b0c      	ldr	r3, [pc, #48]	@ (8002864 <std+0x60>)
 8002832:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8002834:	4b0c      	ldr	r3, [pc, #48]	@ (8002868 <std+0x64>)
 8002836:	6323      	str	r3, [r4, #48]	@ 0x30
 8002838:	4b0c      	ldr	r3, [pc, #48]	@ (800286c <std+0x68>)
 800283a:	429c      	cmp	r4, r3
 800283c:	d006      	beq.n	800284c <std+0x48>
 800283e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8002842:	4294      	cmp	r4, r2
 8002844:	d002      	beq.n	800284c <std+0x48>
 8002846:	33d0      	adds	r3, #208	@ 0xd0
 8002848:	429c      	cmp	r4, r3
 800284a:	d105      	bne.n	8002858 <std+0x54>
 800284c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8002850:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002854:	f000 b958 	b.w	8002b08 <__retarget_lock_init_recursive>
 8002858:	bd10      	pop	{r4, pc}
 800285a:	bf00      	nop
 800285c:	08002989 	.word	0x08002989
 8002860:	080029ab 	.word	0x080029ab
 8002864:	080029e3 	.word	0x080029e3
 8002868:	08002a07 	.word	0x08002a07
 800286c:	20000228 	.word	0x20000228

08002870 <stdio_exit_handler>:
 8002870:	4a02      	ldr	r2, [pc, #8]	@ (800287c <stdio_exit_handler+0xc>)
 8002872:	4903      	ldr	r1, [pc, #12]	@ (8002880 <stdio_exit_handler+0x10>)
 8002874:	4803      	ldr	r0, [pc, #12]	@ (8002884 <stdio_exit_handler+0x14>)
 8002876:	f000 b869 	b.w	800294c <_fwalk_sglue>
 800287a:	bf00      	nop
 800287c:	20000020 	.word	0x20000020
 8002880:	080041d9 	.word	0x080041d9
 8002884:	20000030 	.word	0x20000030

08002888 <cleanup_stdio>:
 8002888:	6841      	ldr	r1, [r0, #4]
 800288a:	4b0c      	ldr	r3, [pc, #48]	@ (80028bc <cleanup_stdio+0x34>)
 800288c:	b510      	push	{r4, lr}
 800288e:	4299      	cmp	r1, r3
 8002890:	4604      	mov	r4, r0
 8002892:	d001      	beq.n	8002898 <cleanup_stdio+0x10>
 8002894:	f001 fca0 	bl	80041d8 <_fflush_r>
 8002898:	68a1      	ldr	r1, [r4, #8]
 800289a:	4b09      	ldr	r3, [pc, #36]	@ (80028c0 <cleanup_stdio+0x38>)
 800289c:	4299      	cmp	r1, r3
 800289e:	d002      	beq.n	80028a6 <cleanup_stdio+0x1e>
 80028a0:	4620      	mov	r0, r4
 80028a2:	f001 fc99 	bl	80041d8 <_fflush_r>
 80028a6:	68e1      	ldr	r1, [r4, #12]
 80028a8:	4b06      	ldr	r3, [pc, #24]	@ (80028c4 <cleanup_stdio+0x3c>)
 80028aa:	4299      	cmp	r1, r3
 80028ac:	d004      	beq.n	80028b8 <cleanup_stdio+0x30>
 80028ae:	4620      	mov	r0, r4
 80028b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80028b4:	f001 bc90 	b.w	80041d8 <_fflush_r>
 80028b8:	bd10      	pop	{r4, pc}
 80028ba:	bf00      	nop
 80028bc:	20000228 	.word	0x20000228
 80028c0:	20000290 	.word	0x20000290
 80028c4:	200002f8 	.word	0x200002f8

080028c8 <global_stdio_init.part.0>:
 80028c8:	b510      	push	{r4, lr}
 80028ca:	4b0b      	ldr	r3, [pc, #44]	@ (80028f8 <global_stdio_init.part.0+0x30>)
 80028cc:	4c0b      	ldr	r4, [pc, #44]	@ (80028fc <global_stdio_init.part.0+0x34>)
 80028ce:	4a0c      	ldr	r2, [pc, #48]	@ (8002900 <global_stdio_init.part.0+0x38>)
 80028d0:	4620      	mov	r0, r4
 80028d2:	601a      	str	r2, [r3, #0]
 80028d4:	2104      	movs	r1, #4
 80028d6:	2200      	movs	r2, #0
 80028d8:	f7ff ff94 	bl	8002804 <std>
 80028dc:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80028e0:	2201      	movs	r2, #1
 80028e2:	2109      	movs	r1, #9
 80028e4:	f7ff ff8e 	bl	8002804 <std>
 80028e8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80028ec:	2202      	movs	r2, #2
 80028ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80028f2:	2112      	movs	r1, #18
 80028f4:	f7ff bf86 	b.w	8002804 <std>
 80028f8:	20000360 	.word	0x20000360
 80028fc:	20000228 	.word	0x20000228
 8002900:	08002871 	.word	0x08002871

08002904 <__sfp_lock_acquire>:
 8002904:	4801      	ldr	r0, [pc, #4]	@ (800290c <__sfp_lock_acquire+0x8>)
 8002906:	f000 b900 	b.w	8002b0a <__retarget_lock_acquire_recursive>
 800290a:	bf00      	nop
 800290c:	20000369 	.word	0x20000369

08002910 <__sfp_lock_release>:
 8002910:	4801      	ldr	r0, [pc, #4]	@ (8002918 <__sfp_lock_release+0x8>)
 8002912:	f000 b8fb 	b.w	8002b0c <__retarget_lock_release_recursive>
 8002916:	bf00      	nop
 8002918:	20000369 	.word	0x20000369

0800291c <__sinit>:
 800291c:	b510      	push	{r4, lr}
 800291e:	4604      	mov	r4, r0
 8002920:	f7ff fff0 	bl	8002904 <__sfp_lock_acquire>
 8002924:	6a23      	ldr	r3, [r4, #32]
 8002926:	b11b      	cbz	r3, 8002930 <__sinit+0x14>
 8002928:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800292c:	f7ff bff0 	b.w	8002910 <__sfp_lock_release>
 8002930:	4b04      	ldr	r3, [pc, #16]	@ (8002944 <__sinit+0x28>)
 8002932:	6223      	str	r3, [r4, #32]
 8002934:	4b04      	ldr	r3, [pc, #16]	@ (8002948 <__sinit+0x2c>)
 8002936:	681b      	ldr	r3, [r3, #0]
 8002938:	2b00      	cmp	r3, #0
 800293a:	d1f5      	bne.n	8002928 <__sinit+0xc>
 800293c:	f7ff ffc4 	bl	80028c8 <global_stdio_init.part.0>
 8002940:	e7f2      	b.n	8002928 <__sinit+0xc>
 8002942:	bf00      	nop
 8002944:	08002889 	.word	0x08002889
 8002948:	20000360 	.word	0x20000360

0800294c <_fwalk_sglue>:
 800294c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002950:	4607      	mov	r7, r0
 8002952:	4688      	mov	r8, r1
 8002954:	4614      	mov	r4, r2
 8002956:	2600      	movs	r6, #0
 8002958:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800295c:	f1b9 0901 	subs.w	r9, r9, #1
 8002960:	d505      	bpl.n	800296e <_fwalk_sglue+0x22>
 8002962:	6824      	ldr	r4, [r4, #0]
 8002964:	2c00      	cmp	r4, #0
 8002966:	d1f7      	bne.n	8002958 <_fwalk_sglue+0xc>
 8002968:	4630      	mov	r0, r6
 800296a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800296e:	89ab      	ldrh	r3, [r5, #12]
 8002970:	2b01      	cmp	r3, #1
 8002972:	d907      	bls.n	8002984 <_fwalk_sglue+0x38>
 8002974:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8002978:	3301      	adds	r3, #1
 800297a:	d003      	beq.n	8002984 <_fwalk_sglue+0x38>
 800297c:	4629      	mov	r1, r5
 800297e:	4638      	mov	r0, r7
 8002980:	47c0      	blx	r8
 8002982:	4306      	orrs	r6, r0
 8002984:	3568      	adds	r5, #104	@ 0x68
 8002986:	e7e9      	b.n	800295c <_fwalk_sglue+0x10>

08002988 <__sread>:
 8002988:	b510      	push	{r4, lr}
 800298a:	460c      	mov	r4, r1
 800298c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002990:	f000 f86c 	bl	8002a6c <_read_r>
 8002994:	2800      	cmp	r0, #0
 8002996:	bfab      	itete	ge
 8002998:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800299a:	89a3      	ldrhlt	r3, [r4, #12]
 800299c:	181b      	addge	r3, r3, r0
 800299e:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80029a2:	bfac      	ite	ge
 80029a4:	6563      	strge	r3, [r4, #84]	@ 0x54
 80029a6:	81a3      	strhlt	r3, [r4, #12]
 80029a8:	bd10      	pop	{r4, pc}

080029aa <__swrite>:
 80029aa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80029ae:	461f      	mov	r7, r3
 80029b0:	898b      	ldrh	r3, [r1, #12]
 80029b2:	4605      	mov	r5, r0
 80029b4:	05db      	lsls	r3, r3, #23
 80029b6:	460c      	mov	r4, r1
 80029b8:	4616      	mov	r6, r2
 80029ba:	d505      	bpl.n	80029c8 <__swrite+0x1e>
 80029bc:	2302      	movs	r3, #2
 80029be:	2200      	movs	r2, #0
 80029c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80029c4:	f000 f840 	bl	8002a48 <_lseek_r>
 80029c8:	89a3      	ldrh	r3, [r4, #12]
 80029ca:	4632      	mov	r2, r6
 80029cc:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80029d0:	81a3      	strh	r3, [r4, #12]
 80029d2:	4628      	mov	r0, r5
 80029d4:	463b      	mov	r3, r7
 80029d6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80029da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80029de:	f000 b857 	b.w	8002a90 <_write_r>

080029e2 <__sseek>:
 80029e2:	b510      	push	{r4, lr}
 80029e4:	460c      	mov	r4, r1
 80029e6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80029ea:	f000 f82d 	bl	8002a48 <_lseek_r>
 80029ee:	1c43      	adds	r3, r0, #1
 80029f0:	89a3      	ldrh	r3, [r4, #12]
 80029f2:	bf15      	itete	ne
 80029f4:	6560      	strne	r0, [r4, #84]	@ 0x54
 80029f6:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80029fa:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80029fe:	81a3      	strheq	r3, [r4, #12]
 8002a00:	bf18      	it	ne
 8002a02:	81a3      	strhne	r3, [r4, #12]
 8002a04:	bd10      	pop	{r4, pc}

08002a06 <__sclose>:
 8002a06:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002a0a:	f000 b80d 	b.w	8002a28 <_close_r>

08002a0e <memset>:
 8002a0e:	4603      	mov	r3, r0
 8002a10:	4402      	add	r2, r0
 8002a12:	4293      	cmp	r3, r2
 8002a14:	d100      	bne.n	8002a18 <memset+0xa>
 8002a16:	4770      	bx	lr
 8002a18:	f803 1b01 	strb.w	r1, [r3], #1
 8002a1c:	e7f9      	b.n	8002a12 <memset+0x4>
	...

08002a20 <_localeconv_r>:
 8002a20:	4800      	ldr	r0, [pc, #0]	@ (8002a24 <_localeconv_r+0x4>)
 8002a22:	4770      	bx	lr
 8002a24:	2000016c 	.word	0x2000016c

08002a28 <_close_r>:
 8002a28:	b538      	push	{r3, r4, r5, lr}
 8002a2a:	2300      	movs	r3, #0
 8002a2c:	4d05      	ldr	r5, [pc, #20]	@ (8002a44 <_close_r+0x1c>)
 8002a2e:	4604      	mov	r4, r0
 8002a30:	4608      	mov	r0, r1
 8002a32:	602b      	str	r3, [r5, #0]
 8002a34:	f7ff f9fb 	bl	8001e2e <_close>
 8002a38:	1c43      	adds	r3, r0, #1
 8002a3a:	d102      	bne.n	8002a42 <_close_r+0x1a>
 8002a3c:	682b      	ldr	r3, [r5, #0]
 8002a3e:	b103      	cbz	r3, 8002a42 <_close_r+0x1a>
 8002a40:	6023      	str	r3, [r4, #0]
 8002a42:	bd38      	pop	{r3, r4, r5, pc}
 8002a44:	20000364 	.word	0x20000364

08002a48 <_lseek_r>:
 8002a48:	b538      	push	{r3, r4, r5, lr}
 8002a4a:	4604      	mov	r4, r0
 8002a4c:	4608      	mov	r0, r1
 8002a4e:	4611      	mov	r1, r2
 8002a50:	2200      	movs	r2, #0
 8002a52:	4d05      	ldr	r5, [pc, #20]	@ (8002a68 <_lseek_r+0x20>)
 8002a54:	602a      	str	r2, [r5, #0]
 8002a56:	461a      	mov	r2, r3
 8002a58:	f7ff fa0d 	bl	8001e76 <_lseek>
 8002a5c:	1c43      	adds	r3, r0, #1
 8002a5e:	d102      	bne.n	8002a66 <_lseek_r+0x1e>
 8002a60:	682b      	ldr	r3, [r5, #0]
 8002a62:	b103      	cbz	r3, 8002a66 <_lseek_r+0x1e>
 8002a64:	6023      	str	r3, [r4, #0]
 8002a66:	bd38      	pop	{r3, r4, r5, pc}
 8002a68:	20000364 	.word	0x20000364

08002a6c <_read_r>:
 8002a6c:	b538      	push	{r3, r4, r5, lr}
 8002a6e:	4604      	mov	r4, r0
 8002a70:	4608      	mov	r0, r1
 8002a72:	4611      	mov	r1, r2
 8002a74:	2200      	movs	r2, #0
 8002a76:	4d05      	ldr	r5, [pc, #20]	@ (8002a8c <_read_r+0x20>)
 8002a78:	602a      	str	r2, [r5, #0]
 8002a7a:	461a      	mov	r2, r3
 8002a7c:	f7ff f99e 	bl	8001dbc <_read>
 8002a80:	1c43      	adds	r3, r0, #1
 8002a82:	d102      	bne.n	8002a8a <_read_r+0x1e>
 8002a84:	682b      	ldr	r3, [r5, #0]
 8002a86:	b103      	cbz	r3, 8002a8a <_read_r+0x1e>
 8002a88:	6023      	str	r3, [r4, #0]
 8002a8a:	bd38      	pop	{r3, r4, r5, pc}
 8002a8c:	20000364 	.word	0x20000364

08002a90 <_write_r>:
 8002a90:	b538      	push	{r3, r4, r5, lr}
 8002a92:	4604      	mov	r4, r0
 8002a94:	4608      	mov	r0, r1
 8002a96:	4611      	mov	r1, r2
 8002a98:	2200      	movs	r2, #0
 8002a9a:	4d05      	ldr	r5, [pc, #20]	@ (8002ab0 <_write_r+0x20>)
 8002a9c:	602a      	str	r2, [r5, #0]
 8002a9e:	461a      	mov	r2, r3
 8002aa0:	f7ff f9a9 	bl	8001df6 <_write>
 8002aa4:	1c43      	adds	r3, r0, #1
 8002aa6:	d102      	bne.n	8002aae <_write_r+0x1e>
 8002aa8:	682b      	ldr	r3, [r5, #0]
 8002aaa:	b103      	cbz	r3, 8002aae <_write_r+0x1e>
 8002aac:	6023      	str	r3, [r4, #0]
 8002aae:	bd38      	pop	{r3, r4, r5, pc}
 8002ab0:	20000364 	.word	0x20000364

08002ab4 <__errno>:
 8002ab4:	4b01      	ldr	r3, [pc, #4]	@ (8002abc <__errno+0x8>)
 8002ab6:	6818      	ldr	r0, [r3, #0]
 8002ab8:	4770      	bx	lr
 8002aba:	bf00      	nop
 8002abc:	2000002c 	.word	0x2000002c

08002ac0 <__libc_init_array>:
 8002ac0:	b570      	push	{r4, r5, r6, lr}
 8002ac2:	2600      	movs	r6, #0
 8002ac4:	4d0c      	ldr	r5, [pc, #48]	@ (8002af8 <__libc_init_array+0x38>)
 8002ac6:	4c0d      	ldr	r4, [pc, #52]	@ (8002afc <__libc_init_array+0x3c>)
 8002ac8:	1b64      	subs	r4, r4, r5
 8002aca:	10a4      	asrs	r4, r4, #2
 8002acc:	42a6      	cmp	r6, r4
 8002ace:	d109      	bne.n	8002ae4 <__libc_init_array+0x24>
 8002ad0:	f001 fece 	bl	8004870 <_init>
 8002ad4:	2600      	movs	r6, #0
 8002ad6:	4d0a      	ldr	r5, [pc, #40]	@ (8002b00 <__libc_init_array+0x40>)
 8002ad8:	4c0a      	ldr	r4, [pc, #40]	@ (8002b04 <__libc_init_array+0x44>)
 8002ada:	1b64      	subs	r4, r4, r5
 8002adc:	10a4      	asrs	r4, r4, #2
 8002ade:	42a6      	cmp	r6, r4
 8002ae0:	d105      	bne.n	8002aee <__libc_init_array+0x2e>
 8002ae2:	bd70      	pop	{r4, r5, r6, pc}
 8002ae4:	f855 3b04 	ldr.w	r3, [r5], #4
 8002ae8:	4798      	blx	r3
 8002aea:	3601      	adds	r6, #1
 8002aec:	e7ee      	b.n	8002acc <__libc_init_array+0xc>
 8002aee:	f855 3b04 	ldr.w	r3, [r5], #4
 8002af2:	4798      	blx	r3
 8002af4:	3601      	adds	r6, #1
 8002af6:	e7f2      	b.n	8002ade <__libc_init_array+0x1e>
 8002af8:	08004c0c 	.word	0x08004c0c
 8002afc:	08004c0c 	.word	0x08004c0c
 8002b00:	08004c0c 	.word	0x08004c0c
 8002b04:	08004c10 	.word	0x08004c10

08002b08 <__retarget_lock_init_recursive>:
 8002b08:	4770      	bx	lr

08002b0a <__retarget_lock_acquire_recursive>:
 8002b0a:	4770      	bx	lr

08002b0c <__retarget_lock_release_recursive>:
 8002b0c:	4770      	bx	lr

08002b0e <memchr>:
 8002b0e:	4603      	mov	r3, r0
 8002b10:	b510      	push	{r4, lr}
 8002b12:	b2c9      	uxtb	r1, r1
 8002b14:	4402      	add	r2, r0
 8002b16:	4293      	cmp	r3, r2
 8002b18:	4618      	mov	r0, r3
 8002b1a:	d101      	bne.n	8002b20 <memchr+0x12>
 8002b1c:	2000      	movs	r0, #0
 8002b1e:	e003      	b.n	8002b28 <memchr+0x1a>
 8002b20:	7804      	ldrb	r4, [r0, #0]
 8002b22:	3301      	adds	r3, #1
 8002b24:	428c      	cmp	r4, r1
 8002b26:	d1f6      	bne.n	8002b16 <memchr+0x8>
 8002b28:	bd10      	pop	{r4, pc}

08002b2a <quorem>:
 8002b2a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002b2e:	6903      	ldr	r3, [r0, #16]
 8002b30:	690c      	ldr	r4, [r1, #16]
 8002b32:	4607      	mov	r7, r0
 8002b34:	42a3      	cmp	r3, r4
 8002b36:	db7e      	blt.n	8002c36 <quorem+0x10c>
 8002b38:	3c01      	subs	r4, #1
 8002b3a:	00a3      	lsls	r3, r4, #2
 8002b3c:	f100 0514 	add.w	r5, r0, #20
 8002b40:	f101 0814 	add.w	r8, r1, #20
 8002b44:	9300      	str	r3, [sp, #0]
 8002b46:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002b4a:	9301      	str	r3, [sp, #4]
 8002b4c:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002b50:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002b54:	3301      	adds	r3, #1
 8002b56:	429a      	cmp	r2, r3
 8002b58:	fbb2 f6f3 	udiv	r6, r2, r3
 8002b5c:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002b60:	d32e      	bcc.n	8002bc0 <quorem+0x96>
 8002b62:	f04f 0a00 	mov.w	sl, #0
 8002b66:	46c4      	mov	ip, r8
 8002b68:	46ae      	mov	lr, r5
 8002b6a:	46d3      	mov	fp, sl
 8002b6c:	f85c 3b04 	ldr.w	r3, [ip], #4
 8002b70:	b298      	uxth	r0, r3
 8002b72:	fb06 a000 	mla	r0, r6, r0, sl
 8002b76:	0c1b      	lsrs	r3, r3, #16
 8002b78:	0c02      	lsrs	r2, r0, #16
 8002b7a:	fb06 2303 	mla	r3, r6, r3, r2
 8002b7e:	f8de 2000 	ldr.w	r2, [lr]
 8002b82:	b280      	uxth	r0, r0
 8002b84:	b292      	uxth	r2, r2
 8002b86:	1a12      	subs	r2, r2, r0
 8002b88:	445a      	add	r2, fp
 8002b8a:	f8de 0000 	ldr.w	r0, [lr]
 8002b8e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8002b92:	b29b      	uxth	r3, r3
 8002b94:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8002b98:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8002b9c:	b292      	uxth	r2, r2
 8002b9e:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8002ba2:	45e1      	cmp	r9, ip
 8002ba4:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8002ba8:	f84e 2b04 	str.w	r2, [lr], #4
 8002bac:	d2de      	bcs.n	8002b6c <quorem+0x42>
 8002bae:	9b00      	ldr	r3, [sp, #0]
 8002bb0:	58eb      	ldr	r3, [r5, r3]
 8002bb2:	b92b      	cbnz	r3, 8002bc0 <quorem+0x96>
 8002bb4:	9b01      	ldr	r3, [sp, #4]
 8002bb6:	3b04      	subs	r3, #4
 8002bb8:	429d      	cmp	r5, r3
 8002bba:	461a      	mov	r2, r3
 8002bbc:	d32f      	bcc.n	8002c1e <quorem+0xf4>
 8002bbe:	613c      	str	r4, [r7, #16]
 8002bc0:	4638      	mov	r0, r7
 8002bc2:	f001 f981 	bl	8003ec8 <__mcmp>
 8002bc6:	2800      	cmp	r0, #0
 8002bc8:	db25      	blt.n	8002c16 <quorem+0xec>
 8002bca:	4629      	mov	r1, r5
 8002bcc:	2000      	movs	r0, #0
 8002bce:	f858 2b04 	ldr.w	r2, [r8], #4
 8002bd2:	f8d1 c000 	ldr.w	ip, [r1]
 8002bd6:	fa1f fe82 	uxth.w	lr, r2
 8002bda:	fa1f f38c 	uxth.w	r3, ip
 8002bde:	eba3 030e 	sub.w	r3, r3, lr
 8002be2:	4403      	add	r3, r0
 8002be4:	0c12      	lsrs	r2, r2, #16
 8002be6:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8002bea:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8002bee:	b29b      	uxth	r3, r3
 8002bf0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002bf4:	45c1      	cmp	r9, r8
 8002bf6:	ea4f 4022 	mov.w	r0, r2, asr #16
 8002bfa:	f841 3b04 	str.w	r3, [r1], #4
 8002bfe:	d2e6      	bcs.n	8002bce <quorem+0xa4>
 8002c00:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002c04:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002c08:	b922      	cbnz	r2, 8002c14 <quorem+0xea>
 8002c0a:	3b04      	subs	r3, #4
 8002c0c:	429d      	cmp	r5, r3
 8002c0e:	461a      	mov	r2, r3
 8002c10:	d30b      	bcc.n	8002c2a <quorem+0x100>
 8002c12:	613c      	str	r4, [r7, #16]
 8002c14:	3601      	adds	r6, #1
 8002c16:	4630      	mov	r0, r6
 8002c18:	b003      	add	sp, #12
 8002c1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002c1e:	6812      	ldr	r2, [r2, #0]
 8002c20:	3b04      	subs	r3, #4
 8002c22:	2a00      	cmp	r2, #0
 8002c24:	d1cb      	bne.n	8002bbe <quorem+0x94>
 8002c26:	3c01      	subs	r4, #1
 8002c28:	e7c6      	b.n	8002bb8 <quorem+0x8e>
 8002c2a:	6812      	ldr	r2, [r2, #0]
 8002c2c:	3b04      	subs	r3, #4
 8002c2e:	2a00      	cmp	r2, #0
 8002c30:	d1ef      	bne.n	8002c12 <quorem+0xe8>
 8002c32:	3c01      	subs	r4, #1
 8002c34:	e7ea      	b.n	8002c0c <quorem+0xe2>
 8002c36:	2000      	movs	r0, #0
 8002c38:	e7ee      	b.n	8002c18 <quorem+0xee>
 8002c3a:	0000      	movs	r0, r0
 8002c3c:	0000      	movs	r0, r0
	...

08002c40 <_dtoa_r>:
 8002c40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c44:	4614      	mov	r4, r2
 8002c46:	461d      	mov	r5, r3
 8002c48:	69c7      	ldr	r7, [r0, #28]
 8002c4a:	b097      	sub	sp, #92	@ 0x5c
 8002c4c:	4681      	mov	r9, r0
 8002c4e:	e9cd 4506 	strd	r4, r5, [sp, #24]
 8002c52:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8002c54:	b97f      	cbnz	r7, 8002c76 <_dtoa_r+0x36>
 8002c56:	2010      	movs	r0, #16
 8002c58:	f000 fe0e 	bl	8003878 <malloc>
 8002c5c:	4602      	mov	r2, r0
 8002c5e:	f8c9 001c 	str.w	r0, [r9, #28]
 8002c62:	b920      	cbnz	r0, 8002c6e <_dtoa_r+0x2e>
 8002c64:	21ef      	movs	r1, #239	@ 0xef
 8002c66:	4bac      	ldr	r3, [pc, #688]	@ (8002f18 <_dtoa_r+0x2d8>)
 8002c68:	48ac      	ldr	r0, [pc, #688]	@ (8002f1c <_dtoa_r+0x2dc>)
 8002c6a:	f001 fafb 	bl	8004264 <__assert_func>
 8002c6e:	e9c0 7701 	strd	r7, r7, [r0, #4]
 8002c72:	6007      	str	r7, [r0, #0]
 8002c74:	60c7      	str	r7, [r0, #12]
 8002c76:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002c7a:	6819      	ldr	r1, [r3, #0]
 8002c7c:	b159      	cbz	r1, 8002c96 <_dtoa_r+0x56>
 8002c7e:	685a      	ldr	r2, [r3, #4]
 8002c80:	2301      	movs	r3, #1
 8002c82:	4093      	lsls	r3, r2
 8002c84:	604a      	str	r2, [r1, #4]
 8002c86:	608b      	str	r3, [r1, #8]
 8002c88:	4648      	mov	r0, r9
 8002c8a:	f000 feeb 	bl	8003a64 <_Bfree>
 8002c8e:	2200      	movs	r2, #0
 8002c90:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002c94:	601a      	str	r2, [r3, #0]
 8002c96:	1e2b      	subs	r3, r5, #0
 8002c98:	bfaf      	iteee	ge
 8002c9a:	2300      	movge	r3, #0
 8002c9c:	2201      	movlt	r2, #1
 8002c9e:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 8002ca2:	9307      	strlt	r3, [sp, #28]
 8002ca4:	bfa8      	it	ge
 8002ca6:	6033      	strge	r3, [r6, #0]
 8002ca8:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8002cac:	4b9c      	ldr	r3, [pc, #624]	@ (8002f20 <_dtoa_r+0x2e0>)
 8002cae:	bfb8      	it	lt
 8002cb0:	6032      	strlt	r2, [r6, #0]
 8002cb2:	ea33 0308 	bics.w	r3, r3, r8
 8002cb6:	d112      	bne.n	8002cde <_dtoa_r+0x9e>
 8002cb8:	f242 730f 	movw	r3, #9999	@ 0x270f
 8002cbc:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8002cbe:	6013      	str	r3, [r2, #0]
 8002cc0:	f3c8 0313 	ubfx	r3, r8, #0, #20
 8002cc4:	4323      	orrs	r3, r4
 8002cc6:	f000 855e 	beq.w	8003786 <_dtoa_r+0xb46>
 8002cca:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8002ccc:	f8df a254 	ldr.w	sl, [pc, #596]	@ 8002f24 <_dtoa_r+0x2e4>
 8002cd0:	2b00      	cmp	r3, #0
 8002cd2:	f000 8560 	beq.w	8003796 <_dtoa_r+0xb56>
 8002cd6:	f10a 0303 	add.w	r3, sl, #3
 8002cda:	f000 bd5a 	b.w	8003792 <_dtoa_r+0xb52>
 8002cde:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8002ce2:	e9cd 230c 	strd	r2, r3, [sp, #48]	@ 0x30
 8002ce6:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002cea:	2200      	movs	r2, #0
 8002cec:	2300      	movs	r3, #0
 8002cee:	f7fd ff1f 	bl	8000b30 <__aeabi_dcmpeq>
 8002cf2:	4607      	mov	r7, r0
 8002cf4:	b158      	cbz	r0, 8002d0e <_dtoa_r+0xce>
 8002cf6:	2301      	movs	r3, #1
 8002cf8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8002cfa:	6013      	str	r3, [r2, #0]
 8002cfc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8002cfe:	b113      	cbz	r3, 8002d06 <_dtoa_r+0xc6>
 8002d00:	4b89      	ldr	r3, [pc, #548]	@ (8002f28 <_dtoa_r+0x2e8>)
 8002d02:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8002d04:	6013      	str	r3, [r2, #0]
 8002d06:	f8df a224 	ldr.w	sl, [pc, #548]	@ 8002f2c <_dtoa_r+0x2ec>
 8002d0a:	f000 bd44 	b.w	8003796 <_dtoa_r+0xb56>
 8002d0e:	ab14      	add	r3, sp, #80	@ 0x50
 8002d10:	9301      	str	r3, [sp, #4]
 8002d12:	ab15      	add	r3, sp, #84	@ 0x54
 8002d14:	9300      	str	r3, [sp, #0]
 8002d16:	4648      	mov	r0, r9
 8002d18:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
 8002d1c:	f001 f984 	bl	8004028 <__d2b>
 8002d20:	f3c8 560a 	ubfx	r6, r8, #20, #11
 8002d24:	9003      	str	r0, [sp, #12]
 8002d26:	2e00      	cmp	r6, #0
 8002d28:	d078      	beq.n	8002e1c <_dtoa_r+0x1dc>
 8002d2a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002d2e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002d30:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8002d34:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002d38:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8002d3c:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8002d40:	9712      	str	r7, [sp, #72]	@ 0x48
 8002d42:	4619      	mov	r1, r3
 8002d44:	2200      	movs	r2, #0
 8002d46:	4b7a      	ldr	r3, [pc, #488]	@ (8002f30 <_dtoa_r+0x2f0>)
 8002d48:	f7fd fad2 	bl	80002f0 <__aeabi_dsub>
 8002d4c:	a36c      	add	r3, pc, #432	@ (adr r3, 8002f00 <_dtoa_r+0x2c0>)
 8002d4e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d52:	f7fd fc85 	bl	8000660 <__aeabi_dmul>
 8002d56:	a36c      	add	r3, pc, #432	@ (adr r3, 8002f08 <_dtoa_r+0x2c8>)
 8002d58:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d5c:	f7fd faca 	bl	80002f4 <__adddf3>
 8002d60:	4604      	mov	r4, r0
 8002d62:	4630      	mov	r0, r6
 8002d64:	460d      	mov	r5, r1
 8002d66:	f7fd fc11 	bl	800058c <__aeabi_i2d>
 8002d6a:	a369      	add	r3, pc, #420	@ (adr r3, 8002f10 <_dtoa_r+0x2d0>)
 8002d6c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d70:	f7fd fc76 	bl	8000660 <__aeabi_dmul>
 8002d74:	4602      	mov	r2, r0
 8002d76:	460b      	mov	r3, r1
 8002d78:	4620      	mov	r0, r4
 8002d7a:	4629      	mov	r1, r5
 8002d7c:	f7fd faba 	bl	80002f4 <__adddf3>
 8002d80:	4604      	mov	r4, r0
 8002d82:	460d      	mov	r5, r1
 8002d84:	f7fd ff1c 	bl	8000bc0 <__aeabi_d2iz>
 8002d88:	2200      	movs	r2, #0
 8002d8a:	4607      	mov	r7, r0
 8002d8c:	2300      	movs	r3, #0
 8002d8e:	4620      	mov	r0, r4
 8002d90:	4629      	mov	r1, r5
 8002d92:	f7fd fed7 	bl	8000b44 <__aeabi_dcmplt>
 8002d96:	b140      	cbz	r0, 8002daa <_dtoa_r+0x16a>
 8002d98:	4638      	mov	r0, r7
 8002d9a:	f7fd fbf7 	bl	800058c <__aeabi_i2d>
 8002d9e:	4622      	mov	r2, r4
 8002da0:	462b      	mov	r3, r5
 8002da2:	f7fd fec5 	bl	8000b30 <__aeabi_dcmpeq>
 8002da6:	b900      	cbnz	r0, 8002daa <_dtoa_r+0x16a>
 8002da8:	3f01      	subs	r7, #1
 8002daa:	2f16      	cmp	r7, #22
 8002dac:	d854      	bhi.n	8002e58 <_dtoa_r+0x218>
 8002dae:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002db2:	4b60      	ldr	r3, [pc, #384]	@ (8002f34 <_dtoa_r+0x2f4>)
 8002db4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8002db8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002dbc:	f7fd fec2 	bl	8000b44 <__aeabi_dcmplt>
 8002dc0:	2800      	cmp	r0, #0
 8002dc2:	d04b      	beq.n	8002e5c <_dtoa_r+0x21c>
 8002dc4:	2300      	movs	r3, #0
 8002dc6:	3f01      	subs	r7, #1
 8002dc8:	930f      	str	r3, [sp, #60]	@ 0x3c
 8002dca:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8002dcc:	1b9b      	subs	r3, r3, r6
 8002dce:	1e5a      	subs	r2, r3, #1
 8002dd0:	bf49      	itett	mi
 8002dd2:	f1c3 0301 	rsbmi	r3, r3, #1
 8002dd6:	2300      	movpl	r3, #0
 8002dd8:	9304      	strmi	r3, [sp, #16]
 8002dda:	2300      	movmi	r3, #0
 8002ddc:	9209      	str	r2, [sp, #36]	@ 0x24
 8002dde:	bf54      	ite	pl
 8002de0:	9304      	strpl	r3, [sp, #16]
 8002de2:	9309      	strmi	r3, [sp, #36]	@ 0x24
 8002de4:	2f00      	cmp	r7, #0
 8002de6:	db3b      	blt.n	8002e60 <_dtoa_r+0x220>
 8002de8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002dea:	970e      	str	r7, [sp, #56]	@ 0x38
 8002dec:	443b      	add	r3, r7
 8002dee:	9309      	str	r3, [sp, #36]	@ 0x24
 8002df0:	2300      	movs	r3, #0
 8002df2:	930a      	str	r3, [sp, #40]	@ 0x28
 8002df4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002df6:	2b09      	cmp	r3, #9
 8002df8:	d865      	bhi.n	8002ec6 <_dtoa_r+0x286>
 8002dfa:	2b05      	cmp	r3, #5
 8002dfc:	bfc4      	itt	gt
 8002dfe:	3b04      	subgt	r3, #4
 8002e00:	9320      	strgt	r3, [sp, #128]	@ 0x80
 8002e02:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8002e04:	bfc8      	it	gt
 8002e06:	2400      	movgt	r4, #0
 8002e08:	f1a3 0302 	sub.w	r3, r3, #2
 8002e0c:	bfd8      	it	le
 8002e0e:	2401      	movle	r4, #1
 8002e10:	2b03      	cmp	r3, #3
 8002e12:	d864      	bhi.n	8002ede <_dtoa_r+0x29e>
 8002e14:	e8df f003 	tbb	[pc, r3]
 8002e18:	2c385553 	.word	0x2c385553
 8002e1c:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	@ 0x50
 8002e20:	441e      	add	r6, r3
 8002e22:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8002e26:	2b20      	cmp	r3, #32
 8002e28:	bfc1      	itttt	gt
 8002e2a:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8002e2e:	fa08 f803 	lslgt.w	r8, r8, r3
 8002e32:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8002e36:	fa24 f303 	lsrgt.w	r3, r4, r3
 8002e3a:	bfd6      	itet	le
 8002e3c:	f1c3 0320 	rsble	r3, r3, #32
 8002e40:	ea48 0003 	orrgt.w	r0, r8, r3
 8002e44:	fa04 f003 	lslle.w	r0, r4, r3
 8002e48:	f7fd fb90 	bl	800056c <__aeabi_ui2d>
 8002e4c:	2201      	movs	r2, #1
 8002e4e:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8002e52:	3e01      	subs	r6, #1
 8002e54:	9212      	str	r2, [sp, #72]	@ 0x48
 8002e56:	e774      	b.n	8002d42 <_dtoa_r+0x102>
 8002e58:	2301      	movs	r3, #1
 8002e5a:	e7b5      	b.n	8002dc8 <_dtoa_r+0x188>
 8002e5c:	900f      	str	r0, [sp, #60]	@ 0x3c
 8002e5e:	e7b4      	b.n	8002dca <_dtoa_r+0x18a>
 8002e60:	9b04      	ldr	r3, [sp, #16]
 8002e62:	1bdb      	subs	r3, r3, r7
 8002e64:	9304      	str	r3, [sp, #16]
 8002e66:	427b      	negs	r3, r7
 8002e68:	930a      	str	r3, [sp, #40]	@ 0x28
 8002e6a:	2300      	movs	r3, #0
 8002e6c:	930e      	str	r3, [sp, #56]	@ 0x38
 8002e6e:	e7c1      	b.n	8002df4 <_dtoa_r+0x1b4>
 8002e70:	2301      	movs	r3, #1
 8002e72:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002e74:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002e76:	eb07 0b03 	add.w	fp, r7, r3
 8002e7a:	f10b 0301 	add.w	r3, fp, #1
 8002e7e:	2b01      	cmp	r3, #1
 8002e80:	9308      	str	r3, [sp, #32]
 8002e82:	bfb8      	it	lt
 8002e84:	2301      	movlt	r3, #1
 8002e86:	e006      	b.n	8002e96 <_dtoa_r+0x256>
 8002e88:	2301      	movs	r3, #1
 8002e8a:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002e8c:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8002e8e:	2b00      	cmp	r3, #0
 8002e90:	dd28      	ble.n	8002ee4 <_dtoa_r+0x2a4>
 8002e92:	469b      	mov	fp, r3
 8002e94:	9308      	str	r3, [sp, #32]
 8002e96:	2100      	movs	r1, #0
 8002e98:	2204      	movs	r2, #4
 8002e9a:	f8d9 001c 	ldr.w	r0, [r9, #28]
 8002e9e:	f102 0514 	add.w	r5, r2, #20
 8002ea2:	429d      	cmp	r5, r3
 8002ea4:	d926      	bls.n	8002ef4 <_dtoa_r+0x2b4>
 8002ea6:	6041      	str	r1, [r0, #4]
 8002ea8:	4648      	mov	r0, r9
 8002eaa:	f000 fd9b 	bl	80039e4 <_Balloc>
 8002eae:	4682      	mov	sl, r0
 8002eb0:	2800      	cmp	r0, #0
 8002eb2:	d143      	bne.n	8002f3c <_dtoa_r+0x2fc>
 8002eb4:	4602      	mov	r2, r0
 8002eb6:	f240 11af 	movw	r1, #431	@ 0x1af
 8002eba:	4b1f      	ldr	r3, [pc, #124]	@ (8002f38 <_dtoa_r+0x2f8>)
 8002ebc:	e6d4      	b.n	8002c68 <_dtoa_r+0x28>
 8002ebe:	2300      	movs	r3, #0
 8002ec0:	e7e3      	b.n	8002e8a <_dtoa_r+0x24a>
 8002ec2:	2300      	movs	r3, #0
 8002ec4:	e7d5      	b.n	8002e72 <_dtoa_r+0x232>
 8002ec6:	2401      	movs	r4, #1
 8002ec8:	2300      	movs	r3, #0
 8002eca:	940b      	str	r4, [sp, #44]	@ 0x2c
 8002ecc:	9320      	str	r3, [sp, #128]	@ 0x80
 8002ece:	f04f 3bff 	mov.w	fp, #4294967295
 8002ed2:	2200      	movs	r2, #0
 8002ed4:	2312      	movs	r3, #18
 8002ed6:	f8cd b020 	str.w	fp, [sp, #32]
 8002eda:	9221      	str	r2, [sp, #132]	@ 0x84
 8002edc:	e7db      	b.n	8002e96 <_dtoa_r+0x256>
 8002ede:	2301      	movs	r3, #1
 8002ee0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002ee2:	e7f4      	b.n	8002ece <_dtoa_r+0x28e>
 8002ee4:	f04f 0b01 	mov.w	fp, #1
 8002ee8:	465b      	mov	r3, fp
 8002eea:	f8cd b020 	str.w	fp, [sp, #32]
 8002eee:	f8cd b084 	str.w	fp, [sp, #132]	@ 0x84
 8002ef2:	e7d0      	b.n	8002e96 <_dtoa_r+0x256>
 8002ef4:	3101      	adds	r1, #1
 8002ef6:	0052      	lsls	r2, r2, #1
 8002ef8:	e7d1      	b.n	8002e9e <_dtoa_r+0x25e>
 8002efa:	bf00      	nop
 8002efc:	f3af 8000 	nop.w
 8002f00:	636f4361 	.word	0x636f4361
 8002f04:	3fd287a7 	.word	0x3fd287a7
 8002f08:	8b60c8b3 	.word	0x8b60c8b3
 8002f0c:	3fc68a28 	.word	0x3fc68a28
 8002f10:	509f79fb 	.word	0x509f79fb
 8002f14:	3fd34413 	.word	0x3fd34413
 8002f18:	080048d0 	.word	0x080048d0
 8002f1c:	080048e7 	.word	0x080048e7
 8002f20:	7ff00000 	.word	0x7ff00000
 8002f24:	080048cc 	.word	0x080048cc
 8002f28:	080048a0 	.word	0x080048a0
 8002f2c:	0800489f 	.word	0x0800489f
 8002f30:	3ff80000 	.word	0x3ff80000
 8002f34:	08004a38 	.word	0x08004a38
 8002f38:	0800493f 	.word	0x0800493f
 8002f3c:	f8d9 301c 	ldr.w	r3, [r9, #28]
 8002f40:	6018      	str	r0, [r3, #0]
 8002f42:	9b08      	ldr	r3, [sp, #32]
 8002f44:	2b0e      	cmp	r3, #14
 8002f46:	f200 80a1 	bhi.w	800308c <_dtoa_r+0x44c>
 8002f4a:	2c00      	cmp	r4, #0
 8002f4c:	f000 809e 	beq.w	800308c <_dtoa_r+0x44c>
 8002f50:	2f00      	cmp	r7, #0
 8002f52:	dd33      	ble.n	8002fbc <_dtoa_r+0x37c>
 8002f54:	4b9c      	ldr	r3, [pc, #624]	@ (80031c8 <_dtoa_r+0x588>)
 8002f56:	f007 020f 	and.w	r2, r7, #15
 8002f5a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002f5e:	05f8      	lsls	r0, r7, #23
 8002f60:	e9d3 3400 	ldrd	r3, r4, [r3]
 8002f64:	e9cd 3410 	strd	r3, r4, [sp, #64]	@ 0x40
 8002f68:	ea4f 1427 	mov.w	r4, r7, asr #4
 8002f6c:	d516      	bpl.n	8002f9c <_dtoa_r+0x35c>
 8002f6e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002f72:	4b96      	ldr	r3, [pc, #600]	@ (80031cc <_dtoa_r+0x58c>)
 8002f74:	2603      	movs	r6, #3
 8002f76:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8002f7a:	f7fd fc9b 	bl	80008b4 <__aeabi_ddiv>
 8002f7e:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8002f82:	f004 040f 	and.w	r4, r4, #15
 8002f86:	4d91      	ldr	r5, [pc, #580]	@ (80031cc <_dtoa_r+0x58c>)
 8002f88:	b954      	cbnz	r4, 8002fa0 <_dtoa_r+0x360>
 8002f8a:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002f8e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8002f92:	f7fd fc8f 	bl	80008b4 <__aeabi_ddiv>
 8002f96:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8002f9a:	e028      	b.n	8002fee <_dtoa_r+0x3ae>
 8002f9c:	2602      	movs	r6, #2
 8002f9e:	e7f2      	b.n	8002f86 <_dtoa_r+0x346>
 8002fa0:	07e1      	lsls	r1, r4, #31
 8002fa2:	d508      	bpl.n	8002fb6 <_dtoa_r+0x376>
 8002fa4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002fa8:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002fac:	f7fd fb58 	bl	8000660 <__aeabi_dmul>
 8002fb0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002fb4:	3601      	adds	r6, #1
 8002fb6:	1064      	asrs	r4, r4, #1
 8002fb8:	3508      	adds	r5, #8
 8002fba:	e7e5      	b.n	8002f88 <_dtoa_r+0x348>
 8002fbc:	f000 80af 	beq.w	800311e <_dtoa_r+0x4de>
 8002fc0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002fc4:	427c      	negs	r4, r7
 8002fc6:	4b80      	ldr	r3, [pc, #512]	@ (80031c8 <_dtoa_r+0x588>)
 8002fc8:	f004 020f 	and.w	r2, r4, #15
 8002fcc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002fd0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002fd4:	f7fd fb44 	bl	8000660 <__aeabi_dmul>
 8002fd8:	2602      	movs	r6, #2
 8002fda:	2300      	movs	r3, #0
 8002fdc:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8002fe0:	4d7a      	ldr	r5, [pc, #488]	@ (80031cc <_dtoa_r+0x58c>)
 8002fe2:	1124      	asrs	r4, r4, #4
 8002fe4:	2c00      	cmp	r4, #0
 8002fe6:	f040 808f 	bne.w	8003108 <_dtoa_r+0x4c8>
 8002fea:	2b00      	cmp	r3, #0
 8002fec:	d1d3      	bne.n	8002f96 <_dtoa_r+0x356>
 8002fee:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
 8002ff2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002ff4:	2b00      	cmp	r3, #0
 8002ff6:	f000 8094 	beq.w	8003122 <_dtoa_r+0x4e2>
 8002ffa:	2200      	movs	r2, #0
 8002ffc:	4620      	mov	r0, r4
 8002ffe:	4629      	mov	r1, r5
 8003000:	4b73      	ldr	r3, [pc, #460]	@ (80031d0 <_dtoa_r+0x590>)
 8003002:	f7fd fd9f 	bl	8000b44 <__aeabi_dcmplt>
 8003006:	2800      	cmp	r0, #0
 8003008:	f000 808b 	beq.w	8003122 <_dtoa_r+0x4e2>
 800300c:	9b08      	ldr	r3, [sp, #32]
 800300e:	2b00      	cmp	r3, #0
 8003010:	f000 8087 	beq.w	8003122 <_dtoa_r+0x4e2>
 8003014:	f1bb 0f00 	cmp.w	fp, #0
 8003018:	dd34      	ble.n	8003084 <_dtoa_r+0x444>
 800301a:	4620      	mov	r0, r4
 800301c:	2200      	movs	r2, #0
 800301e:	4629      	mov	r1, r5
 8003020:	4b6c      	ldr	r3, [pc, #432]	@ (80031d4 <_dtoa_r+0x594>)
 8003022:	f7fd fb1d 	bl	8000660 <__aeabi_dmul>
 8003026:	465c      	mov	r4, fp
 8003028:	e9cd 0106 	strd	r0, r1, [sp, #24]
 800302c:	f107 38ff 	add.w	r8, r7, #4294967295
 8003030:	3601      	adds	r6, #1
 8003032:	4630      	mov	r0, r6
 8003034:	f7fd faaa 	bl	800058c <__aeabi_i2d>
 8003038:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800303c:	f7fd fb10 	bl	8000660 <__aeabi_dmul>
 8003040:	2200      	movs	r2, #0
 8003042:	4b65      	ldr	r3, [pc, #404]	@ (80031d8 <_dtoa_r+0x598>)
 8003044:	f7fd f956 	bl	80002f4 <__adddf3>
 8003048:	4605      	mov	r5, r0
 800304a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 800304e:	2c00      	cmp	r4, #0
 8003050:	d16a      	bne.n	8003128 <_dtoa_r+0x4e8>
 8003052:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003056:	2200      	movs	r2, #0
 8003058:	4b60      	ldr	r3, [pc, #384]	@ (80031dc <_dtoa_r+0x59c>)
 800305a:	f7fd f949 	bl	80002f0 <__aeabi_dsub>
 800305e:	4602      	mov	r2, r0
 8003060:	460b      	mov	r3, r1
 8003062:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8003066:	462a      	mov	r2, r5
 8003068:	4633      	mov	r3, r6
 800306a:	f7fd fd89 	bl	8000b80 <__aeabi_dcmpgt>
 800306e:	2800      	cmp	r0, #0
 8003070:	f040 8298 	bne.w	80035a4 <_dtoa_r+0x964>
 8003074:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003078:	462a      	mov	r2, r5
 800307a:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 800307e:	f7fd fd61 	bl	8000b44 <__aeabi_dcmplt>
 8003082:	bb38      	cbnz	r0, 80030d4 <_dtoa_r+0x494>
 8003084:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8003088:	e9cd 3406 	strd	r3, r4, [sp, #24]
 800308c:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 800308e:	2b00      	cmp	r3, #0
 8003090:	f2c0 8157 	blt.w	8003342 <_dtoa_r+0x702>
 8003094:	2f0e      	cmp	r7, #14
 8003096:	f300 8154 	bgt.w	8003342 <_dtoa_r+0x702>
 800309a:	4b4b      	ldr	r3, [pc, #300]	@ (80031c8 <_dtoa_r+0x588>)
 800309c:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80030a0:	e9d3 3400 	ldrd	r3, r4, [r3]
 80030a4:	e9cd 3404 	strd	r3, r4, [sp, #16]
 80030a8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80030aa:	2b00      	cmp	r3, #0
 80030ac:	f280 80e5 	bge.w	800327a <_dtoa_r+0x63a>
 80030b0:	9b08      	ldr	r3, [sp, #32]
 80030b2:	2b00      	cmp	r3, #0
 80030b4:	f300 80e1 	bgt.w	800327a <_dtoa_r+0x63a>
 80030b8:	d10c      	bne.n	80030d4 <_dtoa_r+0x494>
 80030ba:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80030be:	2200      	movs	r2, #0
 80030c0:	4b46      	ldr	r3, [pc, #280]	@ (80031dc <_dtoa_r+0x59c>)
 80030c2:	f7fd facd 	bl	8000660 <__aeabi_dmul>
 80030c6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80030ca:	f7fd fd4f 	bl	8000b6c <__aeabi_dcmpge>
 80030ce:	2800      	cmp	r0, #0
 80030d0:	f000 8266 	beq.w	80035a0 <_dtoa_r+0x960>
 80030d4:	2400      	movs	r4, #0
 80030d6:	4625      	mov	r5, r4
 80030d8:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80030da:	4656      	mov	r6, sl
 80030dc:	ea6f 0803 	mvn.w	r8, r3
 80030e0:	2700      	movs	r7, #0
 80030e2:	4621      	mov	r1, r4
 80030e4:	4648      	mov	r0, r9
 80030e6:	f000 fcbd 	bl	8003a64 <_Bfree>
 80030ea:	2d00      	cmp	r5, #0
 80030ec:	f000 80bd 	beq.w	800326a <_dtoa_r+0x62a>
 80030f0:	b12f      	cbz	r7, 80030fe <_dtoa_r+0x4be>
 80030f2:	42af      	cmp	r7, r5
 80030f4:	d003      	beq.n	80030fe <_dtoa_r+0x4be>
 80030f6:	4639      	mov	r1, r7
 80030f8:	4648      	mov	r0, r9
 80030fa:	f000 fcb3 	bl	8003a64 <_Bfree>
 80030fe:	4629      	mov	r1, r5
 8003100:	4648      	mov	r0, r9
 8003102:	f000 fcaf 	bl	8003a64 <_Bfree>
 8003106:	e0b0      	b.n	800326a <_dtoa_r+0x62a>
 8003108:	07e2      	lsls	r2, r4, #31
 800310a:	d505      	bpl.n	8003118 <_dtoa_r+0x4d8>
 800310c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003110:	f7fd faa6 	bl	8000660 <__aeabi_dmul>
 8003114:	2301      	movs	r3, #1
 8003116:	3601      	adds	r6, #1
 8003118:	1064      	asrs	r4, r4, #1
 800311a:	3508      	adds	r5, #8
 800311c:	e762      	b.n	8002fe4 <_dtoa_r+0x3a4>
 800311e:	2602      	movs	r6, #2
 8003120:	e765      	b.n	8002fee <_dtoa_r+0x3ae>
 8003122:	46b8      	mov	r8, r7
 8003124:	9c08      	ldr	r4, [sp, #32]
 8003126:	e784      	b.n	8003032 <_dtoa_r+0x3f2>
 8003128:	4b27      	ldr	r3, [pc, #156]	@ (80031c8 <_dtoa_r+0x588>)
 800312a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800312c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8003130:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003134:	4454      	add	r4, sl
 8003136:	2900      	cmp	r1, #0
 8003138:	d054      	beq.n	80031e4 <_dtoa_r+0x5a4>
 800313a:	2000      	movs	r0, #0
 800313c:	4928      	ldr	r1, [pc, #160]	@ (80031e0 <_dtoa_r+0x5a0>)
 800313e:	f7fd fbb9 	bl	80008b4 <__aeabi_ddiv>
 8003142:	4633      	mov	r3, r6
 8003144:	462a      	mov	r2, r5
 8003146:	f7fd f8d3 	bl	80002f0 <__aeabi_dsub>
 800314a:	4656      	mov	r6, sl
 800314c:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8003150:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003154:	f7fd fd34 	bl	8000bc0 <__aeabi_d2iz>
 8003158:	4605      	mov	r5, r0
 800315a:	f7fd fa17 	bl	800058c <__aeabi_i2d>
 800315e:	4602      	mov	r2, r0
 8003160:	460b      	mov	r3, r1
 8003162:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003166:	f7fd f8c3 	bl	80002f0 <__aeabi_dsub>
 800316a:	4602      	mov	r2, r0
 800316c:	460b      	mov	r3, r1
 800316e:	3530      	adds	r5, #48	@ 0x30
 8003170:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8003174:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003178:	f806 5b01 	strb.w	r5, [r6], #1
 800317c:	f7fd fce2 	bl	8000b44 <__aeabi_dcmplt>
 8003180:	2800      	cmp	r0, #0
 8003182:	d172      	bne.n	800326a <_dtoa_r+0x62a>
 8003184:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003188:	2000      	movs	r0, #0
 800318a:	4911      	ldr	r1, [pc, #68]	@ (80031d0 <_dtoa_r+0x590>)
 800318c:	f7fd f8b0 	bl	80002f0 <__aeabi_dsub>
 8003190:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003194:	f7fd fcd6 	bl	8000b44 <__aeabi_dcmplt>
 8003198:	2800      	cmp	r0, #0
 800319a:	f040 80b4 	bne.w	8003306 <_dtoa_r+0x6c6>
 800319e:	42a6      	cmp	r6, r4
 80031a0:	f43f af70 	beq.w	8003084 <_dtoa_r+0x444>
 80031a4:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 80031a8:	2200      	movs	r2, #0
 80031aa:	4b0a      	ldr	r3, [pc, #40]	@ (80031d4 <_dtoa_r+0x594>)
 80031ac:	f7fd fa58 	bl	8000660 <__aeabi_dmul>
 80031b0:	2200      	movs	r2, #0
 80031b2:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80031b6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80031ba:	4b06      	ldr	r3, [pc, #24]	@ (80031d4 <_dtoa_r+0x594>)
 80031bc:	f7fd fa50 	bl	8000660 <__aeabi_dmul>
 80031c0:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80031c4:	e7c4      	b.n	8003150 <_dtoa_r+0x510>
 80031c6:	bf00      	nop
 80031c8:	08004a38 	.word	0x08004a38
 80031cc:	08004a10 	.word	0x08004a10
 80031d0:	3ff00000 	.word	0x3ff00000
 80031d4:	40240000 	.word	0x40240000
 80031d8:	401c0000 	.word	0x401c0000
 80031dc:	40140000 	.word	0x40140000
 80031e0:	3fe00000 	.word	0x3fe00000
 80031e4:	4631      	mov	r1, r6
 80031e6:	4628      	mov	r0, r5
 80031e8:	f7fd fa3a 	bl	8000660 <__aeabi_dmul>
 80031ec:	4656      	mov	r6, sl
 80031ee:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 80031f2:	9413      	str	r4, [sp, #76]	@ 0x4c
 80031f4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80031f8:	f7fd fce2 	bl	8000bc0 <__aeabi_d2iz>
 80031fc:	4605      	mov	r5, r0
 80031fe:	f7fd f9c5 	bl	800058c <__aeabi_i2d>
 8003202:	4602      	mov	r2, r0
 8003204:	460b      	mov	r3, r1
 8003206:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800320a:	f7fd f871 	bl	80002f0 <__aeabi_dsub>
 800320e:	4602      	mov	r2, r0
 8003210:	460b      	mov	r3, r1
 8003212:	3530      	adds	r5, #48	@ 0x30
 8003214:	f806 5b01 	strb.w	r5, [r6], #1
 8003218:	42a6      	cmp	r6, r4
 800321a:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800321e:	f04f 0200 	mov.w	r2, #0
 8003222:	d124      	bne.n	800326e <_dtoa_r+0x62e>
 8003224:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8003228:	4bae      	ldr	r3, [pc, #696]	@ (80034e4 <_dtoa_r+0x8a4>)
 800322a:	f7fd f863 	bl	80002f4 <__adddf3>
 800322e:	4602      	mov	r2, r0
 8003230:	460b      	mov	r3, r1
 8003232:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003236:	f7fd fca3 	bl	8000b80 <__aeabi_dcmpgt>
 800323a:	2800      	cmp	r0, #0
 800323c:	d163      	bne.n	8003306 <_dtoa_r+0x6c6>
 800323e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8003242:	2000      	movs	r0, #0
 8003244:	49a7      	ldr	r1, [pc, #668]	@ (80034e4 <_dtoa_r+0x8a4>)
 8003246:	f7fd f853 	bl	80002f0 <__aeabi_dsub>
 800324a:	4602      	mov	r2, r0
 800324c:	460b      	mov	r3, r1
 800324e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003252:	f7fd fc77 	bl	8000b44 <__aeabi_dcmplt>
 8003256:	2800      	cmp	r0, #0
 8003258:	f43f af14 	beq.w	8003084 <_dtoa_r+0x444>
 800325c:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 800325e:	1e73      	subs	r3, r6, #1
 8003260:	9313      	str	r3, [sp, #76]	@ 0x4c
 8003262:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8003266:	2b30      	cmp	r3, #48	@ 0x30
 8003268:	d0f8      	beq.n	800325c <_dtoa_r+0x61c>
 800326a:	4647      	mov	r7, r8
 800326c:	e03b      	b.n	80032e6 <_dtoa_r+0x6a6>
 800326e:	4b9e      	ldr	r3, [pc, #632]	@ (80034e8 <_dtoa_r+0x8a8>)
 8003270:	f7fd f9f6 	bl	8000660 <__aeabi_dmul>
 8003274:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8003278:	e7bc      	b.n	80031f4 <_dtoa_r+0x5b4>
 800327a:	4656      	mov	r6, sl
 800327c:	e9dd 4506 	ldrd	r4, r5, [sp, #24]
 8003280:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003284:	4620      	mov	r0, r4
 8003286:	4629      	mov	r1, r5
 8003288:	f7fd fb14 	bl	80008b4 <__aeabi_ddiv>
 800328c:	f7fd fc98 	bl	8000bc0 <__aeabi_d2iz>
 8003290:	4680      	mov	r8, r0
 8003292:	f7fd f97b 	bl	800058c <__aeabi_i2d>
 8003296:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 800329a:	f7fd f9e1 	bl	8000660 <__aeabi_dmul>
 800329e:	4602      	mov	r2, r0
 80032a0:	460b      	mov	r3, r1
 80032a2:	4620      	mov	r0, r4
 80032a4:	4629      	mov	r1, r5
 80032a6:	f7fd f823 	bl	80002f0 <__aeabi_dsub>
 80032aa:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 80032ae:	9d08      	ldr	r5, [sp, #32]
 80032b0:	f806 4b01 	strb.w	r4, [r6], #1
 80032b4:	eba6 040a 	sub.w	r4, r6, sl
 80032b8:	42a5      	cmp	r5, r4
 80032ba:	4602      	mov	r2, r0
 80032bc:	460b      	mov	r3, r1
 80032be:	d133      	bne.n	8003328 <_dtoa_r+0x6e8>
 80032c0:	f7fd f818 	bl	80002f4 <__adddf3>
 80032c4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80032c8:	4604      	mov	r4, r0
 80032ca:	460d      	mov	r5, r1
 80032cc:	f7fd fc58 	bl	8000b80 <__aeabi_dcmpgt>
 80032d0:	b9c0      	cbnz	r0, 8003304 <_dtoa_r+0x6c4>
 80032d2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80032d6:	4620      	mov	r0, r4
 80032d8:	4629      	mov	r1, r5
 80032da:	f7fd fc29 	bl	8000b30 <__aeabi_dcmpeq>
 80032de:	b110      	cbz	r0, 80032e6 <_dtoa_r+0x6a6>
 80032e0:	f018 0f01 	tst.w	r8, #1
 80032e4:	d10e      	bne.n	8003304 <_dtoa_r+0x6c4>
 80032e6:	4648      	mov	r0, r9
 80032e8:	9903      	ldr	r1, [sp, #12]
 80032ea:	f000 fbbb 	bl	8003a64 <_Bfree>
 80032ee:	2300      	movs	r3, #0
 80032f0:	7033      	strb	r3, [r6, #0]
 80032f2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80032f4:	3701      	adds	r7, #1
 80032f6:	601f      	str	r7, [r3, #0]
 80032f8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80032fa:	2b00      	cmp	r3, #0
 80032fc:	f000 824b 	beq.w	8003796 <_dtoa_r+0xb56>
 8003300:	601e      	str	r6, [r3, #0]
 8003302:	e248      	b.n	8003796 <_dtoa_r+0xb56>
 8003304:	46b8      	mov	r8, r7
 8003306:	4633      	mov	r3, r6
 8003308:	461e      	mov	r6, r3
 800330a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800330e:	2a39      	cmp	r2, #57	@ 0x39
 8003310:	d106      	bne.n	8003320 <_dtoa_r+0x6e0>
 8003312:	459a      	cmp	sl, r3
 8003314:	d1f8      	bne.n	8003308 <_dtoa_r+0x6c8>
 8003316:	2230      	movs	r2, #48	@ 0x30
 8003318:	f108 0801 	add.w	r8, r8, #1
 800331c:	f88a 2000 	strb.w	r2, [sl]
 8003320:	781a      	ldrb	r2, [r3, #0]
 8003322:	3201      	adds	r2, #1
 8003324:	701a      	strb	r2, [r3, #0]
 8003326:	e7a0      	b.n	800326a <_dtoa_r+0x62a>
 8003328:	2200      	movs	r2, #0
 800332a:	4b6f      	ldr	r3, [pc, #444]	@ (80034e8 <_dtoa_r+0x8a8>)
 800332c:	f7fd f998 	bl	8000660 <__aeabi_dmul>
 8003330:	2200      	movs	r2, #0
 8003332:	2300      	movs	r3, #0
 8003334:	4604      	mov	r4, r0
 8003336:	460d      	mov	r5, r1
 8003338:	f7fd fbfa 	bl	8000b30 <__aeabi_dcmpeq>
 800333c:	2800      	cmp	r0, #0
 800333e:	d09f      	beq.n	8003280 <_dtoa_r+0x640>
 8003340:	e7d1      	b.n	80032e6 <_dtoa_r+0x6a6>
 8003342:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8003344:	2a00      	cmp	r2, #0
 8003346:	f000 80ea 	beq.w	800351e <_dtoa_r+0x8de>
 800334a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 800334c:	2a01      	cmp	r2, #1
 800334e:	f300 80cd 	bgt.w	80034ec <_dtoa_r+0x8ac>
 8003352:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8003354:	2a00      	cmp	r2, #0
 8003356:	f000 80c1 	beq.w	80034dc <_dtoa_r+0x89c>
 800335a:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 800335e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003360:	9e04      	ldr	r6, [sp, #16]
 8003362:	9a04      	ldr	r2, [sp, #16]
 8003364:	2101      	movs	r1, #1
 8003366:	441a      	add	r2, r3
 8003368:	9204      	str	r2, [sp, #16]
 800336a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800336c:	4648      	mov	r0, r9
 800336e:	441a      	add	r2, r3
 8003370:	9209      	str	r2, [sp, #36]	@ 0x24
 8003372:	f000 fc2b 	bl	8003bcc <__i2b>
 8003376:	4605      	mov	r5, r0
 8003378:	b166      	cbz	r6, 8003394 <_dtoa_r+0x754>
 800337a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800337c:	2b00      	cmp	r3, #0
 800337e:	dd09      	ble.n	8003394 <_dtoa_r+0x754>
 8003380:	42b3      	cmp	r3, r6
 8003382:	bfa8      	it	ge
 8003384:	4633      	movge	r3, r6
 8003386:	9a04      	ldr	r2, [sp, #16]
 8003388:	1af6      	subs	r6, r6, r3
 800338a:	1ad2      	subs	r2, r2, r3
 800338c:	9204      	str	r2, [sp, #16]
 800338e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003390:	1ad3      	subs	r3, r2, r3
 8003392:	9309      	str	r3, [sp, #36]	@ 0x24
 8003394:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8003396:	b30b      	cbz	r3, 80033dc <_dtoa_r+0x79c>
 8003398:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800339a:	2b00      	cmp	r3, #0
 800339c:	f000 80c6 	beq.w	800352c <_dtoa_r+0x8ec>
 80033a0:	2c00      	cmp	r4, #0
 80033a2:	f000 80c0 	beq.w	8003526 <_dtoa_r+0x8e6>
 80033a6:	4629      	mov	r1, r5
 80033a8:	4622      	mov	r2, r4
 80033aa:	4648      	mov	r0, r9
 80033ac:	f000 fcc6 	bl	8003d3c <__pow5mult>
 80033b0:	9a03      	ldr	r2, [sp, #12]
 80033b2:	4601      	mov	r1, r0
 80033b4:	4605      	mov	r5, r0
 80033b6:	4648      	mov	r0, r9
 80033b8:	f000 fc1e 	bl	8003bf8 <__multiply>
 80033bc:	9903      	ldr	r1, [sp, #12]
 80033be:	4680      	mov	r8, r0
 80033c0:	4648      	mov	r0, r9
 80033c2:	f000 fb4f 	bl	8003a64 <_Bfree>
 80033c6:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80033c8:	1b1b      	subs	r3, r3, r4
 80033ca:	930a      	str	r3, [sp, #40]	@ 0x28
 80033cc:	f000 80b1 	beq.w	8003532 <_dtoa_r+0x8f2>
 80033d0:	4641      	mov	r1, r8
 80033d2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80033d4:	4648      	mov	r0, r9
 80033d6:	f000 fcb1 	bl	8003d3c <__pow5mult>
 80033da:	9003      	str	r0, [sp, #12]
 80033dc:	2101      	movs	r1, #1
 80033de:	4648      	mov	r0, r9
 80033e0:	f000 fbf4 	bl	8003bcc <__i2b>
 80033e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80033e6:	4604      	mov	r4, r0
 80033e8:	2b00      	cmp	r3, #0
 80033ea:	f000 81d8 	beq.w	800379e <_dtoa_r+0xb5e>
 80033ee:	461a      	mov	r2, r3
 80033f0:	4601      	mov	r1, r0
 80033f2:	4648      	mov	r0, r9
 80033f4:	f000 fca2 	bl	8003d3c <__pow5mult>
 80033f8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80033fa:	4604      	mov	r4, r0
 80033fc:	2b01      	cmp	r3, #1
 80033fe:	f300 809f 	bgt.w	8003540 <_dtoa_r+0x900>
 8003402:	9b06      	ldr	r3, [sp, #24]
 8003404:	2b00      	cmp	r3, #0
 8003406:	f040 8097 	bne.w	8003538 <_dtoa_r+0x8f8>
 800340a:	9b07      	ldr	r3, [sp, #28]
 800340c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003410:	2b00      	cmp	r3, #0
 8003412:	f040 8093 	bne.w	800353c <_dtoa_r+0x8fc>
 8003416:	9b07      	ldr	r3, [sp, #28]
 8003418:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800341c:	0d1b      	lsrs	r3, r3, #20
 800341e:	051b      	lsls	r3, r3, #20
 8003420:	b133      	cbz	r3, 8003430 <_dtoa_r+0x7f0>
 8003422:	9b04      	ldr	r3, [sp, #16]
 8003424:	3301      	adds	r3, #1
 8003426:	9304      	str	r3, [sp, #16]
 8003428:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800342a:	3301      	adds	r3, #1
 800342c:	9309      	str	r3, [sp, #36]	@ 0x24
 800342e:	2301      	movs	r3, #1
 8003430:	930a      	str	r3, [sp, #40]	@ 0x28
 8003432:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8003434:	2b00      	cmp	r3, #0
 8003436:	f000 81b8 	beq.w	80037aa <_dtoa_r+0xb6a>
 800343a:	6923      	ldr	r3, [r4, #16]
 800343c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8003440:	6918      	ldr	r0, [r3, #16]
 8003442:	f000 fb77 	bl	8003b34 <__hi0bits>
 8003446:	f1c0 0020 	rsb	r0, r0, #32
 800344a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800344c:	4418      	add	r0, r3
 800344e:	f010 001f 	ands.w	r0, r0, #31
 8003452:	f000 8082 	beq.w	800355a <_dtoa_r+0x91a>
 8003456:	f1c0 0320 	rsb	r3, r0, #32
 800345a:	2b04      	cmp	r3, #4
 800345c:	dd73      	ble.n	8003546 <_dtoa_r+0x906>
 800345e:	9b04      	ldr	r3, [sp, #16]
 8003460:	f1c0 001c 	rsb	r0, r0, #28
 8003464:	4403      	add	r3, r0
 8003466:	9304      	str	r3, [sp, #16]
 8003468:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800346a:	4406      	add	r6, r0
 800346c:	4403      	add	r3, r0
 800346e:	9309      	str	r3, [sp, #36]	@ 0x24
 8003470:	9b04      	ldr	r3, [sp, #16]
 8003472:	2b00      	cmp	r3, #0
 8003474:	dd05      	ble.n	8003482 <_dtoa_r+0x842>
 8003476:	461a      	mov	r2, r3
 8003478:	4648      	mov	r0, r9
 800347a:	9903      	ldr	r1, [sp, #12]
 800347c:	f000 fcb8 	bl	8003df0 <__lshift>
 8003480:	9003      	str	r0, [sp, #12]
 8003482:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003484:	2b00      	cmp	r3, #0
 8003486:	dd05      	ble.n	8003494 <_dtoa_r+0x854>
 8003488:	4621      	mov	r1, r4
 800348a:	461a      	mov	r2, r3
 800348c:	4648      	mov	r0, r9
 800348e:	f000 fcaf 	bl	8003df0 <__lshift>
 8003492:	4604      	mov	r4, r0
 8003494:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8003496:	2b00      	cmp	r3, #0
 8003498:	d061      	beq.n	800355e <_dtoa_r+0x91e>
 800349a:	4621      	mov	r1, r4
 800349c:	9803      	ldr	r0, [sp, #12]
 800349e:	f000 fd13 	bl	8003ec8 <__mcmp>
 80034a2:	2800      	cmp	r0, #0
 80034a4:	da5b      	bge.n	800355e <_dtoa_r+0x91e>
 80034a6:	2300      	movs	r3, #0
 80034a8:	220a      	movs	r2, #10
 80034aa:	4648      	mov	r0, r9
 80034ac:	9903      	ldr	r1, [sp, #12]
 80034ae:	f000 fafb 	bl	8003aa8 <__multadd>
 80034b2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80034b4:	f107 38ff 	add.w	r8, r7, #4294967295
 80034b8:	9003      	str	r0, [sp, #12]
 80034ba:	2b00      	cmp	r3, #0
 80034bc:	f000 8177 	beq.w	80037ae <_dtoa_r+0xb6e>
 80034c0:	4629      	mov	r1, r5
 80034c2:	2300      	movs	r3, #0
 80034c4:	220a      	movs	r2, #10
 80034c6:	4648      	mov	r0, r9
 80034c8:	f000 faee 	bl	8003aa8 <__multadd>
 80034cc:	f1bb 0f00 	cmp.w	fp, #0
 80034d0:	4605      	mov	r5, r0
 80034d2:	dc6f      	bgt.n	80035b4 <_dtoa_r+0x974>
 80034d4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80034d6:	2b02      	cmp	r3, #2
 80034d8:	dc49      	bgt.n	800356e <_dtoa_r+0x92e>
 80034da:	e06b      	b.n	80035b4 <_dtoa_r+0x974>
 80034dc:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80034de:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 80034e2:	e73c      	b.n	800335e <_dtoa_r+0x71e>
 80034e4:	3fe00000 	.word	0x3fe00000
 80034e8:	40240000 	.word	0x40240000
 80034ec:	9b08      	ldr	r3, [sp, #32]
 80034ee:	1e5c      	subs	r4, r3, #1
 80034f0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80034f2:	42a3      	cmp	r3, r4
 80034f4:	db09      	blt.n	800350a <_dtoa_r+0x8ca>
 80034f6:	1b1c      	subs	r4, r3, r4
 80034f8:	9b08      	ldr	r3, [sp, #32]
 80034fa:	2b00      	cmp	r3, #0
 80034fc:	f6bf af30 	bge.w	8003360 <_dtoa_r+0x720>
 8003500:	9b04      	ldr	r3, [sp, #16]
 8003502:	9a08      	ldr	r2, [sp, #32]
 8003504:	1a9e      	subs	r6, r3, r2
 8003506:	2300      	movs	r3, #0
 8003508:	e72b      	b.n	8003362 <_dtoa_r+0x722>
 800350a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800350c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800350e:	1ae3      	subs	r3, r4, r3
 8003510:	441a      	add	r2, r3
 8003512:	940a      	str	r4, [sp, #40]	@ 0x28
 8003514:	9e04      	ldr	r6, [sp, #16]
 8003516:	2400      	movs	r4, #0
 8003518:	9b08      	ldr	r3, [sp, #32]
 800351a:	920e      	str	r2, [sp, #56]	@ 0x38
 800351c:	e721      	b.n	8003362 <_dtoa_r+0x722>
 800351e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8003520:	9e04      	ldr	r6, [sp, #16]
 8003522:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8003524:	e728      	b.n	8003378 <_dtoa_r+0x738>
 8003526:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800352a:	e751      	b.n	80033d0 <_dtoa_r+0x790>
 800352c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800352e:	9903      	ldr	r1, [sp, #12]
 8003530:	e750      	b.n	80033d4 <_dtoa_r+0x794>
 8003532:	f8cd 800c 	str.w	r8, [sp, #12]
 8003536:	e751      	b.n	80033dc <_dtoa_r+0x79c>
 8003538:	2300      	movs	r3, #0
 800353a:	e779      	b.n	8003430 <_dtoa_r+0x7f0>
 800353c:	9b06      	ldr	r3, [sp, #24]
 800353e:	e777      	b.n	8003430 <_dtoa_r+0x7f0>
 8003540:	2300      	movs	r3, #0
 8003542:	930a      	str	r3, [sp, #40]	@ 0x28
 8003544:	e779      	b.n	800343a <_dtoa_r+0x7fa>
 8003546:	d093      	beq.n	8003470 <_dtoa_r+0x830>
 8003548:	9a04      	ldr	r2, [sp, #16]
 800354a:	331c      	adds	r3, #28
 800354c:	441a      	add	r2, r3
 800354e:	9204      	str	r2, [sp, #16]
 8003550:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003552:	441e      	add	r6, r3
 8003554:	441a      	add	r2, r3
 8003556:	9209      	str	r2, [sp, #36]	@ 0x24
 8003558:	e78a      	b.n	8003470 <_dtoa_r+0x830>
 800355a:	4603      	mov	r3, r0
 800355c:	e7f4      	b.n	8003548 <_dtoa_r+0x908>
 800355e:	9b08      	ldr	r3, [sp, #32]
 8003560:	46b8      	mov	r8, r7
 8003562:	2b00      	cmp	r3, #0
 8003564:	dc20      	bgt.n	80035a8 <_dtoa_r+0x968>
 8003566:	469b      	mov	fp, r3
 8003568:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 800356a:	2b02      	cmp	r3, #2
 800356c:	dd1e      	ble.n	80035ac <_dtoa_r+0x96c>
 800356e:	f1bb 0f00 	cmp.w	fp, #0
 8003572:	f47f adb1 	bne.w	80030d8 <_dtoa_r+0x498>
 8003576:	4621      	mov	r1, r4
 8003578:	465b      	mov	r3, fp
 800357a:	2205      	movs	r2, #5
 800357c:	4648      	mov	r0, r9
 800357e:	f000 fa93 	bl	8003aa8 <__multadd>
 8003582:	4601      	mov	r1, r0
 8003584:	4604      	mov	r4, r0
 8003586:	9803      	ldr	r0, [sp, #12]
 8003588:	f000 fc9e 	bl	8003ec8 <__mcmp>
 800358c:	2800      	cmp	r0, #0
 800358e:	f77f ada3 	ble.w	80030d8 <_dtoa_r+0x498>
 8003592:	4656      	mov	r6, sl
 8003594:	2331      	movs	r3, #49	@ 0x31
 8003596:	f108 0801 	add.w	r8, r8, #1
 800359a:	f806 3b01 	strb.w	r3, [r6], #1
 800359e:	e59f      	b.n	80030e0 <_dtoa_r+0x4a0>
 80035a0:	46b8      	mov	r8, r7
 80035a2:	9c08      	ldr	r4, [sp, #32]
 80035a4:	4625      	mov	r5, r4
 80035a6:	e7f4      	b.n	8003592 <_dtoa_r+0x952>
 80035a8:	f8dd b020 	ldr.w	fp, [sp, #32]
 80035ac:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80035ae:	2b00      	cmp	r3, #0
 80035b0:	f000 8101 	beq.w	80037b6 <_dtoa_r+0xb76>
 80035b4:	2e00      	cmp	r6, #0
 80035b6:	dd05      	ble.n	80035c4 <_dtoa_r+0x984>
 80035b8:	4629      	mov	r1, r5
 80035ba:	4632      	mov	r2, r6
 80035bc:	4648      	mov	r0, r9
 80035be:	f000 fc17 	bl	8003df0 <__lshift>
 80035c2:	4605      	mov	r5, r0
 80035c4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80035c6:	2b00      	cmp	r3, #0
 80035c8:	d05c      	beq.n	8003684 <_dtoa_r+0xa44>
 80035ca:	4648      	mov	r0, r9
 80035cc:	6869      	ldr	r1, [r5, #4]
 80035ce:	f000 fa09 	bl	80039e4 <_Balloc>
 80035d2:	4606      	mov	r6, r0
 80035d4:	b928      	cbnz	r0, 80035e2 <_dtoa_r+0x9a2>
 80035d6:	4602      	mov	r2, r0
 80035d8:	f240 21ef 	movw	r1, #751	@ 0x2ef
 80035dc:	4b80      	ldr	r3, [pc, #512]	@ (80037e0 <_dtoa_r+0xba0>)
 80035de:	f7ff bb43 	b.w	8002c68 <_dtoa_r+0x28>
 80035e2:	692a      	ldr	r2, [r5, #16]
 80035e4:	f105 010c 	add.w	r1, r5, #12
 80035e8:	3202      	adds	r2, #2
 80035ea:	0092      	lsls	r2, r2, #2
 80035ec:	300c      	adds	r0, #12
 80035ee:	f000 fe2b 	bl	8004248 <memcpy>
 80035f2:	2201      	movs	r2, #1
 80035f4:	4631      	mov	r1, r6
 80035f6:	4648      	mov	r0, r9
 80035f8:	f000 fbfa 	bl	8003df0 <__lshift>
 80035fc:	462f      	mov	r7, r5
 80035fe:	4605      	mov	r5, r0
 8003600:	f10a 0301 	add.w	r3, sl, #1
 8003604:	9304      	str	r3, [sp, #16]
 8003606:	eb0a 030b 	add.w	r3, sl, fp
 800360a:	930a      	str	r3, [sp, #40]	@ 0x28
 800360c:	9b06      	ldr	r3, [sp, #24]
 800360e:	f003 0301 	and.w	r3, r3, #1
 8003612:	9309      	str	r3, [sp, #36]	@ 0x24
 8003614:	9b04      	ldr	r3, [sp, #16]
 8003616:	4621      	mov	r1, r4
 8003618:	9803      	ldr	r0, [sp, #12]
 800361a:	f103 3bff 	add.w	fp, r3, #4294967295
 800361e:	f7ff fa84 	bl	8002b2a <quorem>
 8003622:	4603      	mov	r3, r0
 8003624:	4639      	mov	r1, r7
 8003626:	3330      	adds	r3, #48	@ 0x30
 8003628:	9006      	str	r0, [sp, #24]
 800362a:	9803      	ldr	r0, [sp, #12]
 800362c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800362e:	f000 fc4b 	bl	8003ec8 <__mcmp>
 8003632:	462a      	mov	r2, r5
 8003634:	9008      	str	r0, [sp, #32]
 8003636:	4621      	mov	r1, r4
 8003638:	4648      	mov	r0, r9
 800363a:	f000 fc61 	bl	8003f00 <__mdiff>
 800363e:	68c2      	ldr	r2, [r0, #12]
 8003640:	4606      	mov	r6, r0
 8003642:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003644:	bb02      	cbnz	r2, 8003688 <_dtoa_r+0xa48>
 8003646:	4601      	mov	r1, r0
 8003648:	9803      	ldr	r0, [sp, #12]
 800364a:	f000 fc3d 	bl	8003ec8 <__mcmp>
 800364e:	4602      	mov	r2, r0
 8003650:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003652:	4631      	mov	r1, r6
 8003654:	4648      	mov	r0, r9
 8003656:	e9cd 320b 	strd	r3, r2, [sp, #44]	@ 0x2c
 800365a:	f000 fa03 	bl	8003a64 <_Bfree>
 800365e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8003660:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8003662:	9e04      	ldr	r6, [sp, #16]
 8003664:	ea42 0103 	orr.w	r1, r2, r3
 8003668:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800366a:	4319      	orrs	r1, r3
 800366c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800366e:	d10d      	bne.n	800368c <_dtoa_r+0xa4c>
 8003670:	2b39      	cmp	r3, #57	@ 0x39
 8003672:	d027      	beq.n	80036c4 <_dtoa_r+0xa84>
 8003674:	9a08      	ldr	r2, [sp, #32]
 8003676:	2a00      	cmp	r2, #0
 8003678:	dd01      	ble.n	800367e <_dtoa_r+0xa3e>
 800367a:	9b06      	ldr	r3, [sp, #24]
 800367c:	3331      	adds	r3, #49	@ 0x31
 800367e:	f88b 3000 	strb.w	r3, [fp]
 8003682:	e52e      	b.n	80030e2 <_dtoa_r+0x4a2>
 8003684:	4628      	mov	r0, r5
 8003686:	e7b9      	b.n	80035fc <_dtoa_r+0x9bc>
 8003688:	2201      	movs	r2, #1
 800368a:	e7e2      	b.n	8003652 <_dtoa_r+0xa12>
 800368c:	9908      	ldr	r1, [sp, #32]
 800368e:	2900      	cmp	r1, #0
 8003690:	db04      	blt.n	800369c <_dtoa_r+0xa5c>
 8003692:	9820      	ldr	r0, [sp, #128]	@ 0x80
 8003694:	4301      	orrs	r1, r0
 8003696:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003698:	4301      	orrs	r1, r0
 800369a:	d120      	bne.n	80036de <_dtoa_r+0xa9e>
 800369c:	2a00      	cmp	r2, #0
 800369e:	ddee      	ble.n	800367e <_dtoa_r+0xa3e>
 80036a0:	2201      	movs	r2, #1
 80036a2:	9903      	ldr	r1, [sp, #12]
 80036a4:	4648      	mov	r0, r9
 80036a6:	9304      	str	r3, [sp, #16]
 80036a8:	f000 fba2 	bl	8003df0 <__lshift>
 80036ac:	4621      	mov	r1, r4
 80036ae:	9003      	str	r0, [sp, #12]
 80036b0:	f000 fc0a 	bl	8003ec8 <__mcmp>
 80036b4:	2800      	cmp	r0, #0
 80036b6:	9b04      	ldr	r3, [sp, #16]
 80036b8:	dc02      	bgt.n	80036c0 <_dtoa_r+0xa80>
 80036ba:	d1e0      	bne.n	800367e <_dtoa_r+0xa3e>
 80036bc:	07da      	lsls	r2, r3, #31
 80036be:	d5de      	bpl.n	800367e <_dtoa_r+0xa3e>
 80036c0:	2b39      	cmp	r3, #57	@ 0x39
 80036c2:	d1da      	bne.n	800367a <_dtoa_r+0xa3a>
 80036c4:	2339      	movs	r3, #57	@ 0x39
 80036c6:	f88b 3000 	strb.w	r3, [fp]
 80036ca:	4633      	mov	r3, r6
 80036cc:	461e      	mov	r6, r3
 80036ce:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80036d2:	3b01      	subs	r3, #1
 80036d4:	2a39      	cmp	r2, #57	@ 0x39
 80036d6:	d04e      	beq.n	8003776 <_dtoa_r+0xb36>
 80036d8:	3201      	adds	r2, #1
 80036da:	701a      	strb	r2, [r3, #0]
 80036dc:	e501      	b.n	80030e2 <_dtoa_r+0x4a2>
 80036de:	2a00      	cmp	r2, #0
 80036e0:	dd03      	ble.n	80036ea <_dtoa_r+0xaaa>
 80036e2:	2b39      	cmp	r3, #57	@ 0x39
 80036e4:	d0ee      	beq.n	80036c4 <_dtoa_r+0xa84>
 80036e6:	3301      	adds	r3, #1
 80036e8:	e7c9      	b.n	800367e <_dtoa_r+0xa3e>
 80036ea:	9a04      	ldr	r2, [sp, #16]
 80036ec:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80036ee:	f802 3c01 	strb.w	r3, [r2, #-1]
 80036f2:	428a      	cmp	r2, r1
 80036f4:	d028      	beq.n	8003748 <_dtoa_r+0xb08>
 80036f6:	2300      	movs	r3, #0
 80036f8:	220a      	movs	r2, #10
 80036fa:	9903      	ldr	r1, [sp, #12]
 80036fc:	4648      	mov	r0, r9
 80036fe:	f000 f9d3 	bl	8003aa8 <__multadd>
 8003702:	42af      	cmp	r7, r5
 8003704:	9003      	str	r0, [sp, #12]
 8003706:	f04f 0300 	mov.w	r3, #0
 800370a:	f04f 020a 	mov.w	r2, #10
 800370e:	4639      	mov	r1, r7
 8003710:	4648      	mov	r0, r9
 8003712:	d107      	bne.n	8003724 <_dtoa_r+0xae4>
 8003714:	f000 f9c8 	bl	8003aa8 <__multadd>
 8003718:	4607      	mov	r7, r0
 800371a:	4605      	mov	r5, r0
 800371c:	9b04      	ldr	r3, [sp, #16]
 800371e:	3301      	adds	r3, #1
 8003720:	9304      	str	r3, [sp, #16]
 8003722:	e777      	b.n	8003614 <_dtoa_r+0x9d4>
 8003724:	f000 f9c0 	bl	8003aa8 <__multadd>
 8003728:	4629      	mov	r1, r5
 800372a:	4607      	mov	r7, r0
 800372c:	2300      	movs	r3, #0
 800372e:	220a      	movs	r2, #10
 8003730:	4648      	mov	r0, r9
 8003732:	f000 f9b9 	bl	8003aa8 <__multadd>
 8003736:	4605      	mov	r5, r0
 8003738:	e7f0      	b.n	800371c <_dtoa_r+0xadc>
 800373a:	f1bb 0f00 	cmp.w	fp, #0
 800373e:	bfcc      	ite	gt
 8003740:	465e      	movgt	r6, fp
 8003742:	2601      	movle	r6, #1
 8003744:	2700      	movs	r7, #0
 8003746:	4456      	add	r6, sl
 8003748:	2201      	movs	r2, #1
 800374a:	9903      	ldr	r1, [sp, #12]
 800374c:	4648      	mov	r0, r9
 800374e:	9304      	str	r3, [sp, #16]
 8003750:	f000 fb4e 	bl	8003df0 <__lshift>
 8003754:	4621      	mov	r1, r4
 8003756:	9003      	str	r0, [sp, #12]
 8003758:	f000 fbb6 	bl	8003ec8 <__mcmp>
 800375c:	2800      	cmp	r0, #0
 800375e:	dcb4      	bgt.n	80036ca <_dtoa_r+0xa8a>
 8003760:	d102      	bne.n	8003768 <_dtoa_r+0xb28>
 8003762:	9b04      	ldr	r3, [sp, #16]
 8003764:	07db      	lsls	r3, r3, #31
 8003766:	d4b0      	bmi.n	80036ca <_dtoa_r+0xa8a>
 8003768:	4633      	mov	r3, r6
 800376a:	461e      	mov	r6, r3
 800376c:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003770:	2a30      	cmp	r2, #48	@ 0x30
 8003772:	d0fa      	beq.n	800376a <_dtoa_r+0xb2a>
 8003774:	e4b5      	b.n	80030e2 <_dtoa_r+0x4a2>
 8003776:	459a      	cmp	sl, r3
 8003778:	d1a8      	bne.n	80036cc <_dtoa_r+0xa8c>
 800377a:	2331      	movs	r3, #49	@ 0x31
 800377c:	f108 0801 	add.w	r8, r8, #1
 8003780:	f88a 3000 	strb.w	r3, [sl]
 8003784:	e4ad      	b.n	80030e2 <_dtoa_r+0x4a2>
 8003786:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8003788:	f8df a058 	ldr.w	sl, [pc, #88]	@ 80037e4 <_dtoa_r+0xba4>
 800378c:	b11b      	cbz	r3, 8003796 <_dtoa_r+0xb56>
 800378e:	f10a 0308 	add.w	r3, sl, #8
 8003792:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8003794:	6013      	str	r3, [r2, #0]
 8003796:	4650      	mov	r0, sl
 8003798:	b017      	add	sp, #92	@ 0x5c
 800379a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800379e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80037a0:	2b01      	cmp	r3, #1
 80037a2:	f77f ae2e 	ble.w	8003402 <_dtoa_r+0x7c2>
 80037a6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80037a8:	930a      	str	r3, [sp, #40]	@ 0x28
 80037aa:	2001      	movs	r0, #1
 80037ac:	e64d      	b.n	800344a <_dtoa_r+0x80a>
 80037ae:	f1bb 0f00 	cmp.w	fp, #0
 80037b2:	f77f aed9 	ble.w	8003568 <_dtoa_r+0x928>
 80037b6:	4656      	mov	r6, sl
 80037b8:	4621      	mov	r1, r4
 80037ba:	9803      	ldr	r0, [sp, #12]
 80037bc:	f7ff f9b5 	bl	8002b2a <quorem>
 80037c0:	f100 0330 	add.w	r3, r0, #48	@ 0x30
 80037c4:	f806 3b01 	strb.w	r3, [r6], #1
 80037c8:	eba6 020a 	sub.w	r2, r6, sl
 80037cc:	4593      	cmp	fp, r2
 80037ce:	ddb4      	ble.n	800373a <_dtoa_r+0xafa>
 80037d0:	2300      	movs	r3, #0
 80037d2:	220a      	movs	r2, #10
 80037d4:	4648      	mov	r0, r9
 80037d6:	9903      	ldr	r1, [sp, #12]
 80037d8:	f000 f966 	bl	8003aa8 <__multadd>
 80037dc:	9003      	str	r0, [sp, #12]
 80037de:	e7eb      	b.n	80037b8 <_dtoa_r+0xb78>
 80037e0:	0800493f 	.word	0x0800493f
 80037e4:	080048c3 	.word	0x080048c3

080037e8 <_free_r>:
 80037e8:	b538      	push	{r3, r4, r5, lr}
 80037ea:	4605      	mov	r5, r0
 80037ec:	2900      	cmp	r1, #0
 80037ee:	d040      	beq.n	8003872 <_free_r+0x8a>
 80037f0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80037f4:	1f0c      	subs	r4, r1, #4
 80037f6:	2b00      	cmp	r3, #0
 80037f8:	bfb8      	it	lt
 80037fa:	18e4      	addlt	r4, r4, r3
 80037fc:	f000 f8e6 	bl	80039cc <__malloc_lock>
 8003800:	4a1c      	ldr	r2, [pc, #112]	@ (8003874 <_free_r+0x8c>)
 8003802:	6813      	ldr	r3, [r2, #0]
 8003804:	b933      	cbnz	r3, 8003814 <_free_r+0x2c>
 8003806:	6063      	str	r3, [r4, #4]
 8003808:	6014      	str	r4, [r2, #0]
 800380a:	4628      	mov	r0, r5
 800380c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003810:	f000 b8e2 	b.w	80039d8 <__malloc_unlock>
 8003814:	42a3      	cmp	r3, r4
 8003816:	d908      	bls.n	800382a <_free_r+0x42>
 8003818:	6820      	ldr	r0, [r4, #0]
 800381a:	1821      	adds	r1, r4, r0
 800381c:	428b      	cmp	r3, r1
 800381e:	bf01      	itttt	eq
 8003820:	6819      	ldreq	r1, [r3, #0]
 8003822:	685b      	ldreq	r3, [r3, #4]
 8003824:	1809      	addeq	r1, r1, r0
 8003826:	6021      	streq	r1, [r4, #0]
 8003828:	e7ed      	b.n	8003806 <_free_r+0x1e>
 800382a:	461a      	mov	r2, r3
 800382c:	685b      	ldr	r3, [r3, #4]
 800382e:	b10b      	cbz	r3, 8003834 <_free_r+0x4c>
 8003830:	42a3      	cmp	r3, r4
 8003832:	d9fa      	bls.n	800382a <_free_r+0x42>
 8003834:	6811      	ldr	r1, [r2, #0]
 8003836:	1850      	adds	r0, r2, r1
 8003838:	42a0      	cmp	r0, r4
 800383a:	d10b      	bne.n	8003854 <_free_r+0x6c>
 800383c:	6820      	ldr	r0, [r4, #0]
 800383e:	4401      	add	r1, r0
 8003840:	1850      	adds	r0, r2, r1
 8003842:	4283      	cmp	r3, r0
 8003844:	6011      	str	r1, [r2, #0]
 8003846:	d1e0      	bne.n	800380a <_free_r+0x22>
 8003848:	6818      	ldr	r0, [r3, #0]
 800384a:	685b      	ldr	r3, [r3, #4]
 800384c:	4408      	add	r0, r1
 800384e:	6010      	str	r0, [r2, #0]
 8003850:	6053      	str	r3, [r2, #4]
 8003852:	e7da      	b.n	800380a <_free_r+0x22>
 8003854:	d902      	bls.n	800385c <_free_r+0x74>
 8003856:	230c      	movs	r3, #12
 8003858:	602b      	str	r3, [r5, #0]
 800385a:	e7d6      	b.n	800380a <_free_r+0x22>
 800385c:	6820      	ldr	r0, [r4, #0]
 800385e:	1821      	adds	r1, r4, r0
 8003860:	428b      	cmp	r3, r1
 8003862:	bf01      	itttt	eq
 8003864:	6819      	ldreq	r1, [r3, #0]
 8003866:	685b      	ldreq	r3, [r3, #4]
 8003868:	1809      	addeq	r1, r1, r0
 800386a:	6021      	streq	r1, [r4, #0]
 800386c:	6063      	str	r3, [r4, #4]
 800386e:	6054      	str	r4, [r2, #4]
 8003870:	e7cb      	b.n	800380a <_free_r+0x22>
 8003872:	bd38      	pop	{r3, r4, r5, pc}
 8003874:	20000370 	.word	0x20000370

08003878 <malloc>:
 8003878:	4b02      	ldr	r3, [pc, #8]	@ (8003884 <malloc+0xc>)
 800387a:	4601      	mov	r1, r0
 800387c:	6818      	ldr	r0, [r3, #0]
 800387e:	f000 b825 	b.w	80038cc <_malloc_r>
 8003882:	bf00      	nop
 8003884:	2000002c 	.word	0x2000002c

08003888 <sbrk_aligned>:
 8003888:	b570      	push	{r4, r5, r6, lr}
 800388a:	4e0f      	ldr	r6, [pc, #60]	@ (80038c8 <sbrk_aligned+0x40>)
 800388c:	460c      	mov	r4, r1
 800388e:	6831      	ldr	r1, [r6, #0]
 8003890:	4605      	mov	r5, r0
 8003892:	b911      	cbnz	r1, 800389a <sbrk_aligned+0x12>
 8003894:	f000 fcc8 	bl	8004228 <_sbrk_r>
 8003898:	6030      	str	r0, [r6, #0]
 800389a:	4621      	mov	r1, r4
 800389c:	4628      	mov	r0, r5
 800389e:	f000 fcc3 	bl	8004228 <_sbrk_r>
 80038a2:	1c43      	adds	r3, r0, #1
 80038a4:	d103      	bne.n	80038ae <sbrk_aligned+0x26>
 80038a6:	f04f 34ff 	mov.w	r4, #4294967295
 80038aa:	4620      	mov	r0, r4
 80038ac:	bd70      	pop	{r4, r5, r6, pc}
 80038ae:	1cc4      	adds	r4, r0, #3
 80038b0:	f024 0403 	bic.w	r4, r4, #3
 80038b4:	42a0      	cmp	r0, r4
 80038b6:	d0f8      	beq.n	80038aa <sbrk_aligned+0x22>
 80038b8:	1a21      	subs	r1, r4, r0
 80038ba:	4628      	mov	r0, r5
 80038bc:	f000 fcb4 	bl	8004228 <_sbrk_r>
 80038c0:	3001      	adds	r0, #1
 80038c2:	d1f2      	bne.n	80038aa <sbrk_aligned+0x22>
 80038c4:	e7ef      	b.n	80038a6 <sbrk_aligned+0x1e>
 80038c6:	bf00      	nop
 80038c8:	2000036c 	.word	0x2000036c

080038cc <_malloc_r>:
 80038cc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80038d0:	1ccd      	adds	r5, r1, #3
 80038d2:	f025 0503 	bic.w	r5, r5, #3
 80038d6:	3508      	adds	r5, #8
 80038d8:	2d0c      	cmp	r5, #12
 80038da:	bf38      	it	cc
 80038dc:	250c      	movcc	r5, #12
 80038de:	2d00      	cmp	r5, #0
 80038e0:	4606      	mov	r6, r0
 80038e2:	db01      	blt.n	80038e8 <_malloc_r+0x1c>
 80038e4:	42a9      	cmp	r1, r5
 80038e6:	d904      	bls.n	80038f2 <_malloc_r+0x26>
 80038e8:	230c      	movs	r3, #12
 80038ea:	6033      	str	r3, [r6, #0]
 80038ec:	2000      	movs	r0, #0
 80038ee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80038f2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80039c8 <_malloc_r+0xfc>
 80038f6:	f000 f869 	bl	80039cc <__malloc_lock>
 80038fa:	f8d8 3000 	ldr.w	r3, [r8]
 80038fe:	461c      	mov	r4, r3
 8003900:	bb44      	cbnz	r4, 8003954 <_malloc_r+0x88>
 8003902:	4629      	mov	r1, r5
 8003904:	4630      	mov	r0, r6
 8003906:	f7ff ffbf 	bl	8003888 <sbrk_aligned>
 800390a:	1c43      	adds	r3, r0, #1
 800390c:	4604      	mov	r4, r0
 800390e:	d158      	bne.n	80039c2 <_malloc_r+0xf6>
 8003910:	f8d8 4000 	ldr.w	r4, [r8]
 8003914:	4627      	mov	r7, r4
 8003916:	2f00      	cmp	r7, #0
 8003918:	d143      	bne.n	80039a2 <_malloc_r+0xd6>
 800391a:	2c00      	cmp	r4, #0
 800391c:	d04b      	beq.n	80039b6 <_malloc_r+0xea>
 800391e:	6823      	ldr	r3, [r4, #0]
 8003920:	4639      	mov	r1, r7
 8003922:	4630      	mov	r0, r6
 8003924:	eb04 0903 	add.w	r9, r4, r3
 8003928:	f000 fc7e 	bl	8004228 <_sbrk_r>
 800392c:	4581      	cmp	r9, r0
 800392e:	d142      	bne.n	80039b6 <_malloc_r+0xea>
 8003930:	6821      	ldr	r1, [r4, #0]
 8003932:	4630      	mov	r0, r6
 8003934:	1a6d      	subs	r5, r5, r1
 8003936:	4629      	mov	r1, r5
 8003938:	f7ff ffa6 	bl	8003888 <sbrk_aligned>
 800393c:	3001      	adds	r0, #1
 800393e:	d03a      	beq.n	80039b6 <_malloc_r+0xea>
 8003940:	6823      	ldr	r3, [r4, #0]
 8003942:	442b      	add	r3, r5
 8003944:	6023      	str	r3, [r4, #0]
 8003946:	f8d8 3000 	ldr.w	r3, [r8]
 800394a:	685a      	ldr	r2, [r3, #4]
 800394c:	bb62      	cbnz	r2, 80039a8 <_malloc_r+0xdc>
 800394e:	f8c8 7000 	str.w	r7, [r8]
 8003952:	e00f      	b.n	8003974 <_malloc_r+0xa8>
 8003954:	6822      	ldr	r2, [r4, #0]
 8003956:	1b52      	subs	r2, r2, r5
 8003958:	d420      	bmi.n	800399c <_malloc_r+0xd0>
 800395a:	2a0b      	cmp	r2, #11
 800395c:	d917      	bls.n	800398e <_malloc_r+0xc2>
 800395e:	1961      	adds	r1, r4, r5
 8003960:	42a3      	cmp	r3, r4
 8003962:	6025      	str	r5, [r4, #0]
 8003964:	bf18      	it	ne
 8003966:	6059      	strne	r1, [r3, #4]
 8003968:	6863      	ldr	r3, [r4, #4]
 800396a:	bf08      	it	eq
 800396c:	f8c8 1000 	streq.w	r1, [r8]
 8003970:	5162      	str	r2, [r4, r5]
 8003972:	604b      	str	r3, [r1, #4]
 8003974:	4630      	mov	r0, r6
 8003976:	f000 f82f 	bl	80039d8 <__malloc_unlock>
 800397a:	f104 000b 	add.w	r0, r4, #11
 800397e:	1d23      	adds	r3, r4, #4
 8003980:	f020 0007 	bic.w	r0, r0, #7
 8003984:	1ac2      	subs	r2, r0, r3
 8003986:	bf1c      	itt	ne
 8003988:	1a1b      	subne	r3, r3, r0
 800398a:	50a3      	strne	r3, [r4, r2]
 800398c:	e7af      	b.n	80038ee <_malloc_r+0x22>
 800398e:	6862      	ldr	r2, [r4, #4]
 8003990:	42a3      	cmp	r3, r4
 8003992:	bf0c      	ite	eq
 8003994:	f8c8 2000 	streq.w	r2, [r8]
 8003998:	605a      	strne	r2, [r3, #4]
 800399a:	e7eb      	b.n	8003974 <_malloc_r+0xa8>
 800399c:	4623      	mov	r3, r4
 800399e:	6864      	ldr	r4, [r4, #4]
 80039a0:	e7ae      	b.n	8003900 <_malloc_r+0x34>
 80039a2:	463c      	mov	r4, r7
 80039a4:	687f      	ldr	r7, [r7, #4]
 80039a6:	e7b6      	b.n	8003916 <_malloc_r+0x4a>
 80039a8:	461a      	mov	r2, r3
 80039aa:	685b      	ldr	r3, [r3, #4]
 80039ac:	42a3      	cmp	r3, r4
 80039ae:	d1fb      	bne.n	80039a8 <_malloc_r+0xdc>
 80039b0:	2300      	movs	r3, #0
 80039b2:	6053      	str	r3, [r2, #4]
 80039b4:	e7de      	b.n	8003974 <_malloc_r+0xa8>
 80039b6:	230c      	movs	r3, #12
 80039b8:	4630      	mov	r0, r6
 80039ba:	6033      	str	r3, [r6, #0]
 80039bc:	f000 f80c 	bl	80039d8 <__malloc_unlock>
 80039c0:	e794      	b.n	80038ec <_malloc_r+0x20>
 80039c2:	6005      	str	r5, [r0, #0]
 80039c4:	e7d6      	b.n	8003974 <_malloc_r+0xa8>
 80039c6:	bf00      	nop
 80039c8:	20000370 	.word	0x20000370

080039cc <__malloc_lock>:
 80039cc:	4801      	ldr	r0, [pc, #4]	@ (80039d4 <__malloc_lock+0x8>)
 80039ce:	f7ff b89c 	b.w	8002b0a <__retarget_lock_acquire_recursive>
 80039d2:	bf00      	nop
 80039d4:	20000368 	.word	0x20000368

080039d8 <__malloc_unlock>:
 80039d8:	4801      	ldr	r0, [pc, #4]	@ (80039e0 <__malloc_unlock+0x8>)
 80039da:	f7ff b897 	b.w	8002b0c <__retarget_lock_release_recursive>
 80039de:	bf00      	nop
 80039e0:	20000368 	.word	0x20000368

080039e4 <_Balloc>:
 80039e4:	b570      	push	{r4, r5, r6, lr}
 80039e6:	69c6      	ldr	r6, [r0, #28]
 80039e8:	4604      	mov	r4, r0
 80039ea:	460d      	mov	r5, r1
 80039ec:	b976      	cbnz	r6, 8003a0c <_Balloc+0x28>
 80039ee:	2010      	movs	r0, #16
 80039f0:	f7ff ff42 	bl	8003878 <malloc>
 80039f4:	4602      	mov	r2, r0
 80039f6:	61e0      	str	r0, [r4, #28]
 80039f8:	b920      	cbnz	r0, 8003a04 <_Balloc+0x20>
 80039fa:	216b      	movs	r1, #107	@ 0x6b
 80039fc:	4b17      	ldr	r3, [pc, #92]	@ (8003a5c <_Balloc+0x78>)
 80039fe:	4818      	ldr	r0, [pc, #96]	@ (8003a60 <_Balloc+0x7c>)
 8003a00:	f000 fc30 	bl	8004264 <__assert_func>
 8003a04:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003a08:	6006      	str	r6, [r0, #0]
 8003a0a:	60c6      	str	r6, [r0, #12]
 8003a0c:	69e6      	ldr	r6, [r4, #28]
 8003a0e:	68f3      	ldr	r3, [r6, #12]
 8003a10:	b183      	cbz	r3, 8003a34 <_Balloc+0x50>
 8003a12:	69e3      	ldr	r3, [r4, #28]
 8003a14:	68db      	ldr	r3, [r3, #12]
 8003a16:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003a1a:	b9b8      	cbnz	r0, 8003a4c <_Balloc+0x68>
 8003a1c:	2101      	movs	r1, #1
 8003a1e:	fa01 f605 	lsl.w	r6, r1, r5
 8003a22:	1d72      	adds	r2, r6, #5
 8003a24:	4620      	mov	r0, r4
 8003a26:	0092      	lsls	r2, r2, #2
 8003a28:	f000 fc3a 	bl	80042a0 <_calloc_r>
 8003a2c:	b160      	cbz	r0, 8003a48 <_Balloc+0x64>
 8003a2e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003a32:	e00e      	b.n	8003a52 <_Balloc+0x6e>
 8003a34:	2221      	movs	r2, #33	@ 0x21
 8003a36:	2104      	movs	r1, #4
 8003a38:	4620      	mov	r0, r4
 8003a3a:	f000 fc31 	bl	80042a0 <_calloc_r>
 8003a3e:	69e3      	ldr	r3, [r4, #28]
 8003a40:	60f0      	str	r0, [r6, #12]
 8003a42:	68db      	ldr	r3, [r3, #12]
 8003a44:	2b00      	cmp	r3, #0
 8003a46:	d1e4      	bne.n	8003a12 <_Balloc+0x2e>
 8003a48:	2000      	movs	r0, #0
 8003a4a:	bd70      	pop	{r4, r5, r6, pc}
 8003a4c:	6802      	ldr	r2, [r0, #0]
 8003a4e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003a52:	2300      	movs	r3, #0
 8003a54:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003a58:	e7f7      	b.n	8003a4a <_Balloc+0x66>
 8003a5a:	bf00      	nop
 8003a5c:	080048d0 	.word	0x080048d0
 8003a60:	08004950 	.word	0x08004950

08003a64 <_Bfree>:
 8003a64:	b570      	push	{r4, r5, r6, lr}
 8003a66:	69c6      	ldr	r6, [r0, #28]
 8003a68:	4605      	mov	r5, r0
 8003a6a:	460c      	mov	r4, r1
 8003a6c:	b976      	cbnz	r6, 8003a8c <_Bfree+0x28>
 8003a6e:	2010      	movs	r0, #16
 8003a70:	f7ff ff02 	bl	8003878 <malloc>
 8003a74:	4602      	mov	r2, r0
 8003a76:	61e8      	str	r0, [r5, #28]
 8003a78:	b920      	cbnz	r0, 8003a84 <_Bfree+0x20>
 8003a7a:	218f      	movs	r1, #143	@ 0x8f
 8003a7c:	4b08      	ldr	r3, [pc, #32]	@ (8003aa0 <_Bfree+0x3c>)
 8003a7e:	4809      	ldr	r0, [pc, #36]	@ (8003aa4 <_Bfree+0x40>)
 8003a80:	f000 fbf0 	bl	8004264 <__assert_func>
 8003a84:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003a88:	6006      	str	r6, [r0, #0]
 8003a8a:	60c6      	str	r6, [r0, #12]
 8003a8c:	b13c      	cbz	r4, 8003a9e <_Bfree+0x3a>
 8003a8e:	69eb      	ldr	r3, [r5, #28]
 8003a90:	6862      	ldr	r2, [r4, #4]
 8003a92:	68db      	ldr	r3, [r3, #12]
 8003a94:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003a98:	6021      	str	r1, [r4, #0]
 8003a9a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003a9e:	bd70      	pop	{r4, r5, r6, pc}
 8003aa0:	080048d0 	.word	0x080048d0
 8003aa4:	08004950 	.word	0x08004950

08003aa8 <__multadd>:
 8003aa8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003aac:	4607      	mov	r7, r0
 8003aae:	460c      	mov	r4, r1
 8003ab0:	461e      	mov	r6, r3
 8003ab2:	2000      	movs	r0, #0
 8003ab4:	690d      	ldr	r5, [r1, #16]
 8003ab6:	f101 0c14 	add.w	ip, r1, #20
 8003aba:	f8dc 3000 	ldr.w	r3, [ip]
 8003abe:	3001      	adds	r0, #1
 8003ac0:	b299      	uxth	r1, r3
 8003ac2:	fb02 6101 	mla	r1, r2, r1, r6
 8003ac6:	0c1e      	lsrs	r6, r3, #16
 8003ac8:	0c0b      	lsrs	r3, r1, #16
 8003aca:	fb02 3306 	mla	r3, r2, r6, r3
 8003ace:	b289      	uxth	r1, r1
 8003ad0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003ad4:	4285      	cmp	r5, r0
 8003ad6:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8003ada:	f84c 1b04 	str.w	r1, [ip], #4
 8003ade:	dcec      	bgt.n	8003aba <__multadd+0x12>
 8003ae0:	b30e      	cbz	r6, 8003b26 <__multadd+0x7e>
 8003ae2:	68a3      	ldr	r3, [r4, #8]
 8003ae4:	42ab      	cmp	r3, r5
 8003ae6:	dc19      	bgt.n	8003b1c <__multadd+0x74>
 8003ae8:	6861      	ldr	r1, [r4, #4]
 8003aea:	4638      	mov	r0, r7
 8003aec:	3101      	adds	r1, #1
 8003aee:	f7ff ff79 	bl	80039e4 <_Balloc>
 8003af2:	4680      	mov	r8, r0
 8003af4:	b928      	cbnz	r0, 8003b02 <__multadd+0x5a>
 8003af6:	4602      	mov	r2, r0
 8003af8:	21ba      	movs	r1, #186	@ 0xba
 8003afa:	4b0c      	ldr	r3, [pc, #48]	@ (8003b2c <__multadd+0x84>)
 8003afc:	480c      	ldr	r0, [pc, #48]	@ (8003b30 <__multadd+0x88>)
 8003afe:	f000 fbb1 	bl	8004264 <__assert_func>
 8003b02:	6922      	ldr	r2, [r4, #16]
 8003b04:	f104 010c 	add.w	r1, r4, #12
 8003b08:	3202      	adds	r2, #2
 8003b0a:	0092      	lsls	r2, r2, #2
 8003b0c:	300c      	adds	r0, #12
 8003b0e:	f000 fb9b 	bl	8004248 <memcpy>
 8003b12:	4621      	mov	r1, r4
 8003b14:	4638      	mov	r0, r7
 8003b16:	f7ff ffa5 	bl	8003a64 <_Bfree>
 8003b1a:	4644      	mov	r4, r8
 8003b1c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003b20:	3501      	adds	r5, #1
 8003b22:	615e      	str	r6, [r3, #20]
 8003b24:	6125      	str	r5, [r4, #16]
 8003b26:	4620      	mov	r0, r4
 8003b28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003b2c:	0800493f 	.word	0x0800493f
 8003b30:	08004950 	.word	0x08004950

08003b34 <__hi0bits>:
 8003b34:	4603      	mov	r3, r0
 8003b36:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8003b3a:	bf3a      	itte	cc
 8003b3c:	0403      	lslcc	r3, r0, #16
 8003b3e:	2010      	movcc	r0, #16
 8003b40:	2000      	movcs	r0, #0
 8003b42:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003b46:	bf3c      	itt	cc
 8003b48:	021b      	lslcc	r3, r3, #8
 8003b4a:	3008      	addcc	r0, #8
 8003b4c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8003b50:	bf3c      	itt	cc
 8003b52:	011b      	lslcc	r3, r3, #4
 8003b54:	3004      	addcc	r0, #4
 8003b56:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003b5a:	bf3c      	itt	cc
 8003b5c:	009b      	lslcc	r3, r3, #2
 8003b5e:	3002      	addcc	r0, #2
 8003b60:	2b00      	cmp	r3, #0
 8003b62:	db05      	blt.n	8003b70 <__hi0bits+0x3c>
 8003b64:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8003b68:	f100 0001 	add.w	r0, r0, #1
 8003b6c:	bf08      	it	eq
 8003b6e:	2020      	moveq	r0, #32
 8003b70:	4770      	bx	lr

08003b72 <__lo0bits>:
 8003b72:	6803      	ldr	r3, [r0, #0]
 8003b74:	4602      	mov	r2, r0
 8003b76:	f013 0007 	ands.w	r0, r3, #7
 8003b7a:	d00b      	beq.n	8003b94 <__lo0bits+0x22>
 8003b7c:	07d9      	lsls	r1, r3, #31
 8003b7e:	d421      	bmi.n	8003bc4 <__lo0bits+0x52>
 8003b80:	0798      	lsls	r0, r3, #30
 8003b82:	bf49      	itett	mi
 8003b84:	085b      	lsrmi	r3, r3, #1
 8003b86:	089b      	lsrpl	r3, r3, #2
 8003b88:	2001      	movmi	r0, #1
 8003b8a:	6013      	strmi	r3, [r2, #0]
 8003b8c:	bf5c      	itt	pl
 8003b8e:	2002      	movpl	r0, #2
 8003b90:	6013      	strpl	r3, [r2, #0]
 8003b92:	4770      	bx	lr
 8003b94:	b299      	uxth	r1, r3
 8003b96:	b909      	cbnz	r1, 8003b9c <__lo0bits+0x2a>
 8003b98:	2010      	movs	r0, #16
 8003b9a:	0c1b      	lsrs	r3, r3, #16
 8003b9c:	b2d9      	uxtb	r1, r3
 8003b9e:	b909      	cbnz	r1, 8003ba4 <__lo0bits+0x32>
 8003ba0:	3008      	adds	r0, #8
 8003ba2:	0a1b      	lsrs	r3, r3, #8
 8003ba4:	0719      	lsls	r1, r3, #28
 8003ba6:	bf04      	itt	eq
 8003ba8:	091b      	lsreq	r3, r3, #4
 8003baa:	3004      	addeq	r0, #4
 8003bac:	0799      	lsls	r1, r3, #30
 8003bae:	bf04      	itt	eq
 8003bb0:	089b      	lsreq	r3, r3, #2
 8003bb2:	3002      	addeq	r0, #2
 8003bb4:	07d9      	lsls	r1, r3, #31
 8003bb6:	d403      	bmi.n	8003bc0 <__lo0bits+0x4e>
 8003bb8:	085b      	lsrs	r3, r3, #1
 8003bba:	f100 0001 	add.w	r0, r0, #1
 8003bbe:	d003      	beq.n	8003bc8 <__lo0bits+0x56>
 8003bc0:	6013      	str	r3, [r2, #0]
 8003bc2:	4770      	bx	lr
 8003bc4:	2000      	movs	r0, #0
 8003bc6:	4770      	bx	lr
 8003bc8:	2020      	movs	r0, #32
 8003bca:	4770      	bx	lr

08003bcc <__i2b>:
 8003bcc:	b510      	push	{r4, lr}
 8003bce:	460c      	mov	r4, r1
 8003bd0:	2101      	movs	r1, #1
 8003bd2:	f7ff ff07 	bl	80039e4 <_Balloc>
 8003bd6:	4602      	mov	r2, r0
 8003bd8:	b928      	cbnz	r0, 8003be6 <__i2b+0x1a>
 8003bda:	f240 1145 	movw	r1, #325	@ 0x145
 8003bde:	4b04      	ldr	r3, [pc, #16]	@ (8003bf0 <__i2b+0x24>)
 8003be0:	4804      	ldr	r0, [pc, #16]	@ (8003bf4 <__i2b+0x28>)
 8003be2:	f000 fb3f 	bl	8004264 <__assert_func>
 8003be6:	2301      	movs	r3, #1
 8003be8:	6144      	str	r4, [r0, #20]
 8003bea:	6103      	str	r3, [r0, #16]
 8003bec:	bd10      	pop	{r4, pc}
 8003bee:	bf00      	nop
 8003bf0:	0800493f 	.word	0x0800493f
 8003bf4:	08004950 	.word	0x08004950

08003bf8 <__multiply>:
 8003bf8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003bfc:	4617      	mov	r7, r2
 8003bfe:	690a      	ldr	r2, [r1, #16]
 8003c00:	693b      	ldr	r3, [r7, #16]
 8003c02:	4689      	mov	r9, r1
 8003c04:	429a      	cmp	r2, r3
 8003c06:	bfa2      	ittt	ge
 8003c08:	463b      	movge	r3, r7
 8003c0a:	460f      	movge	r7, r1
 8003c0c:	4699      	movge	r9, r3
 8003c0e:	693d      	ldr	r5, [r7, #16]
 8003c10:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8003c14:	68bb      	ldr	r3, [r7, #8]
 8003c16:	6879      	ldr	r1, [r7, #4]
 8003c18:	eb05 060a 	add.w	r6, r5, sl
 8003c1c:	42b3      	cmp	r3, r6
 8003c1e:	b085      	sub	sp, #20
 8003c20:	bfb8      	it	lt
 8003c22:	3101      	addlt	r1, #1
 8003c24:	f7ff fede 	bl	80039e4 <_Balloc>
 8003c28:	b930      	cbnz	r0, 8003c38 <__multiply+0x40>
 8003c2a:	4602      	mov	r2, r0
 8003c2c:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8003c30:	4b40      	ldr	r3, [pc, #256]	@ (8003d34 <__multiply+0x13c>)
 8003c32:	4841      	ldr	r0, [pc, #260]	@ (8003d38 <__multiply+0x140>)
 8003c34:	f000 fb16 	bl	8004264 <__assert_func>
 8003c38:	f100 0414 	add.w	r4, r0, #20
 8003c3c:	4623      	mov	r3, r4
 8003c3e:	2200      	movs	r2, #0
 8003c40:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 8003c44:	4573      	cmp	r3, lr
 8003c46:	d320      	bcc.n	8003c8a <__multiply+0x92>
 8003c48:	f107 0814 	add.w	r8, r7, #20
 8003c4c:	f109 0114 	add.w	r1, r9, #20
 8003c50:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 8003c54:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 8003c58:	9302      	str	r3, [sp, #8]
 8003c5a:	1beb      	subs	r3, r5, r7
 8003c5c:	3b15      	subs	r3, #21
 8003c5e:	f023 0303 	bic.w	r3, r3, #3
 8003c62:	3304      	adds	r3, #4
 8003c64:	3715      	adds	r7, #21
 8003c66:	42bd      	cmp	r5, r7
 8003c68:	bf38      	it	cc
 8003c6a:	2304      	movcc	r3, #4
 8003c6c:	9301      	str	r3, [sp, #4]
 8003c6e:	9b02      	ldr	r3, [sp, #8]
 8003c70:	9103      	str	r1, [sp, #12]
 8003c72:	428b      	cmp	r3, r1
 8003c74:	d80c      	bhi.n	8003c90 <__multiply+0x98>
 8003c76:	2e00      	cmp	r6, #0
 8003c78:	dd03      	ble.n	8003c82 <__multiply+0x8a>
 8003c7a:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8003c7e:	2b00      	cmp	r3, #0
 8003c80:	d055      	beq.n	8003d2e <__multiply+0x136>
 8003c82:	6106      	str	r6, [r0, #16]
 8003c84:	b005      	add	sp, #20
 8003c86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003c8a:	f843 2b04 	str.w	r2, [r3], #4
 8003c8e:	e7d9      	b.n	8003c44 <__multiply+0x4c>
 8003c90:	f8b1 a000 	ldrh.w	sl, [r1]
 8003c94:	f1ba 0f00 	cmp.w	sl, #0
 8003c98:	d01f      	beq.n	8003cda <__multiply+0xe2>
 8003c9a:	46c4      	mov	ip, r8
 8003c9c:	46a1      	mov	r9, r4
 8003c9e:	2700      	movs	r7, #0
 8003ca0:	f85c 2b04 	ldr.w	r2, [ip], #4
 8003ca4:	f8d9 3000 	ldr.w	r3, [r9]
 8003ca8:	fa1f fb82 	uxth.w	fp, r2
 8003cac:	b29b      	uxth	r3, r3
 8003cae:	fb0a 330b 	mla	r3, sl, fp, r3
 8003cb2:	443b      	add	r3, r7
 8003cb4:	f8d9 7000 	ldr.w	r7, [r9]
 8003cb8:	0c12      	lsrs	r2, r2, #16
 8003cba:	0c3f      	lsrs	r7, r7, #16
 8003cbc:	fb0a 7202 	mla	r2, sl, r2, r7
 8003cc0:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 8003cc4:	b29b      	uxth	r3, r3
 8003cc6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003cca:	4565      	cmp	r5, ip
 8003ccc:	ea4f 4712 	mov.w	r7, r2, lsr #16
 8003cd0:	f849 3b04 	str.w	r3, [r9], #4
 8003cd4:	d8e4      	bhi.n	8003ca0 <__multiply+0xa8>
 8003cd6:	9b01      	ldr	r3, [sp, #4]
 8003cd8:	50e7      	str	r7, [r4, r3]
 8003cda:	9b03      	ldr	r3, [sp, #12]
 8003cdc:	3104      	adds	r1, #4
 8003cde:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 8003ce2:	f1b9 0f00 	cmp.w	r9, #0
 8003ce6:	d020      	beq.n	8003d2a <__multiply+0x132>
 8003ce8:	4647      	mov	r7, r8
 8003cea:	46a4      	mov	ip, r4
 8003cec:	f04f 0a00 	mov.w	sl, #0
 8003cf0:	6823      	ldr	r3, [r4, #0]
 8003cf2:	f8b7 b000 	ldrh.w	fp, [r7]
 8003cf6:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 8003cfa:	b29b      	uxth	r3, r3
 8003cfc:	fb09 220b 	mla	r2, r9, fp, r2
 8003d00:	4452      	add	r2, sl
 8003d02:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003d06:	f84c 3b04 	str.w	r3, [ip], #4
 8003d0a:	f857 3b04 	ldr.w	r3, [r7], #4
 8003d0e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003d12:	f8bc 3000 	ldrh.w	r3, [ip]
 8003d16:	42bd      	cmp	r5, r7
 8003d18:	fb09 330a 	mla	r3, r9, sl, r3
 8003d1c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 8003d20:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003d24:	d8e5      	bhi.n	8003cf2 <__multiply+0xfa>
 8003d26:	9a01      	ldr	r2, [sp, #4]
 8003d28:	50a3      	str	r3, [r4, r2]
 8003d2a:	3404      	adds	r4, #4
 8003d2c:	e79f      	b.n	8003c6e <__multiply+0x76>
 8003d2e:	3e01      	subs	r6, #1
 8003d30:	e7a1      	b.n	8003c76 <__multiply+0x7e>
 8003d32:	bf00      	nop
 8003d34:	0800493f 	.word	0x0800493f
 8003d38:	08004950 	.word	0x08004950

08003d3c <__pow5mult>:
 8003d3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003d40:	4615      	mov	r5, r2
 8003d42:	f012 0203 	ands.w	r2, r2, #3
 8003d46:	4607      	mov	r7, r0
 8003d48:	460e      	mov	r6, r1
 8003d4a:	d007      	beq.n	8003d5c <__pow5mult+0x20>
 8003d4c:	4c25      	ldr	r4, [pc, #148]	@ (8003de4 <__pow5mult+0xa8>)
 8003d4e:	3a01      	subs	r2, #1
 8003d50:	2300      	movs	r3, #0
 8003d52:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003d56:	f7ff fea7 	bl	8003aa8 <__multadd>
 8003d5a:	4606      	mov	r6, r0
 8003d5c:	10ad      	asrs	r5, r5, #2
 8003d5e:	d03d      	beq.n	8003ddc <__pow5mult+0xa0>
 8003d60:	69fc      	ldr	r4, [r7, #28]
 8003d62:	b97c      	cbnz	r4, 8003d84 <__pow5mult+0x48>
 8003d64:	2010      	movs	r0, #16
 8003d66:	f7ff fd87 	bl	8003878 <malloc>
 8003d6a:	4602      	mov	r2, r0
 8003d6c:	61f8      	str	r0, [r7, #28]
 8003d6e:	b928      	cbnz	r0, 8003d7c <__pow5mult+0x40>
 8003d70:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8003d74:	4b1c      	ldr	r3, [pc, #112]	@ (8003de8 <__pow5mult+0xac>)
 8003d76:	481d      	ldr	r0, [pc, #116]	@ (8003dec <__pow5mult+0xb0>)
 8003d78:	f000 fa74 	bl	8004264 <__assert_func>
 8003d7c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003d80:	6004      	str	r4, [r0, #0]
 8003d82:	60c4      	str	r4, [r0, #12]
 8003d84:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8003d88:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003d8c:	b94c      	cbnz	r4, 8003da2 <__pow5mult+0x66>
 8003d8e:	f240 2171 	movw	r1, #625	@ 0x271
 8003d92:	4638      	mov	r0, r7
 8003d94:	f7ff ff1a 	bl	8003bcc <__i2b>
 8003d98:	2300      	movs	r3, #0
 8003d9a:	4604      	mov	r4, r0
 8003d9c:	f8c8 0008 	str.w	r0, [r8, #8]
 8003da0:	6003      	str	r3, [r0, #0]
 8003da2:	f04f 0900 	mov.w	r9, #0
 8003da6:	07eb      	lsls	r3, r5, #31
 8003da8:	d50a      	bpl.n	8003dc0 <__pow5mult+0x84>
 8003daa:	4631      	mov	r1, r6
 8003dac:	4622      	mov	r2, r4
 8003dae:	4638      	mov	r0, r7
 8003db0:	f7ff ff22 	bl	8003bf8 <__multiply>
 8003db4:	4680      	mov	r8, r0
 8003db6:	4631      	mov	r1, r6
 8003db8:	4638      	mov	r0, r7
 8003dba:	f7ff fe53 	bl	8003a64 <_Bfree>
 8003dbe:	4646      	mov	r6, r8
 8003dc0:	106d      	asrs	r5, r5, #1
 8003dc2:	d00b      	beq.n	8003ddc <__pow5mult+0xa0>
 8003dc4:	6820      	ldr	r0, [r4, #0]
 8003dc6:	b938      	cbnz	r0, 8003dd8 <__pow5mult+0x9c>
 8003dc8:	4622      	mov	r2, r4
 8003dca:	4621      	mov	r1, r4
 8003dcc:	4638      	mov	r0, r7
 8003dce:	f7ff ff13 	bl	8003bf8 <__multiply>
 8003dd2:	6020      	str	r0, [r4, #0]
 8003dd4:	f8c0 9000 	str.w	r9, [r0]
 8003dd8:	4604      	mov	r4, r0
 8003dda:	e7e4      	b.n	8003da6 <__pow5mult+0x6a>
 8003ddc:	4630      	mov	r0, r6
 8003dde:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003de2:	bf00      	nop
 8003de4:	08004a00 	.word	0x08004a00
 8003de8:	080048d0 	.word	0x080048d0
 8003dec:	08004950 	.word	0x08004950

08003df0 <__lshift>:
 8003df0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003df4:	460c      	mov	r4, r1
 8003df6:	4607      	mov	r7, r0
 8003df8:	4691      	mov	r9, r2
 8003dfa:	6923      	ldr	r3, [r4, #16]
 8003dfc:	6849      	ldr	r1, [r1, #4]
 8003dfe:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003e02:	68a3      	ldr	r3, [r4, #8]
 8003e04:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003e08:	f108 0601 	add.w	r6, r8, #1
 8003e0c:	42b3      	cmp	r3, r6
 8003e0e:	db0b      	blt.n	8003e28 <__lshift+0x38>
 8003e10:	4638      	mov	r0, r7
 8003e12:	f7ff fde7 	bl	80039e4 <_Balloc>
 8003e16:	4605      	mov	r5, r0
 8003e18:	b948      	cbnz	r0, 8003e2e <__lshift+0x3e>
 8003e1a:	4602      	mov	r2, r0
 8003e1c:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8003e20:	4b27      	ldr	r3, [pc, #156]	@ (8003ec0 <__lshift+0xd0>)
 8003e22:	4828      	ldr	r0, [pc, #160]	@ (8003ec4 <__lshift+0xd4>)
 8003e24:	f000 fa1e 	bl	8004264 <__assert_func>
 8003e28:	3101      	adds	r1, #1
 8003e2a:	005b      	lsls	r3, r3, #1
 8003e2c:	e7ee      	b.n	8003e0c <__lshift+0x1c>
 8003e2e:	2300      	movs	r3, #0
 8003e30:	f100 0114 	add.w	r1, r0, #20
 8003e34:	f100 0210 	add.w	r2, r0, #16
 8003e38:	4618      	mov	r0, r3
 8003e3a:	4553      	cmp	r3, sl
 8003e3c:	db33      	blt.n	8003ea6 <__lshift+0xb6>
 8003e3e:	6920      	ldr	r0, [r4, #16]
 8003e40:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003e44:	f104 0314 	add.w	r3, r4, #20
 8003e48:	f019 091f 	ands.w	r9, r9, #31
 8003e4c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003e50:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003e54:	d02b      	beq.n	8003eae <__lshift+0xbe>
 8003e56:	468a      	mov	sl, r1
 8003e58:	2200      	movs	r2, #0
 8003e5a:	f1c9 0e20 	rsb	lr, r9, #32
 8003e5e:	6818      	ldr	r0, [r3, #0]
 8003e60:	fa00 f009 	lsl.w	r0, r0, r9
 8003e64:	4310      	orrs	r0, r2
 8003e66:	f84a 0b04 	str.w	r0, [sl], #4
 8003e6a:	f853 2b04 	ldr.w	r2, [r3], #4
 8003e6e:	459c      	cmp	ip, r3
 8003e70:	fa22 f20e 	lsr.w	r2, r2, lr
 8003e74:	d8f3      	bhi.n	8003e5e <__lshift+0x6e>
 8003e76:	ebac 0304 	sub.w	r3, ip, r4
 8003e7a:	3b15      	subs	r3, #21
 8003e7c:	f023 0303 	bic.w	r3, r3, #3
 8003e80:	3304      	adds	r3, #4
 8003e82:	f104 0015 	add.w	r0, r4, #21
 8003e86:	4560      	cmp	r0, ip
 8003e88:	bf88      	it	hi
 8003e8a:	2304      	movhi	r3, #4
 8003e8c:	50ca      	str	r2, [r1, r3]
 8003e8e:	b10a      	cbz	r2, 8003e94 <__lshift+0xa4>
 8003e90:	f108 0602 	add.w	r6, r8, #2
 8003e94:	3e01      	subs	r6, #1
 8003e96:	4638      	mov	r0, r7
 8003e98:	4621      	mov	r1, r4
 8003e9a:	612e      	str	r6, [r5, #16]
 8003e9c:	f7ff fde2 	bl	8003a64 <_Bfree>
 8003ea0:	4628      	mov	r0, r5
 8003ea2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003ea6:	f842 0f04 	str.w	r0, [r2, #4]!
 8003eaa:	3301      	adds	r3, #1
 8003eac:	e7c5      	b.n	8003e3a <__lshift+0x4a>
 8003eae:	3904      	subs	r1, #4
 8003eb0:	f853 2b04 	ldr.w	r2, [r3], #4
 8003eb4:	459c      	cmp	ip, r3
 8003eb6:	f841 2f04 	str.w	r2, [r1, #4]!
 8003eba:	d8f9      	bhi.n	8003eb0 <__lshift+0xc0>
 8003ebc:	e7ea      	b.n	8003e94 <__lshift+0xa4>
 8003ebe:	bf00      	nop
 8003ec0:	0800493f 	.word	0x0800493f
 8003ec4:	08004950 	.word	0x08004950

08003ec8 <__mcmp>:
 8003ec8:	4603      	mov	r3, r0
 8003eca:	690a      	ldr	r2, [r1, #16]
 8003ecc:	6900      	ldr	r0, [r0, #16]
 8003ece:	b530      	push	{r4, r5, lr}
 8003ed0:	1a80      	subs	r0, r0, r2
 8003ed2:	d10e      	bne.n	8003ef2 <__mcmp+0x2a>
 8003ed4:	3314      	adds	r3, #20
 8003ed6:	3114      	adds	r1, #20
 8003ed8:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003edc:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8003ee0:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003ee4:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003ee8:	4295      	cmp	r5, r2
 8003eea:	d003      	beq.n	8003ef4 <__mcmp+0x2c>
 8003eec:	d205      	bcs.n	8003efa <__mcmp+0x32>
 8003eee:	f04f 30ff 	mov.w	r0, #4294967295
 8003ef2:	bd30      	pop	{r4, r5, pc}
 8003ef4:	42a3      	cmp	r3, r4
 8003ef6:	d3f3      	bcc.n	8003ee0 <__mcmp+0x18>
 8003ef8:	e7fb      	b.n	8003ef2 <__mcmp+0x2a>
 8003efa:	2001      	movs	r0, #1
 8003efc:	e7f9      	b.n	8003ef2 <__mcmp+0x2a>
	...

08003f00 <__mdiff>:
 8003f00:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003f04:	4689      	mov	r9, r1
 8003f06:	4606      	mov	r6, r0
 8003f08:	4611      	mov	r1, r2
 8003f0a:	4648      	mov	r0, r9
 8003f0c:	4614      	mov	r4, r2
 8003f0e:	f7ff ffdb 	bl	8003ec8 <__mcmp>
 8003f12:	1e05      	subs	r5, r0, #0
 8003f14:	d112      	bne.n	8003f3c <__mdiff+0x3c>
 8003f16:	4629      	mov	r1, r5
 8003f18:	4630      	mov	r0, r6
 8003f1a:	f7ff fd63 	bl	80039e4 <_Balloc>
 8003f1e:	4602      	mov	r2, r0
 8003f20:	b928      	cbnz	r0, 8003f2e <__mdiff+0x2e>
 8003f22:	f240 2137 	movw	r1, #567	@ 0x237
 8003f26:	4b3e      	ldr	r3, [pc, #248]	@ (8004020 <__mdiff+0x120>)
 8003f28:	483e      	ldr	r0, [pc, #248]	@ (8004024 <__mdiff+0x124>)
 8003f2a:	f000 f99b 	bl	8004264 <__assert_func>
 8003f2e:	2301      	movs	r3, #1
 8003f30:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003f34:	4610      	mov	r0, r2
 8003f36:	b003      	add	sp, #12
 8003f38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003f3c:	bfbc      	itt	lt
 8003f3e:	464b      	movlt	r3, r9
 8003f40:	46a1      	movlt	r9, r4
 8003f42:	4630      	mov	r0, r6
 8003f44:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003f48:	bfba      	itte	lt
 8003f4a:	461c      	movlt	r4, r3
 8003f4c:	2501      	movlt	r5, #1
 8003f4e:	2500      	movge	r5, #0
 8003f50:	f7ff fd48 	bl	80039e4 <_Balloc>
 8003f54:	4602      	mov	r2, r0
 8003f56:	b918      	cbnz	r0, 8003f60 <__mdiff+0x60>
 8003f58:	f240 2145 	movw	r1, #581	@ 0x245
 8003f5c:	4b30      	ldr	r3, [pc, #192]	@ (8004020 <__mdiff+0x120>)
 8003f5e:	e7e3      	b.n	8003f28 <__mdiff+0x28>
 8003f60:	f100 0b14 	add.w	fp, r0, #20
 8003f64:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8003f68:	f109 0310 	add.w	r3, r9, #16
 8003f6c:	60c5      	str	r5, [r0, #12]
 8003f6e:	f04f 0c00 	mov.w	ip, #0
 8003f72:	f109 0514 	add.w	r5, r9, #20
 8003f76:	46d9      	mov	r9, fp
 8003f78:	6926      	ldr	r6, [r4, #16]
 8003f7a:	f104 0e14 	add.w	lr, r4, #20
 8003f7e:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8003f82:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8003f86:	9301      	str	r3, [sp, #4]
 8003f88:	9b01      	ldr	r3, [sp, #4]
 8003f8a:	f85e 0b04 	ldr.w	r0, [lr], #4
 8003f8e:	f853 af04 	ldr.w	sl, [r3, #4]!
 8003f92:	b281      	uxth	r1, r0
 8003f94:	9301      	str	r3, [sp, #4]
 8003f96:	fa1f f38a 	uxth.w	r3, sl
 8003f9a:	1a5b      	subs	r3, r3, r1
 8003f9c:	0c00      	lsrs	r0, r0, #16
 8003f9e:	4463      	add	r3, ip
 8003fa0:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8003fa4:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8003fa8:	b29b      	uxth	r3, r3
 8003faa:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8003fae:	4576      	cmp	r6, lr
 8003fb0:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003fb4:	f849 3b04 	str.w	r3, [r9], #4
 8003fb8:	d8e6      	bhi.n	8003f88 <__mdiff+0x88>
 8003fba:	1b33      	subs	r3, r6, r4
 8003fbc:	3b15      	subs	r3, #21
 8003fbe:	f023 0303 	bic.w	r3, r3, #3
 8003fc2:	3415      	adds	r4, #21
 8003fc4:	3304      	adds	r3, #4
 8003fc6:	42a6      	cmp	r6, r4
 8003fc8:	bf38      	it	cc
 8003fca:	2304      	movcc	r3, #4
 8003fcc:	441d      	add	r5, r3
 8003fce:	445b      	add	r3, fp
 8003fd0:	461e      	mov	r6, r3
 8003fd2:	462c      	mov	r4, r5
 8003fd4:	4544      	cmp	r4, r8
 8003fd6:	d30e      	bcc.n	8003ff6 <__mdiff+0xf6>
 8003fd8:	f108 0103 	add.w	r1, r8, #3
 8003fdc:	1b49      	subs	r1, r1, r5
 8003fde:	f021 0103 	bic.w	r1, r1, #3
 8003fe2:	3d03      	subs	r5, #3
 8003fe4:	45a8      	cmp	r8, r5
 8003fe6:	bf38      	it	cc
 8003fe8:	2100      	movcc	r1, #0
 8003fea:	440b      	add	r3, r1
 8003fec:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8003ff0:	b199      	cbz	r1, 800401a <__mdiff+0x11a>
 8003ff2:	6117      	str	r7, [r2, #16]
 8003ff4:	e79e      	b.n	8003f34 <__mdiff+0x34>
 8003ff6:	46e6      	mov	lr, ip
 8003ff8:	f854 1b04 	ldr.w	r1, [r4], #4
 8003ffc:	fa1f fc81 	uxth.w	ip, r1
 8004000:	44f4      	add	ip, lr
 8004002:	0c08      	lsrs	r0, r1, #16
 8004004:	4471      	add	r1, lr
 8004006:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800400a:	b289      	uxth	r1, r1
 800400c:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8004010:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8004014:	f846 1b04 	str.w	r1, [r6], #4
 8004018:	e7dc      	b.n	8003fd4 <__mdiff+0xd4>
 800401a:	3f01      	subs	r7, #1
 800401c:	e7e6      	b.n	8003fec <__mdiff+0xec>
 800401e:	bf00      	nop
 8004020:	0800493f 	.word	0x0800493f
 8004024:	08004950 	.word	0x08004950

08004028 <__d2b>:
 8004028:	e92d 4373 	stmdb	sp!, {r0, r1, r4, r5, r6, r8, r9, lr}
 800402c:	2101      	movs	r1, #1
 800402e:	4690      	mov	r8, r2
 8004030:	4699      	mov	r9, r3
 8004032:	9e08      	ldr	r6, [sp, #32]
 8004034:	f7ff fcd6 	bl	80039e4 <_Balloc>
 8004038:	4604      	mov	r4, r0
 800403a:	b930      	cbnz	r0, 800404a <__d2b+0x22>
 800403c:	4602      	mov	r2, r0
 800403e:	f240 310f 	movw	r1, #783	@ 0x30f
 8004042:	4b23      	ldr	r3, [pc, #140]	@ (80040d0 <__d2b+0xa8>)
 8004044:	4823      	ldr	r0, [pc, #140]	@ (80040d4 <__d2b+0xac>)
 8004046:	f000 f90d 	bl	8004264 <__assert_func>
 800404a:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800404e:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8004052:	b10d      	cbz	r5, 8004058 <__d2b+0x30>
 8004054:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8004058:	9301      	str	r3, [sp, #4]
 800405a:	f1b8 0300 	subs.w	r3, r8, #0
 800405e:	d024      	beq.n	80040aa <__d2b+0x82>
 8004060:	4668      	mov	r0, sp
 8004062:	9300      	str	r3, [sp, #0]
 8004064:	f7ff fd85 	bl	8003b72 <__lo0bits>
 8004068:	e9dd 1200 	ldrd	r1, r2, [sp]
 800406c:	b1d8      	cbz	r0, 80040a6 <__d2b+0x7e>
 800406e:	f1c0 0320 	rsb	r3, r0, #32
 8004072:	fa02 f303 	lsl.w	r3, r2, r3
 8004076:	430b      	orrs	r3, r1
 8004078:	40c2      	lsrs	r2, r0
 800407a:	6163      	str	r3, [r4, #20]
 800407c:	9201      	str	r2, [sp, #4]
 800407e:	9b01      	ldr	r3, [sp, #4]
 8004080:	2b00      	cmp	r3, #0
 8004082:	bf0c      	ite	eq
 8004084:	2201      	moveq	r2, #1
 8004086:	2202      	movne	r2, #2
 8004088:	61a3      	str	r3, [r4, #24]
 800408a:	6122      	str	r2, [r4, #16]
 800408c:	b1ad      	cbz	r5, 80040ba <__d2b+0x92>
 800408e:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8004092:	4405      	add	r5, r0
 8004094:	6035      	str	r5, [r6, #0]
 8004096:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 800409a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800409c:	6018      	str	r0, [r3, #0]
 800409e:	4620      	mov	r0, r4
 80040a0:	b002      	add	sp, #8
 80040a2:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 80040a6:	6161      	str	r1, [r4, #20]
 80040a8:	e7e9      	b.n	800407e <__d2b+0x56>
 80040aa:	a801      	add	r0, sp, #4
 80040ac:	f7ff fd61 	bl	8003b72 <__lo0bits>
 80040b0:	9b01      	ldr	r3, [sp, #4]
 80040b2:	2201      	movs	r2, #1
 80040b4:	6163      	str	r3, [r4, #20]
 80040b6:	3020      	adds	r0, #32
 80040b8:	e7e7      	b.n	800408a <__d2b+0x62>
 80040ba:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 80040be:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80040c2:	6030      	str	r0, [r6, #0]
 80040c4:	6918      	ldr	r0, [r3, #16]
 80040c6:	f7ff fd35 	bl	8003b34 <__hi0bits>
 80040ca:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80040ce:	e7e4      	b.n	800409a <__d2b+0x72>
 80040d0:	0800493f 	.word	0x0800493f
 80040d4:	08004950 	.word	0x08004950

080040d8 <__sflush_r>:
 80040d8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80040dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80040de:	0716      	lsls	r6, r2, #28
 80040e0:	4605      	mov	r5, r0
 80040e2:	460c      	mov	r4, r1
 80040e4:	d454      	bmi.n	8004190 <__sflush_r+0xb8>
 80040e6:	684b      	ldr	r3, [r1, #4]
 80040e8:	2b00      	cmp	r3, #0
 80040ea:	dc02      	bgt.n	80040f2 <__sflush_r+0x1a>
 80040ec:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 80040ee:	2b00      	cmp	r3, #0
 80040f0:	dd48      	ble.n	8004184 <__sflush_r+0xac>
 80040f2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80040f4:	2e00      	cmp	r6, #0
 80040f6:	d045      	beq.n	8004184 <__sflush_r+0xac>
 80040f8:	2300      	movs	r3, #0
 80040fa:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80040fe:	682f      	ldr	r7, [r5, #0]
 8004100:	6a21      	ldr	r1, [r4, #32]
 8004102:	602b      	str	r3, [r5, #0]
 8004104:	d030      	beq.n	8004168 <__sflush_r+0x90>
 8004106:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8004108:	89a3      	ldrh	r3, [r4, #12]
 800410a:	0759      	lsls	r1, r3, #29
 800410c:	d505      	bpl.n	800411a <__sflush_r+0x42>
 800410e:	6863      	ldr	r3, [r4, #4]
 8004110:	1ad2      	subs	r2, r2, r3
 8004112:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8004114:	b10b      	cbz	r3, 800411a <__sflush_r+0x42>
 8004116:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8004118:	1ad2      	subs	r2, r2, r3
 800411a:	2300      	movs	r3, #0
 800411c:	4628      	mov	r0, r5
 800411e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8004120:	6a21      	ldr	r1, [r4, #32]
 8004122:	47b0      	blx	r6
 8004124:	1c43      	adds	r3, r0, #1
 8004126:	89a3      	ldrh	r3, [r4, #12]
 8004128:	d106      	bne.n	8004138 <__sflush_r+0x60>
 800412a:	6829      	ldr	r1, [r5, #0]
 800412c:	291d      	cmp	r1, #29
 800412e:	d82b      	bhi.n	8004188 <__sflush_r+0xb0>
 8004130:	4a28      	ldr	r2, [pc, #160]	@ (80041d4 <__sflush_r+0xfc>)
 8004132:	40ca      	lsrs	r2, r1
 8004134:	07d6      	lsls	r6, r2, #31
 8004136:	d527      	bpl.n	8004188 <__sflush_r+0xb0>
 8004138:	2200      	movs	r2, #0
 800413a:	6062      	str	r2, [r4, #4]
 800413c:	6922      	ldr	r2, [r4, #16]
 800413e:	04d9      	lsls	r1, r3, #19
 8004140:	6022      	str	r2, [r4, #0]
 8004142:	d504      	bpl.n	800414e <__sflush_r+0x76>
 8004144:	1c42      	adds	r2, r0, #1
 8004146:	d101      	bne.n	800414c <__sflush_r+0x74>
 8004148:	682b      	ldr	r3, [r5, #0]
 800414a:	b903      	cbnz	r3, 800414e <__sflush_r+0x76>
 800414c:	6560      	str	r0, [r4, #84]	@ 0x54
 800414e:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8004150:	602f      	str	r7, [r5, #0]
 8004152:	b1b9      	cbz	r1, 8004184 <__sflush_r+0xac>
 8004154:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8004158:	4299      	cmp	r1, r3
 800415a:	d002      	beq.n	8004162 <__sflush_r+0x8a>
 800415c:	4628      	mov	r0, r5
 800415e:	f7ff fb43 	bl	80037e8 <_free_r>
 8004162:	2300      	movs	r3, #0
 8004164:	6363      	str	r3, [r4, #52]	@ 0x34
 8004166:	e00d      	b.n	8004184 <__sflush_r+0xac>
 8004168:	2301      	movs	r3, #1
 800416a:	4628      	mov	r0, r5
 800416c:	47b0      	blx	r6
 800416e:	4602      	mov	r2, r0
 8004170:	1c50      	adds	r0, r2, #1
 8004172:	d1c9      	bne.n	8004108 <__sflush_r+0x30>
 8004174:	682b      	ldr	r3, [r5, #0]
 8004176:	2b00      	cmp	r3, #0
 8004178:	d0c6      	beq.n	8004108 <__sflush_r+0x30>
 800417a:	2b1d      	cmp	r3, #29
 800417c:	d001      	beq.n	8004182 <__sflush_r+0xaa>
 800417e:	2b16      	cmp	r3, #22
 8004180:	d11d      	bne.n	80041be <__sflush_r+0xe6>
 8004182:	602f      	str	r7, [r5, #0]
 8004184:	2000      	movs	r0, #0
 8004186:	e021      	b.n	80041cc <__sflush_r+0xf4>
 8004188:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800418c:	b21b      	sxth	r3, r3
 800418e:	e01a      	b.n	80041c6 <__sflush_r+0xee>
 8004190:	690f      	ldr	r7, [r1, #16]
 8004192:	2f00      	cmp	r7, #0
 8004194:	d0f6      	beq.n	8004184 <__sflush_r+0xac>
 8004196:	0793      	lsls	r3, r2, #30
 8004198:	bf18      	it	ne
 800419a:	2300      	movne	r3, #0
 800419c:	680e      	ldr	r6, [r1, #0]
 800419e:	bf08      	it	eq
 80041a0:	694b      	ldreq	r3, [r1, #20]
 80041a2:	1bf6      	subs	r6, r6, r7
 80041a4:	600f      	str	r7, [r1, #0]
 80041a6:	608b      	str	r3, [r1, #8]
 80041a8:	2e00      	cmp	r6, #0
 80041aa:	ddeb      	ble.n	8004184 <__sflush_r+0xac>
 80041ac:	4633      	mov	r3, r6
 80041ae:	463a      	mov	r2, r7
 80041b0:	4628      	mov	r0, r5
 80041b2:	6a21      	ldr	r1, [r4, #32]
 80041b4:	f8d4 c028 	ldr.w	ip, [r4, #40]	@ 0x28
 80041b8:	47e0      	blx	ip
 80041ba:	2800      	cmp	r0, #0
 80041bc:	dc07      	bgt.n	80041ce <__sflush_r+0xf6>
 80041be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80041c2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80041c6:	f04f 30ff 	mov.w	r0, #4294967295
 80041ca:	81a3      	strh	r3, [r4, #12]
 80041cc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80041ce:	4407      	add	r7, r0
 80041d0:	1a36      	subs	r6, r6, r0
 80041d2:	e7e9      	b.n	80041a8 <__sflush_r+0xd0>
 80041d4:	20400001 	.word	0x20400001

080041d8 <_fflush_r>:
 80041d8:	b538      	push	{r3, r4, r5, lr}
 80041da:	690b      	ldr	r3, [r1, #16]
 80041dc:	4605      	mov	r5, r0
 80041de:	460c      	mov	r4, r1
 80041e0:	b913      	cbnz	r3, 80041e8 <_fflush_r+0x10>
 80041e2:	2500      	movs	r5, #0
 80041e4:	4628      	mov	r0, r5
 80041e6:	bd38      	pop	{r3, r4, r5, pc}
 80041e8:	b118      	cbz	r0, 80041f2 <_fflush_r+0x1a>
 80041ea:	6a03      	ldr	r3, [r0, #32]
 80041ec:	b90b      	cbnz	r3, 80041f2 <_fflush_r+0x1a>
 80041ee:	f7fe fb95 	bl	800291c <__sinit>
 80041f2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80041f6:	2b00      	cmp	r3, #0
 80041f8:	d0f3      	beq.n	80041e2 <_fflush_r+0xa>
 80041fa:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80041fc:	07d0      	lsls	r0, r2, #31
 80041fe:	d404      	bmi.n	800420a <_fflush_r+0x32>
 8004200:	0599      	lsls	r1, r3, #22
 8004202:	d402      	bmi.n	800420a <_fflush_r+0x32>
 8004204:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8004206:	f7fe fc80 	bl	8002b0a <__retarget_lock_acquire_recursive>
 800420a:	4628      	mov	r0, r5
 800420c:	4621      	mov	r1, r4
 800420e:	f7ff ff63 	bl	80040d8 <__sflush_r>
 8004212:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8004214:	4605      	mov	r5, r0
 8004216:	07da      	lsls	r2, r3, #31
 8004218:	d4e4      	bmi.n	80041e4 <_fflush_r+0xc>
 800421a:	89a3      	ldrh	r3, [r4, #12]
 800421c:	059b      	lsls	r3, r3, #22
 800421e:	d4e1      	bmi.n	80041e4 <_fflush_r+0xc>
 8004220:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8004222:	f7fe fc73 	bl	8002b0c <__retarget_lock_release_recursive>
 8004226:	e7dd      	b.n	80041e4 <_fflush_r+0xc>

08004228 <_sbrk_r>:
 8004228:	b538      	push	{r3, r4, r5, lr}
 800422a:	2300      	movs	r3, #0
 800422c:	4d05      	ldr	r5, [pc, #20]	@ (8004244 <_sbrk_r+0x1c>)
 800422e:	4604      	mov	r4, r0
 8004230:	4608      	mov	r0, r1
 8004232:	602b      	str	r3, [r5, #0]
 8004234:	f7fd fe2c 	bl	8001e90 <_sbrk>
 8004238:	1c43      	adds	r3, r0, #1
 800423a:	d102      	bne.n	8004242 <_sbrk_r+0x1a>
 800423c:	682b      	ldr	r3, [r5, #0]
 800423e:	b103      	cbz	r3, 8004242 <_sbrk_r+0x1a>
 8004240:	6023      	str	r3, [r4, #0]
 8004242:	bd38      	pop	{r3, r4, r5, pc}
 8004244:	20000364 	.word	0x20000364

08004248 <memcpy>:
 8004248:	440a      	add	r2, r1
 800424a:	4291      	cmp	r1, r2
 800424c:	f100 33ff 	add.w	r3, r0, #4294967295
 8004250:	d100      	bne.n	8004254 <memcpy+0xc>
 8004252:	4770      	bx	lr
 8004254:	b510      	push	{r4, lr}
 8004256:	f811 4b01 	ldrb.w	r4, [r1], #1
 800425a:	4291      	cmp	r1, r2
 800425c:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004260:	d1f9      	bne.n	8004256 <memcpy+0xe>
 8004262:	bd10      	pop	{r4, pc}

08004264 <__assert_func>:
 8004264:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8004266:	4614      	mov	r4, r2
 8004268:	461a      	mov	r2, r3
 800426a:	4b09      	ldr	r3, [pc, #36]	@ (8004290 <__assert_func+0x2c>)
 800426c:	4605      	mov	r5, r0
 800426e:	681b      	ldr	r3, [r3, #0]
 8004270:	68d8      	ldr	r0, [r3, #12]
 8004272:	b14c      	cbz	r4, 8004288 <__assert_func+0x24>
 8004274:	4b07      	ldr	r3, [pc, #28]	@ (8004294 <__assert_func+0x30>)
 8004276:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800427a:	9100      	str	r1, [sp, #0]
 800427c:	462b      	mov	r3, r5
 800427e:	4906      	ldr	r1, [pc, #24]	@ (8004298 <__assert_func+0x34>)
 8004280:	f000 f842 	bl	8004308 <fiprintf>
 8004284:	f000 f852 	bl	800432c <abort>
 8004288:	4b04      	ldr	r3, [pc, #16]	@ (800429c <__assert_func+0x38>)
 800428a:	461c      	mov	r4, r3
 800428c:	e7f3      	b.n	8004276 <__assert_func+0x12>
 800428e:	bf00      	nop
 8004290:	2000002c 	.word	0x2000002c
 8004294:	080049b3 	.word	0x080049b3
 8004298:	080049c0 	.word	0x080049c0
 800429c:	080049ee 	.word	0x080049ee

080042a0 <_calloc_r>:
 80042a0:	b570      	push	{r4, r5, r6, lr}
 80042a2:	fba1 5402 	umull	r5, r4, r1, r2
 80042a6:	b934      	cbnz	r4, 80042b6 <_calloc_r+0x16>
 80042a8:	4629      	mov	r1, r5
 80042aa:	f7ff fb0f 	bl	80038cc <_malloc_r>
 80042ae:	4606      	mov	r6, r0
 80042b0:	b928      	cbnz	r0, 80042be <_calloc_r+0x1e>
 80042b2:	4630      	mov	r0, r6
 80042b4:	bd70      	pop	{r4, r5, r6, pc}
 80042b6:	220c      	movs	r2, #12
 80042b8:	2600      	movs	r6, #0
 80042ba:	6002      	str	r2, [r0, #0]
 80042bc:	e7f9      	b.n	80042b2 <_calloc_r+0x12>
 80042be:	462a      	mov	r2, r5
 80042c0:	4621      	mov	r1, r4
 80042c2:	f7fe fba4 	bl	8002a0e <memset>
 80042c6:	e7f4      	b.n	80042b2 <_calloc_r+0x12>

080042c8 <__ascii_mbtowc>:
 80042c8:	b082      	sub	sp, #8
 80042ca:	b901      	cbnz	r1, 80042ce <__ascii_mbtowc+0x6>
 80042cc:	a901      	add	r1, sp, #4
 80042ce:	b142      	cbz	r2, 80042e2 <__ascii_mbtowc+0x1a>
 80042d0:	b14b      	cbz	r3, 80042e6 <__ascii_mbtowc+0x1e>
 80042d2:	7813      	ldrb	r3, [r2, #0]
 80042d4:	600b      	str	r3, [r1, #0]
 80042d6:	7812      	ldrb	r2, [r2, #0]
 80042d8:	1e10      	subs	r0, r2, #0
 80042da:	bf18      	it	ne
 80042dc:	2001      	movne	r0, #1
 80042de:	b002      	add	sp, #8
 80042e0:	4770      	bx	lr
 80042e2:	4610      	mov	r0, r2
 80042e4:	e7fb      	b.n	80042de <__ascii_mbtowc+0x16>
 80042e6:	f06f 0001 	mvn.w	r0, #1
 80042ea:	e7f8      	b.n	80042de <__ascii_mbtowc+0x16>

080042ec <__ascii_wctomb>:
 80042ec:	4603      	mov	r3, r0
 80042ee:	4608      	mov	r0, r1
 80042f0:	b141      	cbz	r1, 8004304 <__ascii_wctomb+0x18>
 80042f2:	2aff      	cmp	r2, #255	@ 0xff
 80042f4:	d904      	bls.n	8004300 <__ascii_wctomb+0x14>
 80042f6:	228a      	movs	r2, #138	@ 0x8a
 80042f8:	f04f 30ff 	mov.w	r0, #4294967295
 80042fc:	601a      	str	r2, [r3, #0]
 80042fe:	4770      	bx	lr
 8004300:	2001      	movs	r0, #1
 8004302:	700a      	strb	r2, [r1, #0]
 8004304:	4770      	bx	lr
	...

08004308 <fiprintf>:
 8004308:	b40e      	push	{r1, r2, r3}
 800430a:	b503      	push	{r0, r1, lr}
 800430c:	4601      	mov	r1, r0
 800430e:	ab03      	add	r3, sp, #12
 8004310:	4805      	ldr	r0, [pc, #20]	@ (8004328 <fiprintf+0x20>)
 8004312:	f853 2b04 	ldr.w	r2, [r3], #4
 8004316:	6800      	ldr	r0, [r0, #0]
 8004318:	9301      	str	r3, [sp, #4]
 800431a:	f000 f835 	bl	8004388 <_vfiprintf_r>
 800431e:	b002      	add	sp, #8
 8004320:	f85d eb04 	ldr.w	lr, [sp], #4
 8004324:	b003      	add	sp, #12
 8004326:	4770      	bx	lr
 8004328:	2000002c 	.word	0x2000002c

0800432c <abort>:
 800432c:	2006      	movs	r0, #6
 800432e:	b508      	push	{r3, lr}
 8004330:	f000 f9fe 	bl	8004730 <raise>
 8004334:	2001      	movs	r0, #1
 8004336:	f7fd fd36 	bl	8001da6 <_exit>

0800433a <__sfputc_r>:
 800433a:	6893      	ldr	r3, [r2, #8]
 800433c:	b410      	push	{r4}
 800433e:	3b01      	subs	r3, #1
 8004340:	2b00      	cmp	r3, #0
 8004342:	6093      	str	r3, [r2, #8]
 8004344:	da07      	bge.n	8004356 <__sfputc_r+0x1c>
 8004346:	6994      	ldr	r4, [r2, #24]
 8004348:	42a3      	cmp	r3, r4
 800434a:	db01      	blt.n	8004350 <__sfputc_r+0x16>
 800434c:	290a      	cmp	r1, #10
 800434e:	d102      	bne.n	8004356 <__sfputc_r+0x1c>
 8004350:	bc10      	pop	{r4}
 8004352:	f000 b931 	b.w	80045b8 <__swbuf_r>
 8004356:	6813      	ldr	r3, [r2, #0]
 8004358:	1c58      	adds	r0, r3, #1
 800435a:	6010      	str	r0, [r2, #0]
 800435c:	7019      	strb	r1, [r3, #0]
 800435e:	4608      	mov	r0, r1
 8004360:	bc10      	pop	{r4}
 8004362:	4770      	bx	lr

08004364 <__sfputs_r>:
 8004364:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004366:	4606      	mov	r6, r0
 8004368:	460f      	mov	r7, r1
 800436a:	4614      	mov	r4, r2
 800436c:	18d5      	adds	r5, r2, r3
 800436e:	42ac      	cmp	r4, r5
 8004370:	d101      	bne.n	8004376 <__sfputs_r+0x12>
 8004372:	2000      	movs	r0, #0
 8004374:	e007      	b.n	8004386 <__sfputs_r+0x22>
 8004376:	463a      	mov	r2, r7
 8004378:	4630      	mov	r0, r6
 800437a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800437e:	f7ff ffdc 	bl	800433a <__sfputc_r>
 8004382:	1c43      	adds	r3, r0, #1
 8004384:	d1f3      	bne.n	800436e <__sfputs_r+0xa>
 8004386:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08004388 <_vfiprintf_r>:
 8004388:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800438c:	460d      	mov	r5, r1
 800438e:	4614      	mov	r4, r2
 8004390:	4698      	mov	r8, r3
 8004392:	4606      	mov	r6, r0
 8004394:	b09d      	sub	sp, #116	@ 0x74
 8004396:	b118      	cbz	r0, 80043a0 <_vfiprintf_r+0x18>
 8004398:	6a03      	ldr	r3, [r0, #32]
 800439a:	b90b      	cbnz	r3, 80043a0 <_vfiprintf_r+0x18>
 800439c:	f7fe fabe 	bl	800291c <__sinit>
 80043a0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80043a2:	07d9      	lsls	r1, r3, #31
 80043a4:	d405      	bmi.n	80043b2 <_vfiprintf_r+0x2a>
 80043a6:	89ab      	ldrh	r3, [r5, #12]
 80043a8:	059a      	lsls	r2, r3, #22
 80043aa:	d402      	bmi.n	80043b2 <_vfiprintf_r+0x2a>
 80043ac:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80043ae:	f7fe fbac 	bl	8002b0a <__retarget_lock_acquire_recursive>
 80043b2:	89ab      	ldrh	r3, [r5, #12]
 80043b4:	071b      	lsls	r3, r3, #28
 80043b6:	d501      	bpl.n	80043bc <_vfiprintf_r+0x34>
 80043b8:	692b      	ldr	r3, [r5, #16]
 80043ba:	b99b      	cbnz	r3, 80043e4 <_vfiprintf_r+0x5c>
 80043bc:	4629      	mov	r1, r5
 80043be:	4630      	mov	r0, r6
 80043c0:	f000 f938 	bl	8004634 <__swsetup_r>
 80043c4:	b170      	cbz	r0, 80043e4 <_vfiprintf_r+0x5c>
 80043c6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80043c8:	07dc      	lsls	r4, r3, #31
 80043ca:	d504      	bpl.n	80043d6 <_vfiprintf_r+0x4e>
 80043cc:	f04f 30ff 	mov.w	r0, #4294967295
 80043d0:	b01d      	add	sp, #116	@ 0x74
 80043d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80043d6:	89ab      	ldrh	r3, [r5, #12]
 80043d8:	0598      	lsls	r0, r3, #22
 80043da:	d4f7      	bmi.n	80043cc <_vfiprintf_r+0x44>
 80043dc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80043de:	f7fe fb95 	bl	8002b0c <__retarget_lock_release_recursive>
 80043e2:	e7f3      	b.n	80043cc <_vfiprintf_r+0x44>
 80043e4:	2300      	movs	r3, #0
 80043e6:	9309      	str	r3, [sp, #36]	@ 0x24
 80043e8:	2320      	movs	r3, #32
 80043ea:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80043ee:	2330      	movs	r3, #48	@ 0x30
 80043f0:	f04f 0901 	mov.w	r9, #1
 80043f4:	f8cd 800c 	str.w	r8, [sp, #12]
 80043f8:	f8df 81a8 	ldr.w	r8, [pc, #424]	@ 80045a4 <_vfiprintf_r+0x21c>
 80043fc:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8004400:	4623      	mov	r3, r4
 8004402:	469a      	mov	sl, r3
 8004404:	f813 2b01 	ldrb.w	r2, [r3], #1
 8004408:	b10a      	cbz	r2, 800440e <_vfiprintf_r+0x86>
 800440a:	2a25      	cmp	r2, #37	@ 0x25
 800440c:	d1f9      	bne.n	8004402 <_vfiprintf_r+0x7a>
 800440e:	ebba 0b04 	subs.w	fp, sl, r4
 8004412:	d00b      	beq.n	800442c <_vfiprintf_r+0xa4>
 8004414:	465b      	mov	r3, fp
 8004416:	4622      	mov	r2, r4
 8004418:	4629      	mov	r1, r5
 800441a:	4630      	mov	r0, r6
 800441c:	f7ff ffa2 	bl	8004364 <__sfputs_r>
 8004420:	3001      	adds	r0, #1
 8004422:	f000 80a7 	beq.w	8004574 <_vfiprintf_r+0x1ec>
 8004426:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8004428:	445a      	add	r2, fp
 800442a:	9209      	str	r2, [sp, #36]	@ 0x24
 800442c:	f89a 3000 	ldrb.w	r3, [sl]
 8004430:	2b00      	cmp	r3, #0
 8004432:	f000 809f 	beq.w	8004574 <_vfiprintf_r+0x1ec>
 8004436:	2300      	movs	r3, #0
 8004438:	f04f 32ff 	mov.w	r2, #4294967295
 800443c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004440:	f10a 0a01 	add.w	sl, sl, #1
 8004444:	9304      	str	r3, [sp, #16]
 8004446:	9307      	str	r3, [sp, #28]
 8004448:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800444c:	931a      	str	r3, [sp, #104]	@ 0x68
 800444e:	4654      	mov	r4, sl
 8004450:	2205      	movs	r2, #5
 8004452:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004456:	4853      	ldr	r0, [pc, #332]	@ (80045a4 <_vfiprintf_r+0x21c>)
 8004458:	f7fe fb59 	bl	8002b0e <memchr>
 800445c:	9a04      	ldr	r2, [sp, #16]
 800445e:	b9d8      	cbnz	r0, 8004498 <_vfiprintf_r+0x110>
 8004460:	06d1      	lsls	r1, r2, #27
 8004462:	bf44      	itt	mi
 8004464:	2320      	movmi	r3, #32
 8004466:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800446a:	0713      	lsls	r3, r2, #28
 800446c:	bf44      	itt	mi
 800446e:	232b      	movmi	r3, #43	@ 0x2b
 8004470:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8004474:	f89a 3000 	ldrb.w	r3, [sl]
 8004478:	2b2a      	cmp	r3, #42	@ 0x2a
 800447a:	d015      	beq.n	80044a8 <_vfiprintf_r+0x120>
 800447c:	4654      	mov	r4, sl
 800447e:	2000      	movs	r0, #0
 8004480:	f04f 0c0a 	mov.w	ip, #10
 8004484:	9a07      	ldr	r2, [sp, #28]
 8004486:	4621      	mov	r1, r4
 8004488:	f811 3b01 	ldrb.w	r3, [r1], #1
 800448c:	3b30      	subs	r3, #48	@ 0x30
 800448e:	2b09      	cmp	r3, #9
 8004490:	d94b      	bls.n	800452a <_vfiprintf_r+0x1a2>
 8004492:	b1b0      	cbz	r0, 80044c2 <_vfiprintf_r+0x13a>
 8004494:	9207      	str	r2, [sp, #28]
 8004496:	e014      	b.n	80044c2 <_vfiprintf_r+0x13a>
 8004498:	eba0 0308 	sub.w	r3, r0, r8
 800449c:	fa09 f303 	lsl.w	r3, r9, r3
 80044a0:	4313      	orrs	r3, r2
 80044a2:	46a2      	mov	sl, r4
 80044a4:	9304      	str	r3, [sp, #16]
 80044a6:	e7d2      	b.n	800444e <_vfiprintf_r+0xc6>
 80044a8:	9b03      	ldr	r3, [sp, #12]
 80044aa:	1d19      	adds	r1, r3, #4
 80044ac:	681b      	ldr	r3, [r3, #0]
 80044ae:	9103      	str	r1, [sp, #12]
 80044b0:	2b00      	cmp	r3, #0
 80044b2:	bfbb      	ittet	lt
 80044b4:	425b      	neglt	r3, r3
 80044b6:	f042 0202 	orrlt.w	r2, r2, #2
 80044ba:	9307      	strge	r3, [sp, #28]
 80044bc:	9307      	strlt	r3, [sp, #28]
 80044be:	bfb8      	it	lt
 80044c0:	9204      	strlt	r2, [sp, #16]
 80044c2:	7823      	ldrb	r3, [r4, #0]
 80044c4:	2b2e      	cmp	r3, #46	@ 0x2e
 80044c6:	d10a      	bne.n	80044de <_vfiprintf_r+0x156>
 80044c8:	7863      	ldrb	r3, [r4, #1]
 80044ca:	2b2a      	cmp	r3, #42	@ 0x2a
 80044cc:	d132      	bne.n	8004534 <_vfiprintf_r+0x1ac>
 80044ce:	9b03      	ldr	r3, [sp, #12]
 80044d0:	3402      	adds	r4, #2
 80044d2:	1d1a      	adds	r2, r3, #4
 80044d4:	681b      	ldr	r3, [r3, #0]
 80044d6:	9203      	str	r2, [sp, #12]
 80044d8:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80044dc:	9305      	str	r3, [sp, #20]
 80044de:	f8df a0c8 	ldr.w	sl, [pc, #200]	@ 80045a8 <_vfiprintf_r+0x220>
 80044e2:	2203      	movs	r2, #3
 80044e4:	4650      	mov	r0, sl
 80044e6:	7821      	ldrb	r1, [r4, #0]
 80044e8:	f7fe fb11 	bl	8002b0e <memchr>
 80044ec:	b138      	cbz	r0, 80044fe <_vfiprintf_r+0x176>
 80044ee:	2240      	movs	r2, #64	@ 0x40
 80044f0:	9b04      	ldr	r3, [sp, #16]
 80044f2:	eba0 000a 	sub.w	r0, r0, sl
 80044f6:	4082      	lsls	r2, r0
 80044f8:	4313      	orrs	r3, r2
 80044fa:	3401      	adds	r4, #1
 80044fc:	9304      	str	r3, [sp, #16]
 80044fe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8004502:	2206      	movs	r2, #6
 8004504:	4829      	ldr	r0, [pc, #164]	@ (80045ac <_vfiprintf_r+0x224>)
 8004506:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800450a:	f7fe fb00 	bl	8002b0e <memchr>
 800450e:	2800      	cmp	r0, #0
 8004510:	d03f      	beq.n	8004592 <_vfiprintf_r+0x20a>
 8004512:	4b27      	ldr	r3, [pc, #156]	@ (80045b0 <_vfiprintf_r+0x228>)
 8004514:	bb1b      	cbnz	r3, 800455e <_vfiprintf_r+0x1d6>
 8004516:	9b03      	ldr	r3, [sp, #12]
 8004518:	3307      	adds	r3, #7
 800451a:	f023 0307 	bic.w	r3, r3, #7
 800451e:	3308      	adds	r3, #8
 8004520:	9303      	str	r3, [sp, #12]
 8004522:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8004524:	443b      	add	r3, r7
 8004526:	9309      	str	r3, [sp, #36]	@ 0x24
 8004528:	e76a      	b.n	8004400 <_vfiprintf_r+0x78>
 800452a:	460c      	mov	r4, r1
 800452c:	2001      	movs	r0, #1
 800452e:	fb0c 3202 	mla	r2, ip, r2, r3
 8004532:	e7a8      	b.n	8004486 <_vfiprintf_r+0xfe>
 8004534:	2300      	movs	r3, #0
 8004536:	f04f 0c0a 	mov.w	ip, #10
 800453a:	4619      	mov	r1, r3
 800453c:	3401      	adds	r4, #1
 800453e:	9305      	str	r3, [sp, #20]
 8004540:	4620      	mov	r0, r4
 8004542:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004546:	3a30      	subs	r2, #48	@ 0x30
 8004548:	2a09      	cmp	r2, #9
 800454a:	d903      	bls.n	8004554 <_vfiprintf_r+0x1cc>
 800454c:	2b00      	cmp	r3, #0
 800454e:	d0c6      	beq.n	80044de <_vfiprintf_r+0x156>
 8004550:	9105      	str	r1, [sp, #20]
 8004552:	e7c4      	b.n	80044de <_vfiprintf_r+0x156>
 8004554:	4604      	mov	r4, r0
 8004556:	2301      	movs	r3, #1
 8004558:	fb0c 2101 	mla	r1, ip, r1, r2
 800455c:	e7f0      	b.n	8004540 <_vfiprintf_r+0x1b8>
 800455e:	ab03      	add	r3, sp, #12
 8004560:	9300      	str	r3, [sp, #0]
 8004562:	462a      	mov	r2, r5
 8004564:	4630      	mov	r0, r6
 8004566:	4b13      	ldr	r3, [pc, #76]	@ (80045b4 <_vfiprintf_r+0x22c>)
 8004568:	a904      	add	r1, sp, #16
 800456a:	f7fd fd8f 	bl	800208c <_printf_float>
 800456e:	4607      	mov	r7, r0
 8004570:	1c78      	adds	r0, r7, #1
 8004572:	d1d6      	bne.n	8004522 <_vfiprintf_r+0x19a>
 8004574:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8004576:	07d9      	lsls	r1, r3, #31
 8004578:	d405      	bmi.n	8004586 <_vfiprintf_r+0x1fe>
 800457a:	89ab      	ldrh	r3, [r5, #12]
 800457c:	059a      	lsls	r2, r3, #22
 800457e:	d402      	bmi.n	8004586 <_vfiprintf_r+0x1fe>
 8004580:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8004582:	f7fe fac3 	bl	8002b0c <__retarget_lock_release_recursive>
 8004586:	89ab      	ldrh	r3, [r5, #12]
 8004588:	065b      	lsls	r3, r3, #25
 800458a:	f53f af1f 	bmi.w	80043cc <_vfiprintf_r+0x44>
 800458e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8004590:	e71e      	b.n	80043d0 <_vfiprintf_r+0x48>
 8004592:	ab03      	add	r3, sp, #12
 8004594:	9300      	str	r3, [sp, #0]
 8004596:	462a      	mov	r2, r5
 8004598:	4630      	mov	r0, r6
 800459a:	4b06      	ldr	r3, [pc, #24]	@ (80045b4 <_vfiprintf_r+0x22c>)
 800459c:	a904      	add	r1, sp, #16
 800459e:	f7fe f813 	bl	80025c8 <_printf_i>
 80045a2:	e7e4      	b.n	800456e <_vfiprintf_r+0x1e6>
 80045a4:	080049ef 	.word	0x080049ef
 80045a8:	080049f5 	.word	0x080049f5
 80045ac:	080049f9 	.word	0x080049f9
 80045b0:	0800208d 	.word	0x0800208d
 80045b4:	08004365 	.word	0x08004365

080045b8 <__swbuf_r>:
 80045b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80045ba:	460e      	mov	r6, r1
 80045bc:	4614      	mov	r4, r2
 80045be:	4605      	mov	r5, r0
 80045c0:	b118      	cbz	r0, 80045ca <__swbuf_r+0x12>
 80045c2:	6a03      	ldr	r3, [r0, #32]
 80045c4:	b90b      	cbnz	r3, 80045ca <__swbuf_r+0x12>
 80045c6:	f7fe f9a9 	bl	800291c <__sinit>
 80045ca:	69a3      	ldr	r3, [r4, #24]
 80045cc:	60a3      	str	r3, [r4, #8]
 80045ce:	89a3      	ldrh	r3, [r4, #12]
 80045d0:	071a      	lsls	r2, r3, #28
 80045d2:	d501      	bpl.n	80045d8 <__swbuf_r+0x20>
 80045d4:	6923      	ldr	r3, [r4, #16]
 80045d6:	b943      	cbnz	r3, 80045ea <__swbuf_r+0x32>
 80045d8:	4621      	mov	r1, r4
 80045da:	4628      	mov	r0, r5
 80045dc:	f000 f82a 	bl	8004634 <__swsetup_r>
 80045e0:	b118      	cbz	r0, 80045ea <__swbuf_r+0x32>
 80045e2:	f04f 37ff 	mov.w	r7, #4294967295
 80045e6:	4638      	mov	r0, r7
 80045e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80045ea:	6823      	ldr	r3, [r4, #0]
 80045ec:	6922      	ldr	r2, [r4, #16]
 80045ee:	b2f6      	uxtb	r6, r6
 80045f0:	1a98      	subs	r0, r3, r2
 80045f2:	6963      	ldr	r3, [r4, #20]
 80045f4:	4637      	mov	r7, r6
 80045f6:	4283      	cmp	r3, r0
 80045f8:	dc05      	bgt.n	8004606 <__swbuf_r+0x4e>
 80045fa:	4621      	mov	r1, r4
 80045fc:	4628      	mov	r0, r5
 80045fe:	f7ff fdeb 	bl	80041d8 <_fflush_r>
 8004602:	2800      	cmp	r0, #0
 8004604:	d1ed      	bne.n	80045e2 <__swbuf_r+0x2a>
 8004606:	68a3      	ldr	r3, [r4, #8]
 8004608:	3b01      	subs	r3, #1
 800460a:	60a3      	str	r3, [r4, #8]
 800460c:	6823      	ldr	r3, [r4, #0]
 800460e:	1c5a      	adds	r2, r3, #1
 8004610:	6022      	str	r2, [r4, #0]
 8004612:	701e      	strb	r6, [r3, #0]
 8004614:	6962      	ldr	r2, [r4, #20]
 8004616:	1c43      	adds	r3, r0, #1
 8004618:	429a      	cmp	r2, r3
 800461a:	d004      	beq.n	8004626 <__swbuf_r+0x6e>
 800461c:	89a3      	ldrh	r3, [r4, #12]
 800461e:	07db      	lsls	r3, r3, #31
 8004620:	d5e1      	bpl.n	80045e6 <__swbuf_r+0x2e>
 8004622:	2e0a      	cmp	r6, #10
 8004624:	d1df      	bne.n	80045e6 <__swbuf_r+0x2e>
 8004626:	4621      	mov	r1, r4
 8004628:	4628      	mov	r0, r5
 800462a:	f7ff fdd5 	bl	80041d8 <_fflush_r>
 800462e:	2800      	cmp	r0, #0
 8004630:	d0d9      	beq.n	80045e6 <__swbuf_r+0x2e>
 8004632:	e7d6      	b.n	80045e2 <__swbuf_r+0x2a>

08004634 <__swsetup_r>:
 8004634:	b538      	push	{r3, r4, r5, lr}
 8004636:	4b29      	ldr	r3, [pc, #164]	@ (80046dc <__swsetup_r+0xa8>)
 8004638:	4605      	mov	r5, r0
 800463a:	6818      	ldr	r0, [r3, #0]
 800463c:	460c      	mov	r4, r1
 800463e:	b118      	cbz	r0, 8004648 <__swsetup_r+0x14>
 8004640:	6a03      	ldr	r3, [r0, #32]
 8004642:	b90b      	cbnz	r3, 8004648 <__swsetup_r+0x14>
 8004644:	f7fe f96a 	bl	800291c <__sinit>
 8004648:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800464c:	0719      	lsls	r1, r3, #28
 800464e:	d422      	bmi.n	8004696 <__swsetup_r+0x62>
 8004650:	06da      	lsls	r2, r3, #27
 8004652:	d407      	bmi.n	8004664 <__swsetup_r+0x30>
 8004654:	2209      	movs	r2, #9
 8004656:	602a      	str	r2, [r5, #0]
 8004658:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800465c:	f04f 30ff 	mov.w	r0, #4294967295
 8004660:	81a3      	strh	r3, [r4, #12]
 8004662:	e033      	b.n	80046cc <__swsetup_r+0x98>
 8004664:	0758      	lsls	r0, r3, #29
 8004666:	d512      	bpl.n	800468e <__swsetup_r+0x5a>
 8004668:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800466a:	b141      	cbz	r1, 800467e <__swsetup_r+0x4a>
 800466c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8004670:	4299      	cmp	r1, r3
 8004672:	d002      	beq.n	800467a <__swsetup_r+0x46>
 8004674:	4628      	mov	r0, r5
 8004676:	f7ff f8b7 	bl	80037e8 <_free_r>
 800467a:	2300      	movs	r3, #0
 800467c:	6363      	str	r3, [r4, #52]	@ 0x34
 800467e:	89a3      	ldrh	r3, [r4, #12]
 8004680:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8004684:	81a3      	strh	r3, [r4, #12]
 8004686:	2300      	movs	r3, #0
 8004688:	6063      	str	r3, [r4, #4]
 800468a:	6923      	ldr	r3, [r4, #16]
 800468c:	6023      	str	r3, [r4, #0]
 800468e:	89a3      	ldrh	r3, [r4, #12]
 8004690:	f043 0308 	orr.w	r3, r3, #8
 8004694:	81a3      	strh	r3, [r4, #12]
 8004696:	6923      	ldr	r3, [r4, #16]
 8004698:	b94b      	cbnz	r3, 80046ae <__swsetup_r+0x7a>
 800469a:	89a3      	ldrh	r3, [r4, #12]
 800469c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80046a0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80046a4:	d003      	beq.n	80046ae <__swsetup_r+0x7a>
 80046a6:	4621      	mov	r1, r4
 80046a8:	4628      	mov	r0, r5
 80046aa:	f000 f882 	bl	80047b2 <__smakebuf_r>
 80046ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80046b2:	f013 0201 	ands.w	r2, r3, #1
 80046b6:	d00a      	beq.n	80046ce <__swsetup_r+0x9a>
 80046b8:	2200      	movs	r2, #0
 80046ba:	60a2      	str	r2, [r4, #8]
 80046bc:	6962      	ldr	r2, [r4, #20]
 80046be:	4252      	negs	r2, r2
 80046c0:	61a2      	str	r2, [r4, #24]
 80046c2:	6922      	ldr	r2, [r4, #16]
 80046c4:	b942      	cbnz	r2, 80046d8 <__swsetup_r+0xa4>
 80046c6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80046ca:	d1c5      	bne.n	8004658 <__swsetup_r+0x24>
 80046cc:	bd38      	pop	{r3, r4, r5, pc}
 80046ce:	0799      	lsls	r1, r3, #30
 80046d0:	bf58      	it	pl
 80046d2:	6962      	ldrpl	r2, [r4, #20]
 80046d4:	60a2      	str	r2, [r4, #8]
 80046d6:	e7f4      	b.n	80046c2 <__swsetup_r+0x8e>
 80046d8:	2000      	movs	r0, #0
 80046da:	e7f7      	b.n	80046cc <__swsetup_r+0x98>
 80046dc:	2000002c 	.word	0x2000002c

080046e0 <_raise_r>:
 80046e0:	291f      	cmp	r1, #31
 80046e2:	b538      	push	{r3, r4, r5, lr}
 80046e4:	4605      	mov	r5, r0
 80046e6:	460c      	mov	r4, r1
 80046e8:	d904      	bls.n	80046f4 <_raise_r+0x14>
 80046ea:	2316      	movs	r3, #22
 80046ec:	6003      	str	r3, [r0, #0]
 80046ee:	f04f 30ff 	mov.w	r0, #4294967295
 80046f2:	bd38      	pop	{r3, r4, r5, pc}
 80046f4:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80046f6:	b112      	cbz	r2, 80046fe <_raise_r+0x1e>
 80046f8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80046fc:	b94b      	cbnz	r3, 8004712 <_raise_r+0x32>
 80046fe:	4628      	mov	r0, r5
 8004700:	f000 f830 	bl	8004764 <_getpid_r>
 8004704:	4622      	mov	r2, r4
 8004706:	4601      	mov	r1, r0
 8004708:	4628      	mov	r0, r5
 800470a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800470e:	f000 b817 	b.w	8004740 <_kill_r>
 8004712:	2b01      	cmp	r3, #1
 8004714:	d00a      	beq.n	800472c <_raise_r+0x4c>
 8004716:	1c59      	adds	r1, r3, #1
 8004718:	d103      	bne.n	8004722 <_raise_r+0x42>
 800471a:	2316      	movs	r3, #22
 800471c:	6003      	str	r3, [r0, #0]
 800471e:	2001      	movs	r0, #1
 8004720:	e7e7      	b.n	80046f2 <_raise_r+0x12>
 8004722:	2100      	movs	r1, #0
 8004724:	4620      	mov	r0, r4
 8004726:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800472a:	4798      	blx	r3
 800472c:	2000      	movs	r0, #0
 800472e:	e7e0      	b.n	80046f2 <_raise_r+0x12>

08004730 <raise>:
 8004730:	4b02      	ldr	r3, [pc, #8]	@ (800473c <raise+0xc>)
 8004732:	4601      	mov	r1, r0
 8004734:	6818      	ldr	r0, [r3, #0]
 8004736:	f7ff bfd3 	b.w	80046e0 <_raise_r>
 800473a:	bf00      	nop
 800473c:	2000002c 	.word	0x2000002c

08004740 <_kill_r>:
 8004740:	b538      	push	{r3, r4, r5, lr}
 8004742:	2300      	movs	r3, #0
 8004744:	4d06      	ldr	r5, [pc, #24]	@ (8004760 <_kill_r+0x20>)
 8004746:	4604      	mov	r4, r0
 8004748:	4608      	mov	r0, r1
 800474a:	4611      	mov	r1, r2
 800474c:	602b      	str	r3, [r5, #0]
 800474e:	f7fd fb1a 	bl	8001d86 <_kill>
 8004752:	1c43      	adds	r3, r0, #1
 8004754:	d102      	bne.n	800475c <_kill_r+0x1c>
 8004756:	682b      	ldr	r3, [r5, #0]
 8004758:	b103      	cbz	r3, 800475c <_kill_r+0x1c>
 800475a:	6023      	str	r3, [r4, #0]
 800475c:	bd38      	pop	{r3, r4, r5, pc}
 800475e:	bf00      	nop
 8004760:	20000364 	.word	0x20000364

08004764 <_getpid_r>:
 8004764:	f7fd bb08 	b.w	8001d78 <_getpid>

08004768 <__swhatbuf_r>:
 8004768:	b570      	push	{r4, r5, r6, lr}
 800476a:	460c      	mov	r4, r1
 800476c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004770:	4615      	mov	r5, r2
 8004772:	2900      	cmp	r1, #0
 8004774:	461e      	mov	r6, r3
 8004776:	b096      	sub	sp, #88	@ 0x58
 8004778:	da0c      	bge.n	8004794 <__swhatbuf_r+0x2c>
 800477a:	89a3      	ldrh	r3, [r4, #12]
 800477c:	2100      	movs	r1, #0
 800477e:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8004782:	bf14      	ite	ne
 8004784:	2340      	movne	r3, #64	@ 0x40
 8004786:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800478a:	2000      	movs	r0, #0
 800478c:	6031      	str	r1, [r6, #0]
 800478e:	602b      	str	r3, [r5, #0]
 8004790:	b016      	add	sp, #88	@ 0x58
 8004792:	bd70      	pop	{r4, r5, r6, pc}
 8004794:	466a      	mov	r2, sp
 8004796:	f000 f849 	bl	800482c <_fstat_r>
 800479a:	2800      	cmp	r0, #0
 800479c:	dbed      	blt.n	800477a <__swhatbuf_r+0x12>
 800479e:	9901      	ldr	r1, [sp, #4]
 80047a0:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80047a4:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80047a8:	4259      	negs	r1, r3
 80047aa:	4159      	adcs	r1, r3
 80047ac:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80047b0:	e7eb      	b.n	800478a <__swhatbuf_r+0x22>

080047b2 <__smakebuf_r>:
 80047b2:	898b      	ldrh	r3, [r1, #12]
 80047b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80047b6:	079d      	lsls	r5, r3, #30
 80047b8:	4606      	mov	r6, r0
 80047ba:	460c      	mov	r4, r1
 80047bc:	d507      	bpl.n	80047ce <__smakebuf_r+0x1c>
 80047be:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80047c2:	6023      	str	r3, [r4, #0]
 80047c4:	6123      	str	r3, [r4, #16]
 80047c6:	2301      	movs	r3, #1
 80047c8:	6163      	str	r3, [r4, #20]
 80047ca:	b003      	add	sp, #12
 80047cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80047ce:	466a      	mov	r2, sp
 80047d0:	ab01      	add	r3, sp, #4
 80047d2:	f7ff ffc9 	bl	8004768 <__swhatbuf_r>
 80047d6:	9f00      	ldr	r7, [sp, #0]
 80047d8:	4605      	mov	r5, r0
 80047da:	4639      	mov	r1, r7
 80047dc:	4630      	mov	r0, r6
 80047de:	f7ff f875 	bl	80038cc <_malloc_r>
 80047e2:	b948      	cbnz	r0, 80047f8 <__smakebuf_r+0x46>
 80047e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80047e8:	059a      	lsls	r2, r3, #22
 80047ea:	d4ee      	bmi.n	80047ca <__smakebuf_r+0x18>
 80047ec:	f023 0303 	bic.w	r3, r3, #3
 80047f0:	f043 0302 	orr.w	r3, r3, #2
 80047f4:	81a3      	strh	r3, [r4, #12]
 80047f6:	e7e2      	b.n	80047be <__smakebuf_r+0xc>
 80047f8:	89a3      	ldrh	r3, [r4, #12]
 80047fa:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80047fe:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004802:	81a3      	strh	r3, [r4, #12]
 8004804:	9b01      	ldr	r3, [sp, #4]
 8004806:	6020      	str	r0, [r4, #0]
 8004808:	b15b      	cbz	r3, 8004822 <__smakebuf_r+0x70>
 800480a:	4630      	mov	r0, r6
 800480c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004810:	f000 f81e 	bl	8004850 <_isatty_r>
 8004814:	b128      	cbz	r0, 8004822 <__smakebuf_r+0x70>
 8004816:	89a3      	ldrh	r3, [r4, #12]
 8004818:	f023 0303 	bic.w	r3, r3, #3
 800481c:	f043 0301 	orr.w	r3, r3, #1
 8004820:	81a3      	strh	r3, [r4, #12]
 8004822:	89a3      	ldrh	r3, [r4, #12]
 8004824:	431d      	orrs	r5, r3
 8004826:	81a5      	strh	r5, [r4, #12]
 8004828:	e7cf      	b.n	80047ca <__smakebuf_r+0x18>
	...

0800482c <_fstat_r>:
 800482c:	b538      	push	{r3, r4, r5, lr}
 800482e:	2300      	movs	r3, #0
 8004830:	4d06      	ldr	r5, [pc, #24]	@ (800484c <_fstat_r+0x20>)
 8004832:	4604      	mov	r4, r0
 8004834:	4608      	mov	r0, r1
 8004836:	4611      	mov	r1, r2
 8004838:	602b      	str	r3, [r5, #0]
 800483a:	f7fd fb03 	bl	8001e44 <_fstat>
 800483e:	1c43      	adds	r3, r0, #1
 8004840:	d102      	bne.n	8004848 <_fstat_r+0x1c>
 8004842:	682b      	ldr	r3, [r5, #0]
 8004844:	b103      	cbz	r3, 8004848 <_fstat_r+0x1c>
 8004846:	6023      	str	r3, [r4, #0]
 8004848:	bd38      	pop	{r3, r4, r5, pc}
 800484a:	bf00      	nop
 800484c:	20000364 	.word	0x20000364

08004850 <_isatty_r>:
 8004850:	b538      	push	{r3, r4, r5, lr}
 8004852:	2300      	movs	r3, #0
 8004854:	4d05      	ldr	r5, [pc, #20]	@ (800486c <_isatty_r+0x1c>)
 8004856:	4604      	mov	r4, r0
 8004858:	4608      	mov	r0, r1
 800485a:	602b      	str	r3, [r5, #0]
 800485c:	f7fd fb01 	bl	8001e62 <_isatty>
 8004860:	1c43      	adds	r3, r0, #1
 8004862:	d102      	bne.n	800486a <_isatty_r+0x1a>
 8004864:	682b      	ldr	r3, [r5, #0]
 8004866:	b103      	cbz	r3, 800486a <_isatty_r+0x1a>
 8004868:	6023      	str	r3, [r4, #0]
 800486a:	bd38      	pop	{r3, r4, r5, pc}
 800486c:	20000364 	.word	0x20000364

08004870 <_init>:
 8004870:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004872:	bf00      	nop
 8004874:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004876:	bc08      	pop	{r3}
 8004878:	469e      	mov	lr, r3
 800487a:	4770      	bx	lr

0800487c <_fini>:
 800487c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800487e:	bf00      	nop
 8004880:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004882:	bc08      	pop	{r3}
 8004884:	469e      	mov	lr, r3
 8004886:	4770      	bx	lr
